aso_update:
    Q_run_status:     "UPDATE alloc_schedule_params 
                          SET last_schedule_run = NULL,
                              child_alloc_no = %s, 
                              last_run_error = %s 
                       WHERE alloc_no = %s;"

    Q_alloc_status:  "UPDATE alloc_head 
                          SET status = %s 
                       WHERE alloc_no = %s;" 

    Q_alloc_type:    "UPDATE alloc_head 
                          SET alloc_type = %s,
                              CREATE_ID = %s,
                              last_update_datetime = NOW() 
                       WHERE alloc_no = %s;"

    c_get_days:       "SELECT cast(code_desc as unsigned) AS DAYS
                          FROM code_detail
                            WHERE code_type ='SADL' AND code = 'DAYS';"

    L_run_eow1:        "SELECT DATE_ADD(%s, INTERVAL (7 - DAYOFWEEK(%s)) % 7 DAY) AS end_of_week FROM dual;"

    query:             "SELECT alloc_no,
                            CASE 
                                WHEN FREQUENCY = 'W' OR last_schedule_run IS NULL 
                                THEN SUBSTR(days_of_week, DAYOFWEEK(%s), 1) 
                                WHEN FREQUENCY = 'B' AND (last_schedule_run_eow + INTERVAL 14 DAY = %s OR last_schedule_run_eow = %s)
                                THEN SUBSTR(days_of_week, DAYOFWEEK(%s), 1) 
                                ELSE '0' 
                            END AS eligible 
                            FROM alloc_schedule_params a
                            WHERE %s BETWEEN COALESCE(start_date, %s) AND COALESCE(end_date, %s);"

    c_get_thread_alloc: "SELECT aasp.alloc_no ,COUNT(1) rec_count 
                                                    FROM alloc_itm_search_dtl aail, alloc_schedule_params aasp 
                                                    WHERE aail.alloc_no  = aasp.alloc_no 
                                                    AND aasp.thread_id = -1 
                                                    GROUP BY aasp.alloc_no 
                                                    ORDER BY 2 ASC;"

    UPDATE_alloc_schedule_params1: "UPDATE alloc_schedule_params 
                                    SET next_schedule_run = %s, 
                                    last_schedule_run_eow = %s, thread_id = -1 
                                    WHERE alloc_no = %s
                                    AND %s ='1';"

    UPDATE_alloc_schedule_params2: "UPDATE alloc_schedule_params 
                                    SET thread_id =  %s
                                    WHERE alloc_no = %s;"
    Update_null: "UPDATE alloc_schedule_params SET thread_id = NULL WHERE thread_id IS NOT NULL;"

    Update_alloc_parms:  "INSERT INTO alloc_schedule_params (alloc_no,
                                                             child_alloc_status, 
                                                             start_date,
                                                             end_date, 
                                                             frequency, 
                                                             days_of_week,
                                                             next_schedule_run, 
                                                             alloc_type, 
                                                             create_id, 
                                                             create_datetime, 
                                                             last_update_id,
                                                             last_update_datetime)
                                    VALUES (%s,
                                            %s,
                                            %s, 
                                            %s, 
                                            %s, 
                                            %s, 
                                            %s, 
                                           'S', 
                                            %s, 
                                            DATE(NOW()), 
                                            %s, 
                                            DATE(NOW()))
                        ON DUPLICATE KEY UPDATE
                        child_alloc_status   = %s,
                        start_date           = %s,
                        end_date             = %s,
                        frequency            = %s,
                        days_of_week         = %s,
                        next_schedule_run    = %s,
                        last_update_id       = %s,
                        last_update_datetime = DATE(NOW());"

    Q_get_schedule_parms: "SELECT alsp.alloc_no, 
                           alsp.child_alloc_status, 
                           al.create_id,
                           CONCAT('Child of ', al.alloc_no, '_', al.alloc_desc) AS child_desc
                    FROM alloc_schedule_params alsp
                    JOIN alloc_head al ON alsp.alloc_no = al.alloc_no
                    WHERE al.status = 'SCHD'
                    AND alsp.next_schedule_run = %s
                    AND COALESCE(alsp.next_schedule_run, DATE_SUB(%s, INTERVAL 10000 DAY)) <> COALESCE(alsp.last_schedule_run, DATE_SUB(%s, INTERVAL 20000 DAY))
                    AND thread_id = %s;"

    Q_UPDATE_alloc_head_1: "UPDATE alloc_head
                                SET alloc_desc = %s, 
                                create_id = %s, 
                                create_datetime = curdate(), 
                                parent_id = %s
                            WHERE alloc_no = %s;"

    Q_UPDATE_alloc_head_2: "UPDATE alloc_head
                                SET release_date = DATE_ADD(%s, INTERVAL %s DAY), 
                                alloc_type ='C', 
                                create_datetime = curdate(),
                                last_update_datetime = curdate(), 
                                batch_ind = 'O'
                            WHERE alloc_no = %s;"

    Q_UPDATE_alloc_location: "UPDATE alloc_location 
                                SET release_date = NULL
                                WHERE loc_group_id IN 
                                   (SELECT loc_group_id 
                                    FROM alloc_loc_group_detail 
                                    WHERE alloc_no = %s) AND release_date <= DATE_ADD(%s, INTERVAL %s DAY);"

    c_get_alloc_level: "SELECT alloc_level   
                            FROM alloc_head
                           WHERE alloc_no = %s;"

    Q_Update_alloc_itm_search_dtl: "with tgt as (
                                    SELECT ailsg.alloc_no,
                                        ailsg.item,
                                        ailsg.diff_id,
                                        ailsg.loc
                                    FROM alloc_itm_search_dtl ailsg, 
                                        (SELECT src.alloc_no,
                                            CASE WHEN %s =
                                             'T' THEN id.item
                                            ELSE id.item_parent
                                            END AS item,
                                            src.diff_id,
                                            src.loc
                                        FROM (
                                            SELECT ailst.alloc_no,
                                                ailst.item,
                                                ailst.diff_id,
                                                ailst.loc
                                            FROM alloc_itm_search_dtl ailst, 
                                                alloc_head alc,
                                                alloc_schedule_params asp                              
                                            WHERE alc.alloc_no = ailst.alloc_no
                                                AND alc.alloc_no = asp.alloc_no                                         
                                                AND alc.status= 'SCHD'
                                                AND asp.end_date >= %s
                                                AND sel_ind='Y'
                                            UNION
                                            SELECT hst.alloc_no,
                                                hst.item,
                                                hst.diff_id,
                                                hst.loc
                                            FROM alloc_itm_search_dtl_hst hst, 
                                                alloc_head alc,
                                                alloc_schedule_params asp                                            
                                            WHERE alc.alloc_no = hst.alloc_no
                                                AND alc.alloc_no = asp.alloc_no                                                 
                                                AND alc.status= 'SCHD'
                                                AND asp.end_date >= %s
                                                AND sel_ind='Y'
                                        )src, 
                                        item_dtl id
                                            WHERE id.item = src.item OR id.item_parent = src.item
                                        ) ailst                
                                            WHERE ailsg.alloc_no  = %s
                                                AND ailst.item      = ailsg.item
                                                AND IFNULL(ailst.diff_id,'$')   = IFNULL(ailsg.diff_id,'$')
                                                AND ailst.loc       = ailsg.loc
                                                AND ailst.alloc_no <> ailsg.alloc_no
                                        )
                                        UPDATE alloc_itm_search_dtl
                                            SET err_ind = 'E',
                                            ERR_MESSAGE =( CASE WHEN %s = 'T' 
                                                                THEN 'SKU and Location combination is already a part of another Scheduled Allocation.'
                                            ELSE 'Style, Color and Location combination is already a part of another Scheduled Allocation.' 
                                            END),
                                            sel_ind='N'   
                                        WHERE (alloc_no,item,diff_id,loc) 
                                           IN (SELECT alloc_no,item,diff_id,loc FROM tgt);"

    c_get_item_source: "SELECT distinct ais.item_source_id item_source_id
                                FROM alloc_item_source_dtl ais, alloc_itm_search_dtl ails
                                WHERE ais.alloc_no = ails.alloc_no
                                    AND  exists (select 1 from alloc_head where status ='SCHD' and alloc_no = ails.alloc_no)
                                    AND ais.item_id = ails.item
                                    AND ais.wh_id = ails.loc
                                    AND IFNULL(ais.diff1_id,'$') =  IFNULL(ails.diff_id,'$')
                                    AND IFNULL(ails.sel_ind,'N') = 'N' /*for update nowait*/;"

    c_get_qty_limit:    "SELECT distinct aql.quantity_limits_id quantity_limits_id
                                FROM alloc_quantity_limits aql, alloc_itm_search_dtl ails
                                WHERE aql.alloc_no = ails.alloc_no
                                    AND  exists (select 1 from alloc_head where status ='SCHD' and alloc_no = ails.alloc_no)
                                    AND aql.item_id = ails.item
                                    AND aql.location_id = ails.loc
                                    AND IFNULL(ails.sel_ind,'N') = 'N' /*for update nowait*/;"

    c_get_allitemloc_temp:  "SELECT distinct acat.alloc_no alloc_no, acat.tran_item tran_item, acat.tran_diff1_id tran_diff1_id, acat.tran_diff2_id tran_diff2_id  
                                FROM alloc_calc_allitemloc acat
                                WHERE  NOT exists (select 1 from alloc_itm_search_dtl ails 
                                   where ails.alloc_no = acat.alloc_no 
                                    and acat.source_item = ails.item
                                AND ( IFNULL(acat.source_diff1_id,'$') = IFNULL(SUBSTR(ails.diff_id, INSTR(ails.diff_id, '~') + 1),'$')
                                 OR   IFNULL(acat.source_diff2_id,'$') = IFNULL(SUBSTR(ails.diff_id, INSTR(ails.diff_id, '~') + 1),'$')
                                 OR   IFNULL(acat.source_diff3_id,'$') = IFNULL(SUBSTR(ails.diff_id, INSTR(ails.diff_id, '~') + 1),'$')
                                 OR   IFNULL(acat.source_diff4_id,'$') = IFNULL(SUBSTR(ails.diff_id, INSTR(ails.diff_id, '~') + 1),'$'))
                                    and IFNULL(ails.sel_ind,'N') = 'Y')
                                AND  exists (select 1 from alloc_head where status ='SCHD' and alloc_no = acat.alloc_no)
                                /*for update nowait*/;"

    c_get_item_loc_search:  "SELECT distinct ails.item, ails.alloc_no ,ails.diff_id, ails.loc
                                FROM alloc_itm_search_dtl ails
                                WHERE IFNULL(ails.SEL_IND, 'N') = 'N'
                                AND  exists (select 1 from alloc_head where status ='SCHD' and alloc_no = ails.alloc_no) /*for update nowait*/;"

    Q_delete_nonavail_1:        "DELETE FROM alloc_like_item_source 
                                       WHERE item_source_id = %s;"

    Q_delete_nonavail_2:        "DELETE FROM alloc_item_source_dtl 
                                       WHERE item_source_id = %s;"

    Q_delete_nonavail_3:        "DELETE FROM alloc_quantity_limits 
                                       WHERE quantity_limits_id = %s;"

    Q_delete_nonavail_4:        "DELETE FROM alloc_calc_allitemloc 
                                       WHERE alloc_no                  = %s 
                                         AND tran_item                 = %s 
                                         AND IFNULL(tran_diff1_id,'$') = IFNULL(%s,'$') 
                                         AND IFNULL(tran_diff2_id,'$') = IFNULL(%s,'$');"

    Q_delete_nonavail_5:        "DELETE FROM alloc_itm_search_dtl 
                                       WHERE alloc_no            = %s 
                                         AND item                = %s 
                                         AND IFNULL(diff_id,'$') = IFNULL(%s,'$') 
                                         AND loc                 = %s;"

    Q_del_alloc_like_item_source:     "DELETE FROM alloc_like_item_source
                                      WHERE EXISTS (SELECT 1
                                                    FROM alloc_item_source_dtl ais, 
                                                        alloc_itm_search_dtl ails
                                                  WHERE ais.item_source_id         = alloc_like_item_source.item_source_id
                                                    AND ais.alloc_no               = %s
                                                    AND ais.alloc_no               = ails.alloc_no
                                                    AND ais.wh_id                  = ails.loc               
                                                    AND COALESCE(ais.diff1_id,'$') =  COALESCE(ails.diff_id,'$')
                                                    AND ais.item_id                = ails.item
                                                    AND COALESCE(ails.sel_ind,'N') = 'N');"
                                                            
    Q_del_alloc_item_source_dtl:     "WITH src 
                                  AS(
                                     SELECT ais.item_source_id
                                       FROM alloc_item_source_dtl ais,
                                            alloc_itm_search_dtl ails 
                                      WHERE ais.alloc_no               = ails.alloc_no
                                        AND ais.alloc_no               = %s
                                        AND ais.wh_id                  = ails.loc
                                        AND COALESCE(ais.diff1_id,'$') =  COALESCE(ails.diff_id,'$')
                                        AND ais.item_id                = ails.item
                                        AND COALESCE(ails.sel_ind,'N') = 'N'
                                     )
                                 DELETE  FROM alloc_item_source_dtl aisd
                                        WHERE EXISTS (SELECT 1 FROM src
                                        WHERE aisd.item_source_id = src.item_source_id);"

    Q_del_alloc_quantity_limits:     "WITH src AS  (SELECT aql.alloc_no, 
                                                             aql.quantity_limits_id, 
                                                             aql.location_id, 
                                                             aql.item_id
                                                        FROM alloc_quantity_limits aql, 
                                                             alloc_calc_allitemloc temp 
                                                       WHERE aql.alloc_no = temp.alloc_no
                                                         AND aql.item_id  = temp.tran_item
                                                         AND aql.alloc_no   = %s
                                                         AND NOT EXISTS(select 1 FROM alloc_itm_search_dtl ails,
                                                                                      alloc_calc_allitemloc acat
                                                       WHERE ails.alloc_no                          = acat.alloc_no 
                                                         AND acat.source_item                       = ails.item
                                                         AND ails.alloc_no                          = %s
                                                         AND (   COALESCE(acat.source_diff1_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$')
                                                              OR COALESCE(acat.source_diff2_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$')
                                                              OR COALESCE(acat.source_diff3_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$')
                                                              OR COALESCE(acat.source_diff4_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$'))
                                                         AND     COALESCE(ails.sel_ind,'N')         = 'Y'))
                                DELETE FROM alloc_quantity_limits aql
                                      WHERE EXISTS (SELECT 1 
                                                           FROM src 
                                                          WHERE aql.alloc_no           = src.alloc_no 
                                                            AND aql.quantity_limits_id = src.quantity_limits_id 
                                                            AND aql.location_id        = src.location_id 
                                                            AND aql.item_id            = src.item_id);"

    Q_del_alloc_calc_allitemloc:     "DELETE FROM alloc_calc_allitemloc acat
                                      WHERE acat.alloc_no = %s
                                            AND NOT EXISTS (select 1 from alloc_itm_search_dtl ails where 
                                                   ails.alloc_no = acat.alloc_no
                                            AND acat.source_item = ails.item
                                            AND (   COALESCE(acat.source_diff1_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$')
                                                 OR COALESCE(acat.source_diff2_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$')
                                                 OR COALESCE(acat.source_diff3_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$')
                                                 OR COALESCE(acat.source_diff4_id,'$') = COALESCE(SUBSTR(ails.diff_id,INSTR (ails.diff_id, '~') + 1),'$'))
                                            AND     COALESCE(ails.sel_ind,'N') = 'Y');"

    Q_del_alloc_itm_search_dtl:     "DELETE FROM alloc_itm_search_dtl
                                      WHERE alloc_no               = %s
                                        AND COALESCE(SEL_IND, 'N') = 'N';"

    c_get_purge_approve_days:       "SELECT cast(code_desc as unsigned) AS DAYS
                                         FROM code_detail
                                        WHERE code_type = 'APAD' AND code = 'APRD';"

    c_get_status:                   "SELECT status, DATE(create_datetime) AS create_date
                                       FROM alloc_head
                                      WHERE alloc_no = %s;"

    c_get_item_search:              "SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS '1'
                                       FROM alloc_itm_search_dtl
                                      WHERE alloc_no = %s;"

    Q_insert_alloc_itm_search_dtl:  "INSERT INTO alloc_itm_search_dtl (
                                            alloc_no,
                                            item,
                                            item_desc,
                                            diff_id,
                                            loc,
                                            HIER1,
                                            HIER2,
                                            HIER3,
                                            holdback_qty,
                                            holdback_type,
                                            avail_qty,
                                            inactive_qty, 
                                            doc_id,
                                            doc_type,
                                            doc_desc,
                                            size_prf_ind,
                                            substitute_ind,
                                            clearance_ind, 
                                            invent_ind,
                                            pack_ind,
                                            inner_size,
                                            case_size,
                                            som_type,
                                            som_qty,
                                            err_message,
                                            sel_ind,
                                            vpn,             
                                            season,          
                                            create_id,
                                            create_datetime,
                                            last_update_id,
                                            last_update_datetime,
                                            err_ind)
                                    SELECT 
                                            alloc_no,
                                            item,
                                            item_desc,
                                            diff_id,
                                            loc,
                                            dept,
                                            class,
                                            subclass,
                                            holdback_qty,
                                            holdback_qty_type,
                                            available_qty,
                                            inactive_qty, 
                                            doc_id,
                                            doc_type,
                                            doc_desc,
                                            size_profile_ind,
                                            substitute_ind,
                                            clearance_ind,
                                            invent_ind,   
                                            pack_ind,
                                            inner_size,
                                            case_size,
                                            calc_multiple,
                                            som_qty,
                                            error_message,
                                            sel_ind,
                                            vpn, 
                                            season,   
                                            create_id,
                                            create_datetime,
                                            last_update_id,
                                            last_update_datetime,
                                            error_ind
                                       FROM alloc_itm_search_dtl_hst tmp
                                      WHERE alloc_no = %s;"

    Q_del_alloc_itm_search_dtl_hst:     "DELETE FROM alloc_itm_search_dtl_hst
                                               WHERE alloc_no = %s;"
                                          
    Q_insert_alloc_calc_source_temp:    "INSERT INTO alloc_calc_source_temp (alloc_no,
                                                item_source_id,
                                                release_date,
                                                item_type,
                                                source_item,
                                                source_item_level,
                                                source_tran_level,
                                                source_pack_ind,
                                                source_diff1_id,
                                                source_diff2_id,
                                                source_diff3_id,
                                                source_diff4_id,
                                                tran_item,
                                                tran_item_level,
                                                tran_tran_level,
                                                tran_pack_ind,
                                                tran_diff1_id,
                                                tran_diff2_id,
                                                tran_diff3_id,
                                                tran_diff4_id,
                                                HIER1,
                                                HIER2,
                                                HIER3,
                                                pack_no,
                                                like_source_item,
                                                like_source_item_level,
                                                like_source_tran_level,
                                                like_source_pack_ind,
                                                like_source_diff1_id,
                                                like_source_diff2_id,
                                                like_source_diff3_id,
                                                like_source_diff4_id,
                                                like_tran_item,
                                                like_tran_item_level,
                                                like_tran_tran_level,
                                                like_tran_pack_ind,
                                                like_tran_diff1_id,
                                                like_tran_diff2_id,
                                                like_tran_diff3_id,
                                                like_tran_diff4_id,
                                                like_HIER1,
                                                like_HIER2,
                                                like_HIER3,
                                                like_pack_no,
                                                like_item_weight,  
                                                create_id,
                                                create_datetime,
                                                last_update_id,
                                                last_update_datetime,
                                                like_size_prof_ind,                                   
                                                som_qty)
                                         SELECT 
                                                alloc_no,
                                                item_source_id,
                                                release_date,
                                                item_type,
                                                source_item,
                                                source_item_level,
                                                source_tran_level,
                                                source_pack_ind,
                                                source_diff1_id,
                                                source_diff2_id,
                                                source_diff3_id,
                                                source_diff4_id,
                                                tran_item,
                                                tran_item_level,
                                                tran_tran_level,
                                                tran_pack_ind,
                                                tran_diff1_id,
                                                tran_diff2_id,
                                                tran_diff3_id,
                                                tran_diff4_id,
                                                dept,
                                                class,
                                                subclass,
                                                pack_no,
                                                like_source_item,
                                                like_source_item_level,
                                                like_source_tran_level,
                                                like_source_pack_ind,
                                                like_source_diff1_id,
                                                like_source_diff2_id,
                                                like_source_diff3_id,
                                                like_source_diff4_id,
                                                like_tran_item,
                                                like_tran_item_level,
                                                like_tran_tran_level,
                                                like_tran_pack_ind,
                                                like_tran_diff1_id,
                                                like_tran_diff2_id,
                                                like_tran_diff3_id,
                                                like_tran_diff4_id,
                                                like_dept,
                                                like_class,
                                                like_subclass,
                                                like_pack_no,
                                                like_item_weight,  
                                                create_id,
                                                create_datetime,
                                                last_update_id,
                                                last_update_datetime,
                                                like_size_prof_ind,                                   
                                                som_qty
                                           FROM alloc_calc_source_hst tmp
                                          WHERE alloc_no = %s;"

    Q_del_alloc_calc_source_hst:          "DELETE FROM alloc_calc_source_hst tmp            
                                           WHERE alloc_no = %s;"

    c_get_rule_rec:                       "SELECT * FROM alloc_rule 
                                                  WHERE alloc_no = %s;"

    Q_del_alc_quantity_limits:            "WITH src AS (SELECT alloc_no,
                                                              item_id,
                                                              location_id
                                                       FROM alloc_quantity_limits ql
                                                      WHERE alloc_no = %s		
                                                        AND NOT EXISTS (SELECT tmp.alloc_no,
                                                                               tmp.tran_item      item_id,
                                                                               tmp.to_loc    location_id
                                                                          FROM (SELECT alc.alloc_no,
                                                                                       alc.tran_item,
                                                                                       alc.to_loc
                                                                                  FROM alloc_calc_allitemloc alc
                                                                                 WHERE alloc_no = %s
                                                                                   AND COALESCE(item_type,'$') = 'NSFSP'
                                                                                 UNION
                                                                                SELECT alloc_no,
                                                                                       tran_item,
                                                                                       to_loc
                                                                                  FROM alloc_calc_allitemloc
                                                                                 WHERE alloc_no = %s
                                                                                   AND coalesce(item_type,'$') <> 'NSFSP') tmp
                                                                         WHERE tmp.tran_item != ql.item_id 
                                                                           AND tmp.to_loc != ql.location_id 
                                                                           AND tmp.alloc_no = ql.alloc_no))
                                                      DELETE FROM alloc_quantity_limits aql
                                                                         WHERE EXISTS (SELECT 1
                                                                          FROM src
                                                                         WHERE src.alloc_no = aql.alloc_no
                                                                           AND src.item_id = aql.item_id
                                                                           AND src.location_id = aql.location_id);"

    c_get_item_loc:                        "SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS '1'
                                              FROM alloc_calc_item_loc
                                             WHERE alloc_no = %s;"

    Q_insert_alloc_calc_item_loc:          "INSERT INTO alloc_calc_item_loc (
                                                   alloc_no,
                                                   tran_item,
                                                   source_item,
                                                   diff_id,
                                                   wh_id,
                                                   order_no,
                                                   to_loc,
                                                   assign_default_wh,
                                                   need_value,
                                                   total_need_value,
                                                   total_avail_qty,
                                                   trend,
                                                   wos,
                                                   MIN,
                                                   MAX,
                                                   treshold,
                                                   min_need,
                                                   min_pack,
                                                   max_pack,
                                                   avail_qty,
                                                   sku_avail_qty,
                                                   hold_back_pct_flag,
                                                   hold_back_value,
                                                   total_need_count,
                                                   ownership_ratio,
                                                   sku_ownership_ratio,
                                                   size_profile_ind,
                                                   size_profile_id,
                                                   size_profile_qty,
                                                   total_profile_qty,
                                                   rule_type,
                                                   rule_level,
                                                   exact_ind,
                                                   net_need_ind,
                                                   gross_need_no_own_ship,
                                                   sku_gross_need_no_own_ship,
                                                   stock_on_hand,
                                                   on_order,
                                                   on_alloc,
                                                   alloc_out,
                                                   in_transit_qty,
                                                   backorder_qty,
                                                   gross_need,
                                                   calc_qty,
                                                   sku_calc_qty,
                                                   sku_calc_qty_bfr_qtlm,
                                                   sku_calc_qty_bfr_sprd,
                                                   alloc_sku_calc_qty,
                                                   som_qty,
                                                   alloc_qty,
                                                   status,
                                                   error_message_txt,
                                                   create_id,
                                                   create_datetime,
                                                   last_update_id,
                                                   last_update_datetime,
                                                   wh_on_alloc_qty)        
                                            SELECT 
                                                   alloc_no,
                                                   tran_item,
                                                   source_item,
                                                   diff_id,
                                                   wh_id,
                                                   order_no,
                                                   to_loc,
                                                   assign_default_wh,
                                                   need_value,
                                                   total_need_value,
                                                   total_avail_qty,
                                                   trend,
                                                   wos,
                                                   MIN,
                                                   MAX,
                                                   treshold,
                                                   min_need,
                                                   min_pack,
                                                   max_pack,
                                                   avail_qty,
                                                   sku_avail_qty,
                                                   hold_back_pct_flag,
                                                   hold_back_value,
                                                   total_need_count,
                                                   ownership_ratio,
                                                   sku_ownership_ratio,
                                                   size_profile_ind,
                                                   size_profile_id,
                                                   size_profile_qty,
                                                   total_profile_qty,
                                                   rule_type,
                                                   rule_level,
                                                   exact_ind,
                                                   net_need_ind,
                                                   gross_need_no_own_ship,
                                                   sku_gross_need_no_own_ship,
                                                   stock_on_hand,
                                                   on_order,
                                                   on_alloc,
                                                   alloc_out,
                                                   in_transit_qty,
                                                   backorder_qty,
                                                   gross_need,
                                                   calc_qty,
                                                   sku_calc_qty,
                                                   sku_calc_qty_bfr_qtlm,
                                                   sku_calc_qty_bfr_sprd,
                                                   alloc_sku_calc_qty,
                                                   som_qty,
                                                   alloc_qty,
                                                   status,
                                                   error_message_txt,
                                                   create_id,
                                                   create_datetime,
                                                   last_update_id,
                                                   last_update_datetime,
                                                   wh_on_alloc_qty               
                                              FROM alloc_calc_item_loc_hst tmp
                                             WHERE alloc_no = %s;"

    Q_del_alloc_calc_item_loc_hst:          "DELETE FROM alloc_calc_item_loc_hst
                                              WHERE alloc_no = %s;"
    Q_get_param: "SELECT ALLOC_NO,
                         CHILD_ALLOC_STATUS,
                         START_DATE,
                         END_DATE,
                         FREQUENCY,
                         /*COALESCE(SUBSTR(DAYS_OF_WEEK,1,1),0) DAY_1,
                         COALESCE(SUBSTR(DAYS_OF_WEEK,2,1),0) DAY_2,
                         COALESCE(SUBSTR(DAYS_OF_WEEK,3,1),0) DAY_3,
                         COALESCE(SUBSTR(DAYS_OF_WEEK,4,1),0) DAY_4,
                         COALESCE(SUBSTR(DAYS_OF_WEEK,5,1),0) DAY_5,
                         COALESCE(SUBSTR(DAYS_OF_WEEK,6,1),0) DAY_6,
                         COALESCE(SUBSTR(DAYS_OF_WEEK,7,1),0) DAY_7,*/
                         DAYS_OF_WEEK,
                         CREATE_ID,
                         CREATE_DATETIME,
                         LAST_UPDATE_ID,
                         LAST_UPDATE_DATETIME
                    FROM alloc_schedule_params
                   WHERE alloc_no = %s;"
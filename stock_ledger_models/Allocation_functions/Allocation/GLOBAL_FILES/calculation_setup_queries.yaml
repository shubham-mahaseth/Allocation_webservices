#############################################################
# Created By - Priyanshu Pandey                             #                
# File Name - calculation_setup_queries.yaml                #
# Purpose - contains all queries for calc setup             #
#############################################################

pop_calc_destination:
  Q_rfrsh_allitemloc: "DELETE FROM alloc_calc_allitemloc
                        WHERE alloc_no = %s
                          AND item_loc_status IS NULL
                          AND %s = 'Y';"                #wh_store_rel_ind

  Q_chk_alloc: "SELECT COALESCE(MAX(alloc_criteria),'$') alloc_criteria
                       ,COALESCE(MAX(status),'$') status
                       ,COALESCE(MAX(alloc_type),'$') alloc_type
                       ,COALESCE(MAX(alloc_level),'$') alloc_level
                       ,COALESCE(MAX(wh_store_rel_ind),'$') wh_store_rel_ind
                  FROM alloc_head
                 WHERE alloc_no = %s;"

  #Changes by shubham start# 
  # Q_fetch_allitemloc: "SELECT DISTINCT ailt.alloc_no,
                              # NULL        item_type, 
                              # ailt.source_item,
                              # ailt.source_item_level,
                              # ailt.source_tran_level,
                              # ailt.source_pack_ind,
                              # ailt.source_diff1_id,
                              # ailt.source_diff2_id,
                              # ailt.source_diff3_id,
                              # ailt.source_diff4_id,
                              # ailt.tran_item,
                              # ailt.tran_item_level,
                              # ailt.tran_tran_level,
                              # ailt.tran_pack_ind,
                              # ailt.tran_diff1_id,
                              # ailt.tran_diff2_id,
                              # ailt.tran_diff3_id,
                              # ailt.tran_diff4_id,
                              # ailt.hier1,
                              # ailt.hier2,
                              # ailt.hier3,
                              # ailt.to_loc,
                              # ailt.to_loc_type,
                              # ailt.to_loc_name,
                              # ailt.sister_store,
                              # ailt.sister_store_weight,
                              # ailt.assign_default_wh,
                              # ailt.clear_ind,
                              # ailt.item_loc_status,
                              # ailt.size_profile_qty,
                              # NULL total_profile_qty,
                              # ailt.stock_on_hand,
                              # ailt.on_order,
                              # ailt.on_alloc,
                              # NULL alloc_out,
                              # ailt.in_transit_qty,
                              # NULL backorder_qty,
                              # COALESCE(ailt.need_value,0) need_value,
                              # ailt.rloh_current_value,
                              # ailt.rloh_future_value,
                              # ailt.like_source_item,
                              # ailt.like_source_item_level,
                              # ailt.like_source_tran_level,
                              # ailt.like_source_pack_ind,
                              # ailt.like_source_diff1_id,
                              # ailt.like_source_diff2_id,
                              # ailt.like_source_diff3_id,
                              # ailt.like_source_diff4_id,
                              # ailt.like_tran_item,
                              # ailt.like_tran_item_level,
                              # ailt.like_tran_tran_level,
                              # ailt.like_tran_pack_ind,
                              # ailt.like_tran_diff1_id,
                              # ailt.like_tran_diff2_id,
                              # ailt.like_tran_diff3_id,
                              # ailt.like_tran_diff4_id,
                              # ailt.like_hier1,
                              # ailt.like_hier2,
                              # ailt.like_hier3,
                              # ailt.like_pack_no,
                              # ailt.like_item_weight,
                              # ailt.like_size_prof_ind,
                              # USER()        create_id,
                              # SYSDATE()    create_datetime,
                              # USER()        last_update_id,
                              # SYSDATE()     last_update_datetime
                         # FROM alloc_calc_allitemloc ailt
                        # WHERE ailt.alloc_no = %s;"
  #Changes by shubham end#

  Q_del_calc_destination: "DELETE FROM alloc_calc_destination_temp WHERE alloc_no = %s"

  #Changes by shubham start#   
  # Q_insert_calc_destination: "INSERT INTO alloc_calc_destination_temp (alloc_no
                                                                      # ,item_type
                                                                      # ,source_item
                                                                      # ,source_item_level
                                                                      # ,source_tran_level
                                                                      # ,source_pack_ind
                                                                      # ,source_diff1_id
                                                                      # ,source_diff2_id
                                                                      # ,source_diff3_id
                                                                      # ,source_diff4_id
                                                                      # ,tran_item
                                                                      # ,tran_item_level
                                                                      # ,tran_tran_level
                                                                      # ,tran_pack_ind
                                                                      # ,tran_diff1_id
                                                                      # ,tran_diff2_id
                                                                      # ,tran_diff3_id
                                                                      # ,tran_diff4_id
                                                                      # ,hier1
                                                                      # ,hier2
                                                                      # ,hier3
                                                                      # ,to_loc
                                                                      # ,to_loc_type
                                                                      # ,to_loc_name
                                                                      # ,sister_store
                                                                      # ,sister_store_weight
                                                                      # ,assign_default_wh
                                                                      # ,clear_ind
                                                                      # ,item_loc_status
                                                                      # ,size_profile_qty
                                                                      # ,total_profile_qty
                                                                      # ,stock_on_hand
                                                                      # ,on_order
                                                                      # ,on_alloc
                                                                      # ,alloc_out
                                                                      # ,in_transit_qty
                                                                      # ,backorder_qty
                                                                      # ,need_value
                                                                      # ,rloh_current_value
                                                                      # ,rloh_future_value
                                                                      # ,like_source_item
                                                                      # ,like_source_item_level
                                                                      # ,like_source_tran_level
                                                                      # ,like_source_pack_ind
                                                                      # ,like_source_diff1_id
                                                                      # ,like_source_diff2_id
                                                                      # ,like_source_diff3_id
                                                                      # ,like_source_diff4_id
                                                                      # ,like_tran_item
                                                                      # ,like_tran_item_level
                                                                      # ,like_tran_tran_level
                                                                      # ,like_tran_pack_ind
                                                                      # ,like_tran_diff1_id
                                                                      # ,like_tran_diff2_id
                                                                      # ,like_tran_diff3_id
                                                                      # ,like_tran_diff4_id
                                                                      # ,like_hier1
                                                                      # ,like_hier2
                                                                      # ,like_hier3
                                                                      # ,like_pack_no
                                                                      # ,like_weight
                                                                      # ,like_size_prof_ind
                                                                      # ,create_id
                                                                      # ,create_datetime
                                                                      # ,last_update_id
                                                                      # ,last_update_datetime)
                             # VALUES(%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s
                                    # ,%s);"
                               
  Q_insert_calc_destination: "INSERT INTO alloc_calc_destination_temp (alloc_no
                                                                      ,item_type
                                                                      ,source_item
                                                                      ,source_item_level
                                                                      ,source_tran_level
                                                                      ,source_pack_ind
                                                                      ,source_diff1_id
                                                                      ,source_diff2_id
                                                                      ,source_diff3_id
                                                                      ,source_diff4_id
                                                                      ,tran_item
                                                                      ,tran_item_level
                                                                      ,tran_tran_level
                                                                      ,tran_pack_ind
                                                                      ,tran_diff1_id
                                                                      ,tran_diff2_id
                                                                      ,tran_diff3_id
                                                                      ,tran_diff4_id
                                                                      ,hier1
                                                                      ,hier2
                                                                      ,hier3
                                                                      ,to_loc
                                                                      ,to_loc_type
                                                                      ,to_loc_name
                                                                      ,sister_store
                                                                      ,sister_store_weight
                                                                      ,assign_default_wh
                                                                      ,clear_ind
                                                                      ,item_loc_status
                                                                      ,size_profile_qty
                                                                      ,total_profile_qty
                                                                      ,stock_on_hand
                                                                      ,on_order
                                                                      ,on_alloc
                                                                      ,alloc_out
                                                                      ,in_transit_qty
                                                                      ,backorder_qty
                                                                      ,need_value
                                                                      ,rloh_current_value
                                                                      ,rloh_future_value
                                                                      ,like_source_item
                                                                      ,like_source_item_level
                                                                      ,like_source_tran_level
                                                                      ,like_source_pack_ind
                                                                      ,like_source_diff1_id
                                                                      ,like_source_diff2_id
                                                                      ,like_source_diff3_id
                                                                      ,like_source_diff4_id
                                                                      ,like_tran_item
                                                                      ,like_tran_item_level
                                                                      ,like_tran_tran_level
                                                                      ,like_tran_pack_ind
                                                                      ,like_tran_diff1_id
                                                                      ,like_tran_diff2_id
                                                                      ,like_tran_diff3_id
                                                                      ,like_tran_diff4_id
                                                                      ,like_hier1
                                                                      ,like_hier2
                                                                      ,like_hier3
                                                                      ,like_pack_no
                                                                      ,like_weight
                                                                      ,like_size_prof_ind
                                                                      ,create_id
                                                                      ,create_datetime
                                                                      ,last_update_id
                                                                      ,last_update_datetime)
                       SELECT DISTINCT ailt.alloc_no,
                              CASE WHEN %s ='T' THEN ailt.item_type ELSE NULL END AS item_type,  
                              ailt.source_item,
                              ailt.source_item_level,
                              ailt.source_tran_level,
                              ailt.source_pack_ind,
                              ailt.source_diff1_id,
                              ailt.source_diff2_id,
                              ailt.source_diff3_id,
                              ailt.source_diff4_id,
                              ailt.tran_item,
                              ailt.tran_item_level,
                              ailt.tran_tran_level,
                              ailt.tran_pack_ind,
                              ailt.tran_diff1_id,
                              ailt.tran_diff2_id,
                              ailt.tran_diff3_id,
                              ailt.tran_diff4_id,
                              ailt.hier1,
                              ailt.hier2,
                              ailt.hier3,
                              ailt.to_loc,
                              ailt.to_loc_type,
                              ailt.to_loc_name,
                              ailt.sister_store,
                              ailt.sister_store_weight,
                              ailt.assign_default_wh,
                              ailt.clear_ind,
                              ailt.item_loc_status,
                              ailt.size_profile_qty,
                              NULL total_profile_qty,
                              ailt.stock_on_hand,
                              ailt.on_order,
                              ailt.on_alloc,
                              NULL alloc_out,
                              ailt.in_transit_qty,
                              NULL backorder_qty,
                              COALESCE(ailt.need_value,0) need_value,
                              ailt.rloh_current_value,
                              ailt.rloh_future_value,
                              ailt.like_source_item,
                              ailt.like_source_item_level,
                              ailt.like_source_tran_level,
                              ailt.like_source_pack_ind,
                              ailt.like_source_diff1_id,
                              ailt.like_source_diff2_id,
                              ailt.like_source_diff3_id,
                              ailt.like_source_diff4_id,
                              ailt.like_tran_item,
                              ailt.like_tran_item_level,
                              ailt.like_tran_tran_level,
                              ailt.like_tran_pack_ind,
                              ailt.like_tran_diff1_id,
                              ailt.like_tran_diff2_id,
                              ailt.like_tran_diff3_id,
                              ailt.like_tran_diff4_id,
                              ailt.like_hier1,
                              ailt.like_hier2,
                              ailt.like_hier3,
                              ailt.like_pack_no,
                              ailt.like_item_weight,
                              ailt.like_size_prof_ind,
                              USER()        create_id,
                              SYSDATE()    create_datetime,
                              USER()        last_update_id,
                              SYSDATE()     last_update_datetime
                         FROM alloc_calc_allitemloc ailt
                        WHERE ailt.alloc_no = %s;"                                   
  #Changes by shubham end#

pop_inv_buckets:
  #Changes by shubham start#
  Q_fetch_rule: "SELECT CASE 
                           WHEN on_order_commit_weeks IS NOT NULL 
                           THEN DATE_ADD(curdate(),INTERVAL (on_order_commit_weeks * 7) DAY)
                           WHEN on_order_commit_date IS NOT NULL
                           THEN on_order_commit_date
                       END commit_date,
                       use_rule_level_on_hand_ind
                  FROM alloc_rule
                 WHERE alloc_no = %s;"
                 
  # Q_merge_soh: "WITH
                    # dr
                    # AS
                       # (SELECT tmp.alloc_no,
                               # tmp.tran_item,
                               # tmp.to_loc,
                               # SUM(
                                   # GREATEST(
                                              # GREATEST (ils.item_soh,0)
                                            # - (GREATEST (ils.reserved_qty,0)
                                            # + GREATEST (ils.rtv_qty,0)
                                            # + GREATEST (ils.non_sellable_qty,0)
                                            # + GREATEST (ils.cust_resv_qty, 0))
                                                                            # ,0)) stock_on_hand,
                               # SUM(
                                   # GREATEST(ils.shipped_qty, 0)
                                   # ) in_transit_qty,
                               # SUM(
                                   # GREATEST(ils.expected_qty, 0)
                                   # ) tsf_expected_qty,
                               # SUM(
                                   # GREATEST (ils.reserved_qty, 0)
                                   # ) tsf_resv_qty,
                               # SUM(
                                   # GREATEST(ils.backorder_qty,0)
                                   # ) backorder_qty
                          # FROM alloc_calc_destination_temp tmp,
                               # subs_item_dtl               sd,
                               # item_location               ils
                        # WHERE tmp.alloc_no     = %s
                          # AND tmp.tran_item    = sd.item
                          # AND tmp.to_loc       = sd.location
                          # AND sd.use_stock_ind = 'Y'
                          # AND curdate()       >= sd.start_date
                          # AND curdate()       <= sd.end_date
                          # AND sd.sub_item      = ils.item
                          # AND tmp.to_loc       = ils.location
                     # GROUP BY tmp.alloc_no, 
                              # tmp.tran_item, 
                              # tmp.to_loc)
                    # ,use_this 
                           # AS (SELECT tmp.alloc_no,
                                      # tmp.tran_item,
                                      # tmp.to_loc,
                                      # GREATEST(                         
                                                 # GREATEST (ils.item_soh, 0)
                                               # - GREATEST (ils.rtv_qty, 0)
                                               # - GREATEST (ils.non_sellable_qty, 0)
                                               # - GREATEST (ils.cust_resv_qty, 0)
                                               # + COALESCE (dr.stock_on_hand, 0)
                                               # ,0) stock_on_hand,
                                      # GREATEST (ils.shipped_qty, 0)
                                      # + COALESCE (dr.in_transit_qty, 0) in_transit_qty,
                                      # GREATEST (ils.expected_qty, 0)
                                      # + COALESCE (dr.tsf_expected_qty, 0) tsf_expected_qty,
                                      # GREATEST (ils.reserved_qty, 0)
                                      # + COALESCE (dr.tsf_resv_qty, 0) tsf_resv_qty,
                                      # GREATEST (ils.backorder_qty, 0)
                                      # + COALESCE (dr.backorder_qty, 0) backorder_qty
                                 # FROM alloc_calc_destination_temp  tmp
                                 # LEFT JOIN dr 
                                        # ON(    tmp.alloc_no  = dr.alloc_no
                                           # AND tmp.tran_item = dr.tran_item
                                           # AND tmp.to_loc    = dr.to_loc)
                                 # JOIN item_location ils
                                   # ON (    ils.item     = tmp.tran_item
                                       # AND ils.location = tmp.to_loc)
                                 # WHERE tmp.alloc_no = %s)

                # UPDATE alloc_calc_destination_temp target, use_this
                   # SET target.stock_on_hand  = COALESCE(use_this.stock_on_hand,0),
                       # target.in_transit_qty = COALESCE(use_this.in_transit_qty,0), 
                       # target.alloc_out      = COALESCE(use_this.tsf_resv_qty,0),
                       # target.on_alloc       = 0,
                       # target.backorder_qty  = 0,
                       # target.on_order       = 0
                 # WHERE target.alloc_no  = use_this.alloc_no
                   # AND target.to_loc    = use_this.to_loc
                   # AND target.tran_item = use_this.tran_item;"

  Q_merge_calc_destination_temp_1: "WITH use_this
                                       AS(WITH
                                            dr
                                            AS (  SELECT tmp.alloc_no,
                                                          tmp.tran_item,
                                                          tmp.to_loc,
                                                          SUM(GREATEST(
                                                                GREATEST(COALESCE(ils.item_soh,0), 0)
                                                              + GREATEST(COALESCE(ils.pack_comp_soh,0), 0)
                                                              - (  GREATEST(COALESCE(ils.rtv_qty,0), 0)
                                                                 + GREATEST(COALESCE(ils.non_sellable_qty,0),
                                                                             0)
                                                                 + GREATEST(
                                                                       COALESCE(ils.pack_comp_non_sellable,0),
                                                                       0)
                                                                 + GREATEST(COALESCE(ils.cust_resv_qty,0), 0)
                                                                 + GREATEST(
                                                                       COALESCE(ils.pack_comp_cust_resv,0),
                                                                       0)),0))
                                                              item_soh,
                                                          SUM(
                                                                GREATEST(COALESCE(ils.shipped_qty,0), 0)
                                                              + GREATEST(COALESCE(ils.pack_comp_intran,0), 0))
                                                              in_transit_qty,                
                                                          SUM(
                                                                GREATEST(COALESCE(ils.expected_qty,0), 0)
                                                              + GREATEST(COALESCE(ils.pack_comp_exp,0), 0))
                                                              tsf_expected_qty,              
                                                          SUM(
                                                                GREATEST(COALESCE(ils.reserved_qty,0), 0)
                                                              + GREATEST(COALESCE(ils.pack_comp_resv,0), 0))
                                                              tsf_resv_qty,                  
                                                          SUM(
                                                                GREATEST(COALESCE(ils.backorder_qty,0),
                                                                          0)
                                                              + GREATEST(COALESCE(ils.pack_comp_cust_back,0),
                                                                          0))
                                                              backorder_qty
                                                     FROM alloc_calc_destination_temp tmp,
                                                          subs_item_dtl               sd,
                                                          item_location                 ils
                                                    WHERE     tmp.alloc_no = %s
                                                          AND tmp.tran_item = sd.item
                                                          AND tmp.to_loc = sd.location
                                                          AND sd.use_stock_ind = 'Y'
                                                          AND curdate() >= sd.start_date
                                                          AND curdate() <= sd.end_date
                                                          AND sd.sub_item = ils.item
                                                          AND tmp.to_loc = ils.location
                                                 GROUP BY tmp.alloc_no,
                                                          tmp.tran_item, tmp.to_loc)
                                        SELECT tmp.alloc_no,
                                               tmp.tran_item,
                                               tmp.to_loc,
                                                 GREATEST(
                                                 GREATEST(COALESCE(ils.item_soh,0), 0)
                                               + GREATEST(COALESCE(ils.pack_comp_soh,0), 0)
                                               - GREATEST(COALESCE(ils.rtv_qty,0), 0)
                                               - GREATEST(COALESCE(ils.non_sellable_qty,0), 0)
                                               - GREATEST(COALESCE(ils.pack_comp_non_sellable,0), 0)
                                               - GREATEST(COALESCE(ils.cust_resv_qty,0), 0)
                                               - GREATEST(COALESCE(ils.pack_comp_cust_resv,0), 0)
                                               + COALESCE (dr.item_soh, 0)
                                               ,0)
                                                   item_soh,
                                                 GREATEST(COALESCE(ils.shipped_qty,0), 0)
                                               + GREATEST(COALESCE(ils.pack_comp_intran,0), 0)
                                               + COALESCE(dr.in_transit_qty, 0)
                                                   in_transit_qty,
                                                 GREATEST(COALESCE(ils.expected_qty,0), 0)
                                               + GREATEST(COALESCE(ils.pack_comp_exp,0), 0)
                                               + COALESCE(dr.tsf_expected_qty, 0)
                                                   tsf_expected_qty,
                                                 GREATEST(COALESCE(ils.reserved_qty,0), 0)
                                               + GREATEST(COALESCE(ils.pack_comp_resv,0), 0)
                                               + COALESCE(dr.tsf_resv_qty, 0)
                                                   tsf_resv_qty,
                                                 GREATEST(COALESCE(ils.backorder_qty,0), 0)
                                               + GREATEST(COALESCE(ils.pack_comp_cust_back,0), 0)
                                               + COALESCE(dr.backorder_qty, 0)
                                                   backorder_qty
                                          FROM alloc_calc_destination_temp  tmp
                                               JOIN item_location ils
                                                       ON (    ils.item     = tmp.tran_item
                                                           AND ils.location = tmp.to_loc)
                                               LEFT JOIN dr
                                                            ON(    tmp.alloc_no  = dr.alloc_no
                                                               AND tmp.tran_item = dr.tran_item
                                                               AND tmp.to_loc    = dr.to_loc)
                                         WHERE     tmp.alloc_no = %s
                                               AND ils.item = tmp.tran_item
                                               AND ils.location = tmp.to_loc)
                                    UPDATE alloc_calc_destination_temp target, use_this                          
                                       SET target.stock_on_hand  = CASE WHEN %s='Y' THEN use_this.item_soh ELSE 0 END,
                                            target.in_transit_qty = use_this.in_transit_qty,
                                            target.on_alloc       = 0,
                                            target.alloc_out      = use_this.tsf_resv_qty,
                                            target.backorder_qty  = 0,
                                            target.on_order       = 0
                                      WHERE target.alloc_no  = use_this.alloc_no
                                        AND target.to_loc    = use_this.to_loc
                                        AND target.tran_item = use_this.tran_item;" 
                                        
  # Q_merge_tsf_in_transit: "WITH
                        # il_explode
                        # AS
                        # (SELECT tmp.alloc_no,
                                # tmp.source_item,
                                # tmp.tran_item     item,
                                # tmp.to_loc        loc,
                                # 1                 pack_multiplier,
                                # tmp.tran_item     tran_item
                           # FROM alloc_calc_destination_temp tmp
                          # WHERE tmp.alloc_no = %s
                            # AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                         # UNION ALL                           
                         # /*substitue item*/                     
                         # SELECT tmp.alloc_no,
                                # tmp.source_item,
                                # sd.sub_item       item,
                                # tmp.to_loc        loc,
                                # 1                 pack_multiplier,
                                # tmp.tran_item     tran_item
                           # FROM alloc_calc_destination_temp  tmp,
                                # subs_item_dtl             sd
                          # WHERE     tmp.alloc_no = %s
                                # AND tmp.tran_item = sd.item
                                # AND tmp.to_loc = sd.location
                                # AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                # AND sd.use_stock_ind = 'Y'
                                # AND curdate() >= (sd.start_date)
                                # AND curdate() <= (sd.end_date))
                      # ,use_this 
                      # AS
                      # (SELECT il_explode.alloc_no,
                              # il_explode.loc,
                              # il_explode.tran_item,
                              # COALESCE(SUM(il_explode.pack_multiplier * (d.transfered_qty - COALESCE(d.shipped_qty, 0) - COALESCE(d.cancelled_qty, 0))),0) co_on_alloc,
                              # COALESCE(SUM(il_explode.pack_multiplier * (d.shipped_qty - COALESCE(d.received_qty, 0))),0) co_intran
                         # FROM tsf_dtl h, 
                              # tsf_item_loc d, 
                              # il_explode
                        # WHERE h.tsf_id = d.tsf_id
                          # AND h.to_location = il_explode.loc
                          # AND h.status IN ('A',
                                           # 'S',
                                           # 'P',
                                           # 'L')
                          # AND h.tsf_type = 'CO'
                          # AND d.item = il_explode.item
                          # AND d.transfered_qty > COALESCE(d.shipped_qty, 0) + COALESCE(d.cancelled_qty, 0)
                       # GROUP BY il_explode.alloc_no,
                             # il_explode.loc,
                             # il_explode.tran_item)
                 
                    # UPDATE alloc_calc_destination_temp target,use_this 
                       # SET target.in_transit_qty = target.in_transit_qty - use_this.co_intran
                     # WHERE target.alloc_no = use_this.alloc_no 
                       # AND target.to_loc = use_this.loc
                       # AND target.tran_item = use_this.tran_item;"

  Q_merge_tsf_in_transit_sku: "WITH
                                use_this
                                AS (WITH
                                    il_explode
                                    AS
                                        (SELECT tmp.alloc_no,
                                                tmp.source_item,
                                                tmp.tran_item     item,
                                                tmp.to_loc        loc,
                                                1                 pack_multiplier,
                                                tmp.tran_item     tran_item
                                           FROM alloc_calc_destination_temp tmp
                                          WHERE tmp.alloc_no = %s
                                            AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                         UNION ALL
                                         SELECT DISTINCT tmp.alloc_no,
                                                tmp.source_item,
                                                b.pack_no           item,
                                                tmp.to_loc          loc,
                                                b.pack_item_qty     pack_multiplier,
                                                b.item tran_item
                                           FROM alloc_calc_destination_temp  tmp,
                                                packitem_breakout              b
                                          WHERE tmp.tran_item = b.pack_no 
                                            AND tmp.alloc_no = %s
                                            AND tmp.item_type = 'NSFSP'
                                         UNION ALL                             
                                         SELECT tmp.alloc_no,
                                                tmp.source_item,
                                                sd.sub_item       item,
                                                tmp.to_loc        loc,
                                                1                 pack_multiplier,
                                                tmp.tran_item     tran_item
                                           FROM alloc_calc_destination_temp  tmp,
                                                subs_item_dtl                 sd
                                          WHERE     tmp.alloc_no = %s
                                                AND tmp.tran_item = sd.item
                                                AND tmp.to_loc = sd.location
                                                AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                                AND sd.use_stock_ind = 'Y'
                                                AND curdate() >= sd.start_date
                                                AND curdate() <= sd.end_date)
                                  SELECT il_explode.alloc_no,
                                         il_explode.loc,
                                         il_explode.tran_item,
                                         COALESCE (SUM(il_explode.pack_multiplier * (d.transfered_qty - COALESCE (d.shipped_qty, 0) - COALESCE (d.cancelled_qty, 0))),0)    co_on_alloc,
                                         COALESCE (SUM(il_explode.pack_multiplier * (d.shipped_qty - COALESCE (d.received_qty, 0))),0)    co_intran
                                    FROM tsf_dtl h, 
                                         tsf_item_loc d, 
                                         il_explode
                                   WHERE h.tsf_id = d.tsf_id
                                     AND h.to_location = il_explode.loc
                                     AND h.status IN ('A','S','P','L')
                                     AND h.tsf_type = 'CO'
                                     AND d.item = il_explode.item
                                     AND d.transfered_qty > COALESCE (d.shipped_qty, 0) + COALESCE (d.cancelled_qty, 0)
                                   GROUP BY il_explode.alloc_no,
                                         il_explode.loc,
                                         il_explode.tran_item)
                        UPDATE alloc_calc_destination_temp target, use_this  
                           SET target.in_transit_qty = target.in_transit_qty - use_this.co_intran
                           WHERE target.alloc_no = use_this.alloc_no
                                AND target.to_loc = use_this.loc
                                AND target.tran_item = use_this.tran_item;"
                                
  Q_merge_tsf_in_transit_style: "WITH
                                    use_this
                                        AS(WITH
                                            il_explode
                                            AS
                                                (SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        tmp.tran_item     item,
                                                        tmp.to_loc        loc,
                                                        1                 pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp tmp
                                                  WHERE tmp.alloc_no = %s
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        b.pack_no           item,
                                                        tmp.to_loc          loc,
                                                        b.pack_item_qty     pack_multiplier,
                                                        tmp.tran_item       tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        packitem_breakout              b
                                                  WHERE     tmp.tran_item = b.item
                                                        AND tmp.alloc_no = %s
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        p.pack_no         item,
                                                        tmp.to_loc        loc,
                                                        p.pack_qty        pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        packitem                       p
                                                  WHERE     tmp.tran_item_level =
                                                            tmp.tran_tran_level
                                                        AND tmp.tran_pack_ind = 'Y'
                                                        AND tmp.tran_item = p.item
                                                        AND tmp.alloc_no = %s
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        sd.sub_item       item,
                                                        tmp.to_loc        loc,
                                                        1                 pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        subs_item_dtl                 sd
                                                  WHERE     tmp.alloc_no = %s
                                                        AND tmp.tran_item = sd.item
                                                        AND tmp.to_loc = sd.location
                                                        AND sd.use_stock_ind = 'Y'
                                                        AND curdate() >= sd.start_date
                                                        AND curdate() <= sd.end_date)
                                          SELECT il_explode.alloc_no,
                                                 il_explode.loc,
                                                 il_explode.tran_item,
                                                 COALESCE (
                                                     SUM(
                                                           il_explode.pack_multiplier
                                                         * (d.transfered_qty - COALESCE (d.shipped_qty, 0) - COALESCE (d.cancelled_qty, 0))),
                                                     0)    co_on_alloc,
                                                 COALESCE (
                                                     SUM(
                                                           il_explode.pack_multiplier
                                                         * (d.shipped_qty - COALESCE (d.received_qty, 0))),
                                                     0)    co_intran
                                            FROM tsf_dtl h, tsf_item_loc d, il_explode
                                           WHERE     h.tsf_id = d.tsf_id
                                                 AND h.to_location = il_explode.loc
                                                 AND h.status IN ('A',
                                                                  'S',
                                                                  'P',
                                                                  'L'
                                                                  )
                                                 AND h.tsf_type = 'CO'
                                                 AND d.item = il_explode.item
                                                 AND d.transfered_qty > COALESCE (d.shipped_qty, 0) + COALESCE (d.cancelled_qty, 0) 
                                        GROUP BY il_explode.alloc_no,
                                                 il_explode.loc,
                                                 il_explode.tran_item) 
                                    UPDATE alloc_calc_destination_temp target,use_this    
                                      SET target.in_transit_qty = target.in_transit_qty - use_this.co_intran
                                    WHERE target.alloc_no = use_this.alloc_no
                                      AND target.to_loc = use_this.loc
                                      AND target.tran_item = use_this.tran_item;"
                       
  # Q_merge_tsf_on_alloc: "WITH il_explode AS(/*substitue item*/
                                           # SELECT tmp.alloc_no,
                                                  # tmp.source_item,
                                                  # sd.sub_item       item,
                                                  # tmp.to_loc        loc,
                                                  # 1                 pack_multiplier,
                                                  # tmp.tran_item     tran_item
                                         # FROM alloc_calc_destination_temp  tmp,
                                              # subs_item_dtl               sd
                                        # WHERE tmp.alloc_no = %s
                                          # AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                          # AND tmp.tran_item = sd.item
                                          # AND tmp.to_loc = sd.location
                                          # AND sd.use_stock_ind = 'Y'
                                          # AND curdate() >= (sd.start_date)
                                          # AND curdate() <= (sd.end_date))
                             # ,loc_view AS 
                                       # (SELECT DISTINCT loc		   
                                          # FROM il_explode)
                             # ,item_view AS 
                                        # (SELECT DISTINCT item
                                           # FROM il_explode)
                             # ,tsf_view AS  
                                      # (SELECT h.to_location,
                                              # d.item item,
                                              # SUM(d.transfered_qty) transfered_qty,
                                              # SUM(d.shipped_qty) shipped_qty,
                                              # SUM(d.cancelled_qty)cancelled_qty
                                         # FROM tsf_dtl h,
                                              # tsf_item_loc d,
                                              # loc_view l_view, 
                                              # item_view i_view
                                        # WHERE h.tsf_id = d.tsf_id
                                          # AND h.status NOT IN ('I','C')
                                          # AND h.tsf_type <> 'CO'
                                          # AND h.closing_date IS NULL
                                          # AND h.to_location = l_view.loc
                                          # AND d.item   = i_view.item
                                          # AND d.transfered_qty > COALESCE(d.shipped_qty, 0) + COALESCE(d.cancelled_qty, 0)
                                          # AND (h.approval_datetime) <=COALESCE( %s/*I_alc_rule_row.on_order_commit_date*/, (h.approval_datetime))
                                        # GROUP BY h.to_location,
                                                 # d.item)
                              # ,use_this AS                   
                                        # (SELECT ie.alloc_no,
                                                # ie.loc,
                                                # ie.tran_item,
                                                # COALESCE(SUM(ie.pack_multiplier
                                                      # * (tv.transfered_qty
                                                         # - COALESCE(tv.shipped_qty, 0)
                                                         # - COALESCE(tv.cancelled_qty, 0))),0) pl_transfered_qty
                                           # FROM tsf_view tv,
                                                # il_explode ie
                                          # WHERE tv.to_location = ie.loc
                                            # AND tv.item = ie.item
                                          # GROUP BY ie.alloc_no,								  
                                                   # ie.loc,
                                                   # ie.tran_item)
                        # UPDATE alloc_calc_destination_temp target,use_this
                           # SET target.on_alloc = target.on_alloc + use_this.pl_transfered_qty
                         # WHERE target.alloc_no = use_this.alloc_no												 
                           # AND target.to_loc = use_this.loc
                           # AND target.tran_item = use_this.tran_item;"

  Q_merge_tsf_on_alloc_sku: "	WITH 
                                use_this 
                                    AS(WITH il_explode AS(SELECT tmp.alloc_no,
                                                              tmp.source_item,
                                                              tmp.tran_item     item,
                                                              tmp.to_loc        loc,
                                                              1                 pack_multiplier,
                                                              tmp.tran_item     tran_item
                                                         FROM alloc_calc_destination_temp tmp
                                                        WHERE tmp.alloc_no = %s
                                                          UNION ALL
                                                          SELECT 
                                                              tmp.alloc_no,
                                                              tmp.source_item,
                                                              b.pack_no           item,
                                                              tmp.to_loc          loc,
                                                              b.pack_item_qty     pack_multiplier,
                                                              b.item tran_item
                                                         FROM alloc_calc_destination_temp  tmp,
                                                              packitem_breakout              b
                                                        WHERE tmp.tran_item = b.pack_no
                                                          AND tmp.alloc_no = %s
                                                          AND tmp.item_type = 'NSFSP'
                                                          UNION ALL
                                                          SELECT
                                                              tmp.alloc_no,
                                                              tmp.source_item,
                                                              sd.sub_item       item,
                                                              tmp.to_loc        loc,
                                                              1                 pack_multiplier,
                                                              tmp.tran_item     tran_item
                                                         FROM alloc_calc_destination_temp  tmp,
                                                              subs_item_dtl                 sd
                                                        WHERE tmp.alloc_no = %s
                                                          AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                                          AND tmp.tran_item = sd.item
                                                          AND tmp.to_loc = sd.location
                                                          AND sd.use_stock_ind = 'Y'
                                                          AND curdate() >= sd.start_date
                                                          AND curdate() <= sd.end_date),
                                            loc_view AS (SELECT DISTINCT loc		   
                                                            FROM il_explode),
                                            item_view AS (SELECT DISTINCT item
                                                            FROM il_explode),
                                            tsf_view AS  (SELECT h.to_location,
                                                                 d.item item,
                                                                 SUM(d.transfered_qty) tsf_qty,
                                                                 SUM(d.shipped_qty) ship_qty,
                                                                 SUM(d.cancelled_qty)cancelled_qty
                                                            FROM tsf_dtl h,
                                                                 tsf_item_loc d,
                                                                 (SELECT loc FROM loc_view) l_view,   
                                                                 (SELECT item FROM item_view) i_view  
                                                           WHERE h.tsf_id = d.tsf_id         
                                                             AND h.status NOT IN ('I','C') 
                                                             AND h.tsf_type <> 'CO'
                                                             AND h.closing_date IS NULL
                                                             AND h.to_location = l_view.loc
                                                             AND d.item   = i_view.item
                                                             AND d.transfered_qty > COALESCE (d.shipped_qty, 0) + COALESCE (d.cancelled_qty, 0)
                                                             AND h.approval_datetime <=COALESCE ( %s, h.approval_datetime)
                                                           GROUP BY h.to_location,
                                                                 d.item)
                                       SELECT ie.alloc_no,
                                              ie.loc,
                                              ie.tran_item,
                                              COALESCE (SUM(ie.pack_multiplier
                                                    * (tv.tsf_qty
                                                       - COALESCE (tv.ship_qty, 0)
                                                       - COALESCE (tv.cancelled_qty, 0))),0) pl_tsf_qty
                                        FROM tsf_view tv,
                                             il_explode ie
                                       WHERE tv.to_location = ie.loc
                                         AND tv.item = ie.item
                                       GROUP BY ie.alloc_no,								  
                                             ie.loc,
                                             ie.tran_item ) 
                                    UPDATE alloc_calc_destination_temp target, use_this
                                       SET target.on_alloc = target.on_alloc + use_this.pl_tsf_qty
                                     WHERE target.alloc_no = use_this.alloc_no												 
                                       AND target.to_loc = use_this.loc
                                       AND target.tran_item = use_this.tran_item;"
  
  Q_merge_tsf_on_alloc_style: "WITH 
                                use_this 
                                         AS
                                         (WITH il_explode AS(SELECT tmp.alloc_no,
                                                                      tmp.source_item,
                                                                      tmp.tran_item     item,
                                                                      tmp.to_loc        loc,
                                                                      1                 pack_multiplier,
                                                                      tmp.tran_item     tran_item
                                                                 FROM alloc_calc_destination_temp tmp
                                                                WHERE tmp.alloc_no = %s
                                                                  UNION ALL
                                                                  SELECT tmp.alloc_no,
                                                                      tmp.source_item,
                                                                      b.pack_no           item,
                                                                      tmp.to_loc          loc,
                                                                      b.pack_item_qty     pack_multiplier,
                                                                      tmp.tran_item       tran_item
                                                                 FROM alloc_calc_destination_temp  tmp,
                                                                      packitem_breakout              b
                                                                WHERE tmp.tran_item = b.item
                                                                  AND tmp.alloc_no = %s
                                                                  UNION ALL
                                                                  SELECT tmp.alloc_no,
                                                                      tmp.source_item,
                                                                      p.pack_no         item,
                                                                      tmp.to_loc        loc,
                                                                      p.pack_qty        pack_multiplier,
                                                                      tmp.tran_item     tran_item
                                                                 FROM alloc_calc_destination_temp  tmp,
                                                                      packitem                       p
                                                                WHERE tmp.tran_item_level = tmp.tran_tran_level
                                                                  AND tmp.tran_pack_ind = 'Y'
                                                                  AND tmp.tran_item = p.item
                                                                  AND tmp.alloc_no = %s
                                                                  UNION ALL
                                                                  SELECT tmp.alloc_no,
                                                                      tmp.source_item,
                                                                      sd.sub_item       item,
                                                                      tmp.to_loc        loc,
                                                                      1                 pack_multiplier,
                                                                      tmp.tran_item     tran_item
                                                                 FROM alloc_calc_destination_temp  tmp,
                                                                      subs_item_dtl                 sd
                                                                WHERE tmp.alloc_no = %s
                                                                  AND tmp.tran_item = sd.item
                                                                  AND tmp.to_loc = sd.location
                                                                  AND sd.use_stock_ind = 'Y'
                                                                  AND curdate() >= sd.start_date
                                                                  AND curdate() <= sd.end_date),
                                                    loc_view AS (SELECT DISTINCT loc		   
                                                                    FROM il_explode),
                                                    item_view AS (SELECT DISTINCT item
                                                                    FROM il_explode),
                                                    tsf_view AS  (SELECT h.to_location,
                                                                         d.item item,
                                                                         SUM(d.transfered_qty) tsf_qty,
                                                                         SUM(d.shipped_qty) ship_qty,
                                                                         SUM(d.cancelled_qty)cancelled_qty
                                                                    FROM tsf_dtl h,
                                                                         tsf_item_loc d,
                                                                         loc_view,    
                                                                         item_view   
                                                                   WHERE h.tsf_id = d.tsf_id
                                                                     AND h.status NOT IN ('I','C')  
                                                                     AND h.tsf_type <> 'CO'
                                                                     AND h.to_location = loc_view.loc
                                                                     AND d.item   = item_view.item
                                                                     AND d.transfered_qty > COALESCE(d.shipped_qty, 0) + COALESCE (d.cancelled_qty, 0)
                                                                     AND h.approval_datetime <=COALESCE(%s, h.approval_datetime)
                                                                   GROUP BY h.to_location,
                                                                         d.item)
                                               SELECT ie.alloc_no,
                                                      ie.loc,
                                                      ie.tran_item,
                                                      COALESCE (SUM(ie.pack_multiplier
                                                            * (tv.tsf_qty
                                                               - COALESCE (tv.ship_qty, 0)
                                                               - COALESCE (tv.cancelled_qty, 0))),0) pl_tsf_qty
                                                FROM tsf_view tv,
                                                     il_explode ie
                                               WHERE tv.to_location = ie.loc
                                                 AND tv.item = ie.item
                                               GROUP BY ie.alloc_no,								  
                                                     ie.loc,
                                                     ie.tran_item )
                                    UPDATE alloc_calc_destination_temp target,use_this
                                       SET target.on_alloc = target.on_alloc + use_this.pl_tsf_qty
                                     WHERE target.alloc_no = use_this.alloc_no												 
                                       AND target.to_loc = use_this.loc
                                       AND target.tran_item = use_this.tran_item;"
                           
  # Q_merge_on_order: "WITH
                        # il_explode
                                # AS(SELECT tmp.alloc_no,
                                          # tmp.source_item,
                                          # tmp.tran_item     item,
                                          # tmp.to_loc        loc,
                                          # 1                 pack_multiplier,
                                          # tmp.tran_item     tran_item
                                     # FROM alloc_calc_destination_temp tmp
                                    # WHERE alloc_no = %s
                                    # UNION ALL
                                     # /*substitue item*/
                                   # SELECT tmp.alloc_no,
                                          # tmp.source_item,
                                          # sd.sub_item       item,
                                          # tmp.to_loc        loc,
                                          # 1                 pack_multiplier,
                                          # tmp.tran_item     tran_item
                                 # FROM alloc_calc_destination_temp  tmp,
                                      # subs_item_dtl               sd
                                # WHERE tmp.alloc_no = %s
                                  # AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                  # AND tmp.tran_item = sd.item
                                  # AND tmp.to_loc = sd.location
                                  # AND sd.use_stock_ind = 'Y'
                                  # AND curdate() >= (sd.start_date)
                                  # AND curdate() <= (sd.end_date))
                        # ,use_this 
                                # AS(SELECT il_explode.alloc_no,
                                         # il_explode.tran_item,
                                         # il_explode.loc,
                                         # COALESCE(SUM(il_explode.pack_multiplier * (ol.ordered_qty - COALESCE(ol.received_qty, 0))),0)    on_order_qty
                                    # FROM il_explode, 
                                         # po_item_loc ol, 
                                         # po_dtl oh
                                   # WHERE oh.status = 'A'
                                     # AND oh.po_type != 'CO'
                                     # /*AND NOT (I_all_orders = 'N'
                                              # AND oh.include_on_order_ind = 'N')*/
                                     # AND oh.po_no = ol.po_no
                                     # AND ol.location = il_explode.loc
                                     # AND ol.item = il_explode.item
                                     # AND ol.ordered_qty > COALESCE(ol.received_qty, 0)
                                     # AND (%s/*I_alc_rule_row.on_order_commit_date*/ IS NULL OR (oh.not_before_date) <= %s/*I_alc_rule_row.on_order_commit_date*/)
                                   # GROUP BY il_explode.alloc_no,
                                         # il_explode.tran_item,
                                         # il_explode.loc) 

                    # UPDATE alloc_calc_destination_temp target,use_this
                    # SET target.on_order = use_this.on_order_qty
                    # WHERE target.alloc_no = use_this.alloc_no
                    # AND target.to_loc = use_this.loc
                    # AND target.tran_item = use_this.tran_item;"
                    
  Q_merge_on_order_sku: "WITH use_this 
                                     AS (WITH
                                            il_explode
                                            AS(SELECT tmp.alloc_no,
                                                      tmp.source_item,
                                                      tmp.tran_item     item,
                                                      tmp.to_loc        loc,
                                                      1                 pack_multiplier,
                                                      tmp.tran_item     tran_item
                                                 FROM alloc_calc_destination_temp tmp
                                                WHERE alloc_no = %s
                                                UNION ALL
                                                SELECT tmp.alloc_no,
                                                       tmp.source_item,
                                                       b.pack_no           item,
                                                       tmp.to_loc          loc,
                                                       b.pack_item_qty     pack_multiplier,
                                                       b.item tran_item
                                                  FROM alloc_calc_destination_temp  tmp,
                                                        packitem_breakout              b
                                                 WHERE tmp.tran_item = b.pack_no 
                                                   AND alloc_no = %s
                                                   AND tmp.item_type = 'NSFSP'  
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        sd.sub_item       item,
                                                        tmp.to_loc        loc,
                                                        1                 pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        subs_item_dtl                 sd
                                                  WHERE     tmp.alloc_no = %s
                                                        AND tmp.tran_item = sd.item
                                                        AND tmp.to_loc = sd.location
                                                        AND sd.use_stock_ind = 'Y'
                                                        AND curdate() >= sd.start_date
                                                        AND curdate() <= sd.end_date)				
                                          SELECT il_explode.alloc_no,
                                                 il_explode.tran_item,
                                                 il_explode.loc,
                                                 COALESCE (SUM(il_explode.pack_multiplier * (ol.ordered_qty - COALESCE (ol.received_qty, 0))),0)    on_order_qty
                                            FROM il_explode, po_item_loc ol, po_dtl oh
                                           WHERE oh.status = 'A'
                                             AND oh.po_type != 'CO'
                                             AND NOT (%s = 'N'
                                                      AND oh.include_on_order_ind = 'N')
                                             AND oh.po_no = ol.po_no
                                             AND ol.location = il_explode.loc
                                             AND ol.item = il_explode.item
                                             AND ol.ordered_qty > COALESCE (ol.received_qty, 0)
                                             AND (%s IS NULL OR oh.not_before_date >= %s)
                                             AND (%s IS NULL OR oh.not_before_date <= %s)
                                           GROUP BY il_explode.alloc_no,
                                                 il_explode.tran_item,
                                                 il_explode.loc) 
                                UPDATE alloc_calc_destination_temp target, use_this 
                                  SET target.on_order = use_this.on_order_qty
                                WHERE target.alloc_no = use_this.alloc_no
                                  AND target.to_loc = use_this.loc
                                  AND target.tran_item = use_this.tran_item;" 
  
  Q_merge_on_order_style: "WITH
                            use_this
                                    AS(WITH
                                    il_explode
                                    AS
                                        (SELECT tmp.alloc_no,
                                                tmp.source_item,
                                                tmp.tran_item     item,
                                                tmp.to_loc        loc,
                                                1                 pack_multiplier,
                                                tmp.tran_item     tran_item
                                           FROM alloc_calc_destination_temp tmp
                                          WHERE alloc_no = %s
                                         UNION ALL
                                         SELECT tmp.alloc_no,
                                                tmp.source_item,
                                                b.pack_no           item,
                                                tmp.to_loc          loc,
                                                b.pack_item_qty     pack_multiplier,
                                                tmp.tran_item       tran_item
                                           FROM alloc_calc_destination_temp  tmp,
                                                packitem_breakout              b
                                          WHERE     tmp.tran_item = b.item
                                                AND alloc_no = %s
                                         UNION ALL
                                         SELECT tmp.alloc_no,
                                                tmp.source_item,
                                                p.pack_no         item,
                                                tmp.to_loc        loc,
                                                p.pack_qty        pack_multiplier,
                                                tmp.tran_item     tran_item
                                           FROM alloc_calc_destination_temp  tmp,
                                                packitem                       p
                                          WHERE     tmp.tran_item_level =
                                                    tmp.tran_tran_level
                                                AND tmp.tran_pack_ind = 'Y'
                                                AND tmp.tran_item = p.item
                                                AND alloc_no = %s
                                         UNION ALL
                                         SELECT tmp.alloc_no,
                                                tmp.source_item,
                                                sd.sub_item       item,
                                                tmp.to_loc        loc,
                                                1                 pack_multiplier,
                                                tmp.tran_item     tran_item
                                           FROM alloc_calc_destination_temp  tmp,
                                                subs_item_dtl                 sd
                                          WHERE     tmp.alloc_no = %s
                                                AND tmp.tran_item = sd.item
                                                AND tmp.to_loc = sd.location
                                                AND sd.use_stock_ind = 'Y'
                                                AND curdate() >= sd.start_date
                                                AND curdate() <= sd.end_date)
                                  SELECT il_explode.alloc_no,
                                         il_explode.tran_item,
                                         il_explode.loc,
                                         COALESCE (
                                             SUM(
                                                   il_explode.pack_multiplier
                                                 * (ol.ordered_qty - COALESCE (ol.received_qty, 0))),
                                             0)    on_order_qty
                                    FROM il_explode, po_item_loc ol, po_dtl oh
                                   WHERE     oh.status = 'A'
                                         AND oh.po_type != 'CO'
                                         AND NOT (    %s = 'N'
                                                  AND oh.include_on_order_ind = 'N')
                                         AND oh.po_no = ol.po_no
                                         AND ol.location = il_explode.loc
                                         AND ol.item = il_explode.item
                                         AND ol.ordered_qty > COALESCE (ol.received_qty, 0)
                                         AND (oh.not_before_date >= %s OR %s IS NULL)
                                         AND (oh.not_before_date <= %s OR %s IS NULL)
                                GROUP BY il_explode.alloc_no,
                                         il_explode.tran_item,
                                         il_explode.loc) 		 
                    UPDATE alloc_calc_destination_temp target, use_this 
                       SET target.on_order = use_this.on_order_qty
                     WHERE target.alloc_no = use_this.alloc_no
                       AND target.to_loc = use_this.loc
                       AND target.tran_item = use_this.tran_item;"                    

  # Q_merge_ord_on_alloc: "WITH
                            # il_explode
                            # AS(SELECT tmp.alloc_no,
                                      # tmp.source_item,
                                      # tmp.tran_item     item,
                                      # tmp.to_loc        loc,
                                      # 1                 pack_multiplier,
                                      # tmp.tran_item     tran_item
                                 # FROM alloc_calc_destination_temp tmp
                                # WHERE tmp.alloc_no = %s
                                 # UNION ALL
                                 # /*substitue item*/
                                 # SELECT tmp.alloc_no,
                                        # tmp.source_item,
                                        # sd.sub_item       item,
                                        # tmp.to_loc        loc,
                                        # 1                 pack_multiplier,
                                        # tmp.tran_item     tran_item
                                   # FROM alloc_calc_destination_temp  tmp,
                                        # subs_item_dtl               sd
                                  # WHERE tmp.alloc_no = %s
                                    # AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                    # AND tmp.tran_item = sd.item
                                    # AND tmp.to_loc = sd.location
                                    # AND sd.use_stock_ind = 'Y'
                                    # AND curdate() >= (sd.start_date)
                                    # AND curdate() <= (sd.end_date))
                            # ,use_this 
                            # AS (SELECT il_explode.alloc_no,
                                       # il_explode.tran_item,
                                       # il_explode.loc,
                                       # COALESCE(SUM(il_explode.pack_multiplier * (  d.alloc_qty 
                                                                               # - COALESCE(d.tsf_qty, 0))),0) alloc_in_qty
                                  # FROM il_explode,  
                                       # alloc_dtl d,
                                       # alloc_head h
                                 # WHERE d.status = 'A'                            
                                   # /*AND h.item = il_explode.item*/
                                   # AND d.to_loc = il_explode.loc
                                   # AND d.alloc_qty > COALESCE(d.tsf_qty, 0)
                                   # /*AND (L_hist_start_date IS NULL OR COALESCE(L_hist_start_date,h.release_date) <= h.release_date)*/
                                   # AND (%s/*I_alc_rule_row.on_order_commit_date*/ IS NULL OR COALESCE(%s/*I_alc_rule_row.on_order_commit_date*/, h.release_date)  >= h.release_date)    
                        # GROUP BY il_explode.alloc_no,
                                 # il_explode.tran_item,
                                 # il_explode.loc)
         
                        # UPDATE alloc_calc_destination_temp target,use_this 
                        # SET target.on_alloc = target.on_alloc + use_this.alloc_in_qty
                        # WHERE target.alloc_no = use_this.alloc_no
                        # AND target.to_loc = use_this.loc
                        # AND target.tran_item = use_this.tran_item;"

  Q_merge_ord_on_alloc_sku: "WITH use_this 
                                      AS(WITH
                                            il_explode
                                            AS(SELECT tmp.alloc_no,
                                                      tmp.source_item,
                                                      tmp.tran_item     item,
                                                      tmp.to_loc        loc,
                                                      1                 pack_multiplier,
                                                      tmp.tran_item     tran_item
                                                 FROM alloc_calc_destination_temp tmp
                                                WHERE tmp.alloc_no = %s
                                                UNION ALL
                                                SELECT tmp.alloc_no,
                                                       tmp.source_item,
                                                       b.pack_no           item,
                                                       tmp.to_loc          loc,
                                                       b.pack_item_qty     pack_multiplier,
                                                       b.item tran_item
                                                  FROM alloc_calc_destination_temp  tmp,
                                                       packitem_breakout              b
                                                 WHERE tmp.tran_item = b.pack_no
                                                   AND tmp.alloc_no = %s
                                                   AND tmp.item_type='NSFSP'  
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        sd.sub_item       item,
                                                        tmp.to_loc        loc,
                                                        1                 pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        subs_item_dtl                 sd
                                                  WHERE     tmp.alloc_no = %s
                                                        AND tmp.tran_item = sd.item
                                                        AND tmp.to_loc = sd.location
                                                        AND sd.use_stock_ind = 'Y'
                                                        AND curdate() >= sd.start_date
                                                        AND curdate() <= sd.end_date)
                                          SELECT il_explode.alloc_no,
                                                 il_explode.tran_item,
                                                 il_explode.loc,
                                                 COALESCE (SUM(il_explode.pack_multiplier * (  d.alloc_qty 
                                                                                           - COALESCE (d.tsf_qty, 0))),0)    alloc_in_qty
                                            FROM il_explode, alloc_sku_head h, alloc_dtl d
                                               WHERE     h.status = 'A'                            
                                                     AND h.item = il_explode.item
                                                     AND d.alloc_no = h.alloc_no
                                                     AND d.to_loc = il_explode.loc
                                                     AND d.alloc_qty > COALESCE (d.tsf_qty, 0)
                                                     AND (%s IS NULL OR COALESCE (%s,h.release_date) <= h.release_date)
                                                     AND (%s IS NULL OR COALESCE (%s, h.release_date)  >= h.release_date)    
                                        GROUP BY il_explode.alloc_no,
                                                 il_explode.tran_item,
                                                 il_explode.loc) 
                                UPDATE alloc_calc_destination_temp target,use_this 
                                   SET target.on_alloc = target.on_alloc + use_this.alloc_in_qty
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.to_loc = use_this.loc
                                   AND target.tran_item = use_this.tran_item;"
  
  Q_merge_ord_on_alloc_style: "WITH use_this
                                        AS (WITH
                                            il_explode
                                            AS
                                                (SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        tmp.tran_item     item,
                                                        tmp.to_loc        loc,
                                                        1                 pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp tmp
                                                  WHERE     tmp.tran_item_level =
                                                            tmp.tran_tran_level
                                                        AND tmp.alloc_no = %s
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        b.pack_no           item,
                                                        tmp.to_loc          loc,
                                                        b.pack_item_qty     pack_multiplier,
                                                        tmp.tran_item       tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        packitem_breakout              b
                                                  WHERE     tmp.tran_item_level =
                                                            tmp.tran_tran_level
                                                        AND tmp.tran_item = b.item
                                                        AND tmp.alloc_no = %s
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        p.pack_no         item,
                                                        tmp.to_loc        loc,
                                                        p.pack_qty        pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        packitem                       p
                                                  WHERE     tmp.tran_item_level =
                                                            tmp.tran_tran_level
                                                        AND tmp.tran_pack_ind = 'Y'
                                                        AND tmp.tran_item = p.item
                                                        AND tmp.alloc_no = %s
                                                 UNION ALL
                                                 SELECT tmp.alloc_no,
                                                        tmp.source_item,
                                                        sd.sub_item       item,
                                                        tmp.to_loc        loc,
                                                        1                 pack_multiplier,
                                                        tmp.tran_item     tran_item
                                                   FROM alloc_calc_destination_temp  tmp,
                                                        subs_item_dtl                 sd
                                                  WHERE     tmp.alloc_no = %s
                                                        AND tmp.tran_item = sd.item
                                                        AND tmp.to_loc = sd.location
                                                        AND sd.use_stock_ind = 'Y'
                                                        AND curdate() >= sd.start_date
                                                        AND curdate() <= sd.end_date)
                                          SELECT il_explode.alloc_no,
                                                 il_explode.tran_item,
                                                 il_explode.loc,
                                                 COALESCE (
                                                     SUM(
                                                           il_explode.pack_multiplier
                                                         * (  d.alloc_qty
                                                            - COALESCE (d.tsf_qty, 0))),
                                                     0)    alloc_in_qty
                                            FROM il_explode, alloc_sku_head h, alloc_dtl d
                                           WHERE     h.status = 'A'                          
                                                 AND h.item = il_explode.item
                                                 AND d.alloc_no = h.alloc_no
                                                 AND d.to_loc = il_explode.loc
                                                 AND d.alloc_qty > COALESCE (d.tsf_qty, 0)
                                                 AND (%s IS NULL OR COALESCE (%s,h.release_date) <= h.release_date)
                                                 AND (%s IS NULL OR COALESCE (%s, h.release_date)  >= h.release_date)                                              
                                        GROUP BY il_explode.alloc_no,
                                                 il_explode.tran_item,
                                                 il_explode.loc) 
                                UPDATE alloc_calc_destination_temp target, use_this 
                                   SET target.on_alloc = target.on_alloc + use_this.alloc_in_qty
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.to_loc = use_this.loc
                                   AND target.tran_item = use_this.tran_item;"
                        
  # Q_merge_alloc_out: "WITH
                        # il_explode
                        # AS(SELECT tmp.alloc_no,
                                  # tmp.source_item,
                                  # tmp.tran_item     item,
                                  # tmp.to_loc        loc,
                                  # 1                 pack_multiplier,
                                  # tmp.tran_item     tran_item
                             # FROM alloc_calc_destination_temp tmp
                            # WHERE tmp.alloc_no = %s
                              # AND (tmp.item_type IS NULL OR tmp.item_type<>'NSFSP')
                             # UNION ALL                             
                             # /*substitue item*/
                             # SELECT tmp.alloc_no,
                                    # tmp.source_item,
                                    # sd.sub_item       item,
                                    # tmp.to_loc        loc,
                                    # 1                 pack_multiplier,
                                    # tmp.tran_item     tran_item
                               # FROM alloc_calc_destination_temp  tmp,
                                    # subs_item_dtl               sd
                              # WHERE tmp.alloc_no = %s
                                # AND COALESCE(tmp.item_type,'$') <>'NSFSP'
                                # AND tmp.tran_item = sd.item
                                # AND tmp.to_loc = sd.location
                                # AND sd.use_stock_ind = 'Y'
                                # AND curdate() >= (sd.start_date)
                                # AND curdate() <= (sd.end_date))                    
                        # ,use_this
                         # AS(SELECT il_explode.alloc_no,
                                   # il_explode.tran_item,
                                   # il_explode.loc,
                                   # COALESCE(SUM( il_explode.pack_multiplier
                                                # * (  d.alloc_qty
                                                   # - COALESCE(d.tsf_qty, 0))),0)    alloc_out_qty
                            # FROM il_explode, 
                                 # alloc_head h, 
                                 # alloc_dtl d
                           # WHERE d.status IN ('A', 'R')
                             # AND d.alloc_no = h.alloc_no
                             # AND d.to_loc = il_explode.loc
                             # AND d.alloc_qty > COALESCE(d.tsf_qty, 0)
                             # AND (   EXISTS
                                         # (SELECT 'x'
                                            # FROM po_dtl o
                                           # WHERE     o.po_no = h.po_no
                                                 # AND o.status IN ('A', 'C')
                                                 # /*AND NOT (    I_all_orders = 'N'
                                                            # AND o.include_on_order_ind = 'N')*/
                                                 # AND COALESCE(%s/*I_alc_rule_row.on_order_commit_date*/,o.not_before_date) >= (o.not_before_date))
                                  # OR EXISTS
                                         # (SELECT 'x'
                                            # FROM alloc_head h1
                                           # WHERE     h1.po_no = h.po_no
                                                 # AND h1.status IN ('A', 'R')
                                                 # AND COALESCE(%s/*I_alc_rule_row.on_order_commit_date*/,h1.release_date) >= h1.release_date)
                                  # OR EXISTS
                                         # (SELECT 'x'
                                            # FROM tsf_dtl t
                                           # WHERE t.tsf_id = h.po_no
                                                 # AND t.status IN ('A',
                                                                  # 'S',
                                                                  # 'P',
                                                                  # 'L')                             
                                                 # AND (   t.not_after_date IS NULL
                                                      # OR (COALESCE(%s/*I_alc_rule_row.on_order_commit_date*/,
                                                              # COALESCE(t.not_after_date,curdate())) <=
                                                                                                      # COALESCE(t.not_after_date,curdate())))))
                        # GROUP BY il_explode.alloc_no,
                                 # il_explode.tran_item,
                                 # il_explode.loc) 
                    # UPDATE alloc_calc_destination_temp target, use_this
                    # SET target.alloc_out = target.alloc_out + use_this.alloc_out_qty
                    # WHERE target.alloc_no = use_this.alloc_no
                    # AND target.to_loc = use_this.loc
                    # AND target.tran_item = use_this.tran_item;"

  Q_merge_alloc_out_sku: "WITH 
                           use_this
                                 AS (WITH
                                        il_explode
                                        AS
                                            (SELECT tmp.alloc_no,
                                                    tmp.source_item,
                                                    tmp.tran_item     item,
                                                    tmp.to_loc        loc,
                                                    1                 pack_multiplier,
                                                    tmp.tran_item     tran_item
                                               FROM alloc_calc_destination_temp tmp
                                              WHERE tmp.alloc_no = %s
                                        AND (tmp.item_type IS NULL OR tmp.item_type<>'NSFSP')
                                             UNION ALL
                                             SELECT tmp.alloc_no,
                                                    tmp.source_item,
                                                    b.pack_no           item,
                                                    tmp.to_loc          loc,
                                                    b.pack_item_qty     pack_multiplier,
                                                    b.item       tran_item
                                               FROM alloc_calc_destination_temp  tmp,
                                                    packitem_breakout              b
                                              WHERE tmp.tran_item = b.pack_no 
                                                AND tmp.alloc_no = %s
                                                AND tmp.item_type='NSFSP'
                                             UNION ALL
                                             SELECT tmp.alloc_no,
                                                    tmp.source_item,
                                                    sd.sub_item       item,
                                                    tmp.to_loc        loc,
                                                    1                 pack_multiplier,
                                                    tmp.tran_item     tran_item
                                               FROM alloc_calc_destination_temp  tmp,
                                                    subs_item_dtl                 sd
                                              WHERE     tmp.alloc_no = %s
                                                    AND tmp.tran_item = sd.item
                                                    AND tmp.to_loc = sd.location
                                                    AND sd.use_stock_ind = 'Y'
                                                    AND curdate() >= sd.start_date
                                                    AND curdate() <= sd.end_date)
                                      SELECT il_explode.alloc_no,
                                             il_explode.tran_item,
                                             il_explode.loc,
                                             COALESCE (
                                                 SUM(
                                                       il_explode.pack_multiplier
                                                     * (  d.alloc_qty
                                                        - COALESCE (d.tsf_qty, 0))),
                                                 0)    alloc_out_qty
                                        FROM il_explode, alloc_sku_head h, alloc_dtl d
                                       WHERE     h.status IN ('A', 'R')
                                             AND h.item = il_explode.item
                                             AND d.alloc_no = h.alloc_no
                                             AND h.wh = il_explode.loc
                                             AND d.alloc_qty > COALESCE (d.tsf_qty, 0)
                                             AND (   EXISTS
                                                         (SELECT 'x'
                                                            FROM po_dtl o
                                                           WHERE     o.po_no = h.order_no
                                                                 AND o.status IN ('A', 'C')
                                                                 AND NOT (    %s = 'N'
                                                                          AND o.include_on_order_ind = 'N')
                                                                 AND COALESCE (%s,o.not_before_date) <= o.not_before_date
                                                                 AND COALESCE (%s,o.not_before_date) >= o.not_before_date
                                                                 LIMIT 1)
                                                  OR EXISTS
                                                         (SELECT 'x'
                                                            FROM alloc_sku_head h1
                                                           WHERE     h1.alloc_no = h.order_no
                                                                 AND h1.status IN ('A', 'R')
                                                                 AND COALESCE (%s,h1.release_date) <= h1.release_date
                                                                 AND COALESCE (%s, h1.release_date) >= h1.release_date
                                                                 LIMIT 1)
                                                  OR EXISTS
                                                         (SELECT 'x'
                                                            FROM tsf_dtl t
                                                           WHERE     t.tsf_id = h.order_no
                                                                 AND t.status IN ('A','S','P','L')
                                                                 AND (   t.not_after_date IS NULL
                                                                      OR (COALESCE (%s,COALESCE (t.delivery_date,curdate())) <=COALESCE (t.delivery_date,curdate())))
                                                                 AND (   t.not_after_date IS NULL
                                                                      OR (COALESCE (%s,COALESCE (t.not_after_date,curdate())) <=COALESCE (t.not_after_date,curdate())))
                                                                 LIMIT 1))
                                    GROUP BY il_explode.alloc_no,
                                             il_explode.tran_item,
                                             il_explode.loc) 
                            UPDATE alloc_calc_destination_temp target, use_this 
                               SET target.alloc_out = target.alloc_out + use_this.alloc_out_qty
                             WHERE target.alloc_no = use_this.alloc_no
                               AND target.to_loc = use_this.loc
                               AND target.tran_item = use_this.tran_item;"
  
  Q_merge_alloc_out_style: "WITH 
                            use_this
                                    AS (WITH
                                        il_explode
                                        AS
                                            (SELECT tmp.alloc_no,
                                                    tmp.source_item,
                                                    tmp.tran_item     item,
                                                    tmp.to_loc        loc,
                                                    1                 pack_multiplier,
                                                    tmp.tran_item     tran_item
                                               FROM alloc_calc_destination_temp tmp
                                              WHERE     tmp.tran_item_level =
                                                        tmp.tran_tran_level
                                                    AND tmp.alloc_no = %s
                                             UNION ALL
                                             SELECT tmp.alloc_no,
                                                    tmp.source_item,
                                                    sd.sub_item       item,
                                                    tmp.to_loc        loc,
                                                    1                 pack_multiplier,
                                                    tmp.tran_item     tran_item
                                               FROM alloc_calc_destination_temp  tmp,
                                                    subs_item_dtl                 sd
                                              WHERE     tmp.alloc_no = %s
                                                    AND tmp.tran_item = sd.item
                                                    AND tmp.to_loc = sd.location
                                                    AND sd.use_stock_ind = 'Y'
                                                    AND curdate() >= sd.start_date
                                                    AND curdate() <= sd.end_date)
                                      SELECT il_explode.alloc_no,
                                             il_explode.tran_item,
                                             il_explode.loc,
                                             COALESCE (
                                                 SUM(
                                                       il_explode.pack_multiplier
                                                     * (  d.alloc_qty
                                                        - COALESCE (d.tsf_qty, 0))),
                                                 0)    alloc_out_qty
                                        FROM il_explode, alloc_sku_head h, alloc_dtl d
                                       WHERE     h.status IN ('A', 'R')
                                             AND h.item = il_explode.item
                                             AND d.alloc_no = h.alloc_no
                                             AND h.wh = il_explode.loc
                                             AND d.alloc_qty > COALESCE (d.tsf_qty, 0)
                                             AND (   EXISTS
                                                         (SELECT 'x'
                                                            FROM po_dtl o
                                                           WHERE     o.po_no = h.order_no
                                                                 AND o.status IN ('A', 'C')
                                                                 AND NOT (%s = 'N' AND o.include_on_order_ind = 'N')
                                                                 AND COALESCE (%s,o.not_before_date) <= o.not_before_date
                                                                 AND COALESCE (%s,o.not_before_date) >=o.not_before_date
                                                                 LIMIT  1)
                                                  OR EXISTS
                                                         (SELECT 'x'
                                                            FROM alloc_sku_head h1
                                                           WHERE     h1.alloc_no = h.order_no
                                                                 AND h1.status IN ('A', 'R')
                                                                 AND COALESCE (%s,h1.release_date) <=h1.release_date
                                                                 AND COALESCE (%s,h1.release_date) >=h1.release_date
                                                                 LIMIT  1)
                                                  OR EXISTS
                                                         (SELECT 'x'
                                                            FROM tsf_dtl t
                                                           WHERE     t.tsf_id = h.order_no
                                                                 AND t.status IN ('A','S','P','L')
                                                                 AND (   t.not_after_date IS NULL
                                                                      OR (COALESCE (%s,COALESCE (t.delivery_date,curdate())) <= COALESCE (t.delivery_date,curdate())))
                                                                 AND (   t.not_after_date IS NULL
                                                                      OR (COALESCE ( %s, COALESCE (t.not_after_date,curdate())) <= COALESCE (t.not_after_date,curdate())))
                                                                 LIMIT  1))
                                    GROUP BY il_explode.alloc_no,
                                             il_explode.tran_item,
                                             il_explode.loc) 
                            UPDATE alloc_calc_destination_temp target, use_this 
                               SET target.alloc_out = target.alloc_out + use_this.alloc_out_qty
                             WHERE target.alloc_no = use_this.alloc_no
                               AND target.to_loc = use_this.loc
                               AND target.tran_item = use_this.tran_item;"                                      
  #Changes by shubham End#
seed_calc_need:
  Q_fetch_rule_row: "SELECT rule_level,
                            rule_type
                       FROM alloc_rule 
                      WHERE alloc_no = %s;"

  Q_chk_calc_seed_table: "SELECT count(1) chk
                          FROM information_schema.tables
                         WHERE table_schema = database()
                           AND LOWER(table_name) = 'alloc_calc_need_temp';"

  Q_create_calc_seed_temp: CREATE TEMPORARY TABLE IF NOT EXISTS alloc_calc_need_temp(ALLOC_NO               NUMERIC(20) ,
                                                                                     RULE_MANY_TO_ONE_ID    NUMERIC(20) ,
                                                                                     RULE_LEVEL             VARCHAR(3) ,
                                                                                     HIER1                  NUMERIC(4) ,
                                                                                     HIER2                  NUMERIC(4) ,
                                                                                     HIER3                  NUMERIC(4) ,
                                                                                     SOURCE_ITEM            VARCHAR(25) ,
                                                                                     SOURCE_ITEM_LEVEL      NUMERIC(1) ,
                                                                                     SOURCE_TRAN_LEVEL      NUMERIC(1) ,
                                                                                     SOURCE_PACK_IND        VARCHAR(1) ,
                                                                                     SOURCE_DIFF1_ID        VARCHAR(10) ,
                                                                                     SOURCE_DIFF2_ID        VARCHAR(10) ,
                                                                                     SOURCE_DIFF3_ID        VARCHAR(10) ,
                                                                                     SOURCE_DIFF4_ID        VARCHAR(10) ,
                                                                                     TRAN_ITEM              VARCHAR(25) ,
                                                                                     TRAN_ITEM_LEVEL        NUMERIC(1) ,
                                                                                     TRAN_TRAN_LEVEL        NUMERIC(1) ,
                                                                                     TRAN_PACK_IND          VARCHAR(1) ,
                                                                                     TRAN_DIFF1_ID          VARCHAR(10) ,
                                                                                     TRAN_DIFF2_ID          VARCHAR(10) ,
                                                                                     TRAN_DIFF3_ID          VARCHAR(10) ,
                                                                                     TRAN_DIFF4_ID          VARCHAR(10) ,
                                                                                     PACK_QTY               DECIMAL(12,4) ,
                                                                                     TO_LOC                 NUMERIC(10) ,
                                                                                     SISTER_STORE           NUMERIC(10) ,
                                                                                     SISTER_STORE_WEIGHT    DECIMAL(20,4) ,
                                                                                     SIZE_PROFILE_QTY       DECIMAL(12,4) ,
                                                                                     TOTAL_PROFILE_QTY      DECIMAL(12,4) ,
                                                                                     EOW_DATE               DATE ,
                                                                                     WEIGHT                 DECIMAL(12,4),
                                                                                     IWOS_WEEKS             DECIMAL(12,4),
                                                                                     SALES_HIST_NEED        DECIMAL(12,4),
                                                                                     FORECAST_NEED          DECIMAL(12,4),
                                                                                     REPLAN_NEED            DECIMAL(12,4),
                                                                                     PLAN_NEED              DECIMAL(12,4),
                                                                                     PLAN_REPROJECT_NEED    DECIMAL(12,4),
                                                                                     RECEIPT_PLAN_NEED      DECIMAL(12,4),
                                                                                     CORP_RULE_NEED         DECIMAL(12,4),
                                                                                     LIKE_SOURCE_ITEM       VARCHAR(25) ,
                                                                                     LIKE_SOURCE_ITEM_LEVEL NUMERIC(1) ,
                                                                                     LIKE_SOURCE_TRAN_LEVEL NUMERIC(1) ,
                                                                                     LIKE_SOURCE_PACK_IND   VARCHAR(1) ,
                                                                                     LIKE_SOURCE_DIFF1_ID   VARCHAR(10) ,
                                                                                     LIKE_SOURCE_DIFF2_ID   VARCHAR(10) ,
                                                                                     LIKE_SOURCE_DIFF3_ID   VARCHAR(10) ,
                                                                                     LIKE_SOURCE_DIFF4_ID   VARCHAR(10) ,
                                                                                     LIKE_TRAN_ITEM         VARCHAR(25) ,
                                                                                     LIKE_TRAN_ITEM_LEVEL   NUMERIC(1) ,
                                                                                     LIKE_TRAN_TRAN_LEVEL   NUMERIC(1) ,
                                                                                     LIKE_TRAN_PACK_IND     VARCHAR(1) ,
                                                                                     LIKE_TRAN_DIFF1_ID     VARCHAR(10) ,
                                                                                     LIKE_TRAN_DIFF2_ID     VARCHAR(10) ,
                                                                                     LIKE_TRAN_DIFF3_ID     VARCHAR(10) ,
                                                                                     LIKE_TRAN_DIFF4_ID     VARCHAR(10) ,
                                                                                     LIKE_HIER1             NUMERIC(4) ,
                                                                                     LIKE_HIER2             NUMERIC(4) ,
                                                                                     LIKE_HIER3             NUMERIC(4) ,
                                                                                     LIKE_PACK_NO           VARCHAR(25) ,
                                                                                     LIKE_WEIGHT            DECIMAL(20,4) ,
                                                                                     LIKE_SIZE_PROF_IND     VARCHAR(1) ,
                                                                                     CREATE_ID              VARCHAR(60) ,
                                                                                     CREATE_DATETIME        DATE ,
                                                                                     LAST_UPDATE_ID         VARCHAR(60) ,
                                                                                     LAST_UPDATE_DATETIME   DATE);
  Q_del_calc_need: "DELETE FROM alloc_calc_need_temp WHERE alloc_no = %s;"

  Q_ins_dpt_class_sub_class: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                                rule_many_to_one_id,
                                                                rule_level,
                                                                hier1,
                                                                hier2,
                                                                hier3,
                                                                source_item,
                                                                source_item_level,
                                                                source_tran_level,
                                                                source_pack_ind,
                                                                source_diff1_id,
                                                                source_diff2_id,
                                                                source_diff3_id,
                                                                source_diff4_id,
                                                                tran_item,
                                                                tran_item_level,
                                                                tran_tran_level,
                                                                tran_pack_ind,
                                                                tran_diff1_id,
                                                                tran_diff2_id,
                                                                tran_diff3_id,
                                                                tran_diff4_id,
                                                                to_loc,
                                                                sister_store,
                                                                sister_store_weight,
                                                                size_profile_qty,
                                                                total_profile_qty,
                                                                eow_date,
                                                                weight,
                                                                sales_hist_need,
                                                                forecast_need,
                                                                plan_need,
                                                                plan_reproject_need,
                                                                receipt_plan_need,
                                                                corp_rule_need,
                                                                create_id,
                                                                create_datetime,
                                                                last_update_id,
                                                                last_update_datetime) 
                                                         SELECT DISTINCT cd.alloc_no,
                                                                -1,
                                                                %s,
                                                                cd.hier1,
                                                                cd.hier2,
                                                                cd.hier3,
                                                                NULL,                         
                                                                NULL,                    
                                                                NULL,                    
                                                                NULL,                    
                                                                NULL,                    
                                                                NULL,                    
                                                                NULL,                    
                                                                NULL,                    
                                                                NULL,                            
                                                                NULL,                     
                                                                NULL,                     
                                                                NULL,                     
                                                                NULL,                     
                                                                NULL,                     
                                                                NULL,                     
                                                                NULL,                     
                                                                cd.to_loc,
                                                                cd.sister_store,
                                                                cd.sister_store_weight,
                                                                NULL,                    
                                                                NULL,                     
                                                                d.eow_date,
                                                                d.weight,
                                                                -1,
                                                                -1,
                                                                -1,
                                                                -1,
                                                                -1,
                                                                -1,
                                                                USER()               create_id,
                                                                current_timestamp()  create_datetime,
                                                                USER()               last_update_id,
                                                                current_timestamp()  last_update_datetime
                                                           FROM (SELECT DISTINCT
                                                                        tmp.alloc_no,
                                                                        tmp.hier1,
                                                                        CASE 
                                                                            WHEN %s = 'H2'
                                                                            THEN tmp.hier2
                                                                            WHEN %s = 'H3'
                                                                            THEN tmp.hier2
                                                                            ELSE NULL
                                                                        END hier2,
                                                                        CASE 
                                                                            WHEN %s = 'H3'
                                                                            THEN tmp.hier3
                                                                            ELSE NULL
                                                                        END hier3,
                                                                        tmp.to_loc,
                                                                        tmp.sister_store,
                                                                        tmp.sister_store_weight
                                                                   FROM alloc_calc_destination_temp tmp
                                                                  WHERE tmp.alloc_no = %s) cd,
                                                                alloc_calc_need_dates  d
                                                          WHERE d.alloc_no = %s; "

  Q_insert_calc_need_temp: "INSERT INTO alloc_calc_need_temp (alloc_no,
                                                              rule_many_to_one_id,
                                                              rule_level,
                                                              hier1,
                                                              hier2,
                                                              hier3,
                                                              source_item,
                                                              source_item_level,
                                                              source_tran_level,
                                                              source_pack_ind,
                                                              source_diff1_id,
                                                              source_diff2_id,
                                                              source_diff3_id,
                                                              source_diff4_id,
                                                              tran_item,
                                                              tran_item_level,
                                                              tran_tran_level,
                                                              tran_pack_ind,
                                                              tran_diff1_id,
                                                              tran_diff2_id,
                                                              tran_diff3_id,
                                                              tran_diff4_id,
                                                              to_loc,
                                                              sister_store,
                                                              sister_store_weight,
                                                              size_profile_qty,
                                                              total_profile_qty,
                                                              eow_date,
                                                              weight,
                                                              sales_hist_need,
                                                              forecast_need,
                                                              replan_need,
                                                              plan_need,
                                                              plan_reproject_need,
                                                              receipt_plan_need,
                                                              corp_rule_need,
                                                              like_source_item,
                                                              like_source_item_level,
                                                              like_source_tran_level,
                                                              like_source_pack_ind,
                                                              like_source_diff1_id,
                                                              like_source_diff2_id,
                                                              like_source_diff3_id,
                                                              like_source_diff4_id,
                                                              like_tran_item,
                                                              like_tran_item_level,
                                                              like_tran_tran_level,
                                                              like_tran_pack_ind,
                                                              like_tran_diff1_id,
                                                              like_tran_diff2_id,
                                                              like_tran_diff3_id,
                                                              like_tran_diff4_id,
                                                              like_hier1,
                                                              like_hier2,
                                                              like_hier3,
                                                              like_pack_no,
                                                              like_weight,
                                                              like_size_prof_ind,
                                                              create_id,
                                                              create_datetime,
                                                              last_update_id,
                                                              last_update_datetime) 
                                                       SELECT DISTINCT cd.alloc_no,
                                                              -1 AS rule_many_to_one_id,
                                                              %s AS rule_level,
                                                              cd.hier1,
                                                              cd.hier2,
                                                              cd.hier3,
                                                              cd.source_item,
                                                              cd.source_item_level,
                                                              cd.source_tran_level,
                                                              cd.source_pack_ind,
                                                              cd.source_diff1_id,
                                                              cd.source_diff2_id,
                                                              cd.source_diff3_id,
                                                              cd.source_diff4_id,
                                                              cd.tran_item,
                                                              cd.tran_item_level,
                                                              cd.tran_tran_level,
                                                              cd.tran_pack_ind,
                                                              cd.tran_diff1_id,
                                                              cd.tran_diff2_id,
                                                              cd.tran_diff3_id,
                                                              cd.tran_diff4_id,
                                                              cd.to_loc,
                                                              cd.sister_store,
                                                              cd.sister_store_weight,
                                                              NULL AS size_profile_qty,
                                                              NULL AS total_profile_qty,
                                                              NULL AS eow_date,
                                                              NULL AS weight,
                                                              0 AS sales_hist_need,
                                                              -1 AS forecast_need,
                                                              -1 AS replan_need,
                                                              -1 AS plan_need,
                                                              -1 AS plan_reproject_need,
                                                              -1 AS receipt_plan_need,
                                                              -1 AS corp_rule_need,
                                                              cd.like_source_item,
                                                              cd.like_source_item_level,
                                                              cd.like_source_tran_level,
                                                              cd.like_source_pack_ind,
                                                              cd.like_source_diff1_id,
                                                              cd.like_source_diff2_id,
                                                              cd.like_source_diff3_id,
                                                              cd.like_source_diff4_id,
                                                              cd.like_tran_item,
                                                              cd.like_tran_item_level,
                                                              cd.like_tran_tran_level,
                                                              cd.like_tran_pack_ind,
                                                              cd.like_tran_diff1_id,
                                                              cd.like_tran_diff2_id,
                                                              cd.like_tran_diff3_id,
                                                              cd.like_tran_diff4_id,
                                                              cd.like_hier1,
                                                              cd.like_hier2,
                                                              cd.like_hier3,
                                                              cd.like_pack_no,
                                                              cd.like_weight,
                                                              cd.like_size_prof_ind,
                                                              USER()        create_id,
                                                              curdate()     create_datetime,
                                                              USER()        last_update_id,
                                                              current_timestamp()     last_update_datetime
                                                         FROM alloc_calc_destination_temp cd
                                                        WHERE cd.alloc_no = %s; "

  Q_ins_his_sku_list: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                         rule_many_to_one_id,
                                                         rule_level,
                                                         hier1,
                                                         hier2,
                                                         hier3,
                                                         source_item,
                                                         source_item_level,
                                                         source_tran_level,
                                                         source_pack_ind,
                                                         source_diff1_id,
                                                         source_diff2_id,
                                                         source_diff3_id,
                                                         source_diff4_id,
                                                         tran_item,
                                                         tran_item_level,
                                                         tran_tran_level,
                                                         tran_pack_ind,
                                                         tran_diff1_id,
                                                         tran_diff2_id,
                                                         tran_diff3_id,
                                                         tran_diff4_id,
                                                         to_loc,
                                                         sister_store,
                                                         sister_store_weight,
                                                         size_profile_qty,
                                                         total_profile_qty,
                                                         eow_date,
                                                         weight,
                                                         sales_hist_need,
                                                         forecast_need,
                                                         replan_need,
                                                         plan_need,
                                                         plan_reproject_need,
                                                         receipt_plan_need,
                                                         corp_rule_need,
                                                         like_source_item,
                                                         like_source_item_level,
                                                         like_source_tran_level,
                                                         like_source_pack_ind,
                                                         like_source_diff1_id,
                                                         like_source_diff2_id,
                                                         like_source_diff3_id,
                                                         like_source_diff4_id,
                                                         like_tran_item,
                                                         like_tran_item_level,
                                                         like_tran_tran_level,
                                                         like_tran_pack_ind,
                                                         like_tran_diff1_id,
                                                         like_tran_diff2_id,
                                                         like_tran_diff3_id,
                                                         like_tran_diff4_id,
                                                         like_hier1,
                                                         like_hier2,
                                                         like_hier3,
                                                         like_pack_no,
                                                         like_weight,
                                                         like_size_prof_ind,
                                                         create_id,
                                                         create_datetime,
                                                         last_update_id,
                                                         last_update_datetime) 
                                                  SELECT DISTINCT cd.alloc_no,
                                                         -1,
                                                         %s,
                                                         cd.hier1,
                                                         cd.hier2,
                                                         cd.hier3,
                                                         cd.source_item,
                                                         cd.source_item_level,
                                                         cd.source_tran_level,
                                                         cd.source_pack_ind,
                                                         cd.source_diff1_id,
                                                         cd.source_diff2_id,
                                                         cd.source_diff3_id,
                                                         cd.source_diff4_id,
                                                         cd.tran_item,
                                                         cd.tran_item_level,
                                                         cd.tran_tran_level,
                                                         cd.tran_pack_ind,
                                                         cd.tran_diff1_id,
                                                         cd.tran_diff2_id,
                                                         cd.tran_diff3_id,
                                                         cd.tran_diff4_id,
                                                         cd.to_loc,
                                                         cd.sister_store,
                                                         cd.sister_store_weight,
                                                         NULL,                      
                                                         NULL,                     
                                                         NULL,
                                                         NULL,
                                                         0,
                                                         -1,
                                                         -1,
                                                         -1,
                                                         -1,
                                                         -1,
                                                         -1,
                                                         im.item like_source_item,
                                                         cd.like_source_item_level,
                                                         cd.like_source_tran_level,
                                                         cd.like_source_pack_ind,
                                                         cd.like_source_diff1_id,
                                                         cd.like_source_diff2_id,
                                                         cd.like_source_diff3_id,
                                                         cd.like_source_diff4_id,
                                                         im.item like_tran_item,
                                                         cd.like_tran_item_level,
                                                         cd.like_tran_tran_level,
                                                         cd.like_tran_pack_ind,
                                                         cd.like_tran_diff1_id,
                                                         cd.like_tran_diff2_id,
                                                         cd.like_tran_diff3_id,
                                                         cd.like_tran_diff4_id,
                                                         cd.like_hier1,
                                                         cd.like_hier2,
                                                         cd.like_hier3,
                                                         cd.like_pack_no,
                                                         cd.like_weight,
                                                         cd.like_size_prof_ind,
                                                         USER()        create_id,
                                                         current_timestamp()     create_datetime,
                                                         USER()       last_update_id,
                                                         current_timestamp()     last_update_datetime
                                                    FROM alloc_calc_destination_temp cd,
                                                         item_list_dtl  sd,
                                                         item_list_head sh,
                                                         item_dtl       im
                                                   WHERE cd.alloc_no = %s
                                                     AND cd.like_source_item = sd.item_list_no
                                                     AND sd.item_list_no = sh.item_list_no
                                                     AND (im.item = sd.item OR im.item_parent = sd.item)
                                                     AND im.sellable_ind = 'Y'; "

  Q_del_his_skulist: " DELETE FROM alloc_calc_need_temp 
                             WHERE alloc_no = %s
                               AND like_source_item IN (SELECT item_list_no
												               FROM item_list_head); "

  Q_ins_calc_style_sku: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                               rule_many_to_one_id,
                                                               rule_level,
                                                               hier1,
                                                               hier2,
                                                               hier3,
                                                               source_item,
                                                               source_item_level,
                                                               source_tran_level,
                                                               source_pack_ind,
                                                               source_diff1_id,
                                                               source_diff2_id,
                                                               source_diff3_id,
                                                               source_diff4_id,
                                                               tran_item,
                                                               tran_item_level,
                                                               tran_tran_level,
                                                               tran_pack_ind,
                                                               tran_diff1_id,
                                                               tran_diff2_id,
                                                               tran_diff3_id,
                                                               tran_diff4_id,
                                                               to_loc,
                                                               sister_store,
                                                               sister_store_weight,
                                                               size_profile_qty,
                                                               total_profile_qty,
                                                               eow_date,
                                                               weight,
                                                               sales_hist_need,
                                                               forecast_need,
                                                               plan_need,
                                                               plan_reproject_need,
                                                               receipt_plan_need,
                                                               corp_rule_need,
                                                               like_source_item,
                                                               like_source_item_level,
                                                               like_source_tran_level,
                                                               like_source_pack_ind,
                                                               like_source_diff1_id,
                                                               like_source_diff2_id,
                                                               like_source_diff3_id,
                                                               like_source_diff4_id,
                                                               like_tran_item,
                                                               like_tran_item_level,
                                                               like_tran_tran_level,
                                                               like_tran_pack_ind,
                                                               like_tran_diff1_id,
                                                               like_tran_diff2_id,
                                                               like_tran_diff3_id,
                                                               like_tran_diff4_id,
                                                               like_hier1,
                                                               like_hier2,
                                                               like_hier3,
                                                               like_pack_no,
                                                               like_weight,
                                                               like_size_prof_ind,
                                                               create_id,
                                                               create_datetime,
                                                               last_update_id,
                                                               last_update_datetime)
                                                        SELECT DISTINCT cd.alloc_no,
                                                               -1,
                                                               %s,
                                                               cd.hier1,
                                                               cd.hier2,
                                                               cd.hier3,
                                                               cd.source_item,
                                                               cd.source_item_level,
                                                               cd.source_tran_level,
                                                               cd.source_pack_ind,
                                                               cd.source_diff1_id,
                                                               cd.source_diff2_id,
                                                               cd.source_diff3_id,
                                                               cd.source_diff4_id,
                                                               cd.tran_item,
                                                               cd.tran_item_level,
                                                               cd.tran_tran_level,
                                                               cd.tran_pack_ind,
                                                               cd.tran_diff1_id,
                                                               cd.tran_diff2_id,
                                                               cd.tran_diff3_id,
                                                               cd.tran_diff4_id,
                                                               cd.to_loc,
                                                               cd.sister_store,
                                                               cd.sister_store_weight,
                                                               NULL,                     
                                                               NULL,                     
                                                               d.eow_date,
                                                               d.weight,
                                                               -1,
                                                               -1,
                                                               -1,
                                                               -1,
                                                               -1,
                                                               -1,
                                                               cd.like_source_item,
                                                               cd.like_source_item_level,
                                                               cd.like_source_tran_level,
                                                               cd.like_source_pack_ind,
                                                               cd.like_source_diff1_id,
                                                               cd.like_source_diff2_id,
                                                               cd.like_source_diff3_id,
                                                               cd.like_source_diff4_id,
                                                               cd.like_tran_item,
                                                               cd.like_tran_item_level,
                                                               cd.like_tran_tran_level,
                                                               cd.like_tran_pack_ind,
                                                               cd.like_tran_diff1_id,
                                                               cd.like_tran_diff2_id,
                                                               cd.like_tran_diff3_id,
                                                               cd.like_tran_diff4_id,
                                                               cd.like_hier1,
                                                               cd.like_hier2,
                                                               cd.like_hier3,
                                                               cd.like_pack_no,
                                                               cd.like_weight,
                                                               cd.like_size_prof_ind,
                                                               USER()                create_id,
                                                               current_timestamp()   create_datetime,
                                                               current_date()        last_update_id,
                                                               current_timestamp()   last_update_datetime
                                                          FROM (SELECT DISTINCT tmp.alloc_no,
                                                                       tmp.hier1,
                                                                       tmp.hier2,
                                                                       tmp.hier3,
                                                                       im.item source_item,
                                                                       COALESCE(im1.item_level, im.item_level) source_item_level,  
                                                                       COALESCE(im1.tran_level, im.item_level) source_tran_level, 
                                                                       im.pack_ind source_pack_ind,																
                                                                       tmp.source_diff1_id,
                                                                       tmp.source_diff2_id,
                                                                       tmp.source_diff3_id,
                                                                       tmp.source_diff4_id,
                                                                       COALESCE(im1.item, im.item)             tran_item,  
                                                                       COALESCE(im1.item_level, im.item_level) tran_item_level, 
                                                                       COALESCE(im1.tran_level, im.item_level) tran_tran_level,
                                                                       im.pack_ind       tran_pack_ind,
                                                                       im.diff1         tran_diff1_id,
                                                                       im.diff2         tran_diff2_id,
                                                                       im.diff3         tran_diff3_id,
                                                                       im.diff4         tran_diff4_id,
                                                                       tmp.to_loc,
                                                                       tmp.sister_store,
                                                                       tmp.sister_store_weight,
                                                                       tmp.like_source_item,
                                                                       tmp.like_source_item_level,
                                                                       tmp.like_source_tran_level,
                                                                       tmp.like_source_pack_ind,
                                                                       tmp.like_source_diff1_id,
                                                                       tmp.like_source_diff2_id,
                                                                       tmp.like_source_diff3_id,
                                                                       tmp.like_source_diff4_id,
                                                                       tmp.like_tran_item,
                                                                       tmp.like_tran_item_level,
                                                                       tmp.like_tran_tran_level,
                                                                       tmp.like_tran_pack_ind,
                                                                       tmp.like_tran_diff1_id,
                                                                       tmp.like_tran_diff2_id,
                                                                       tmp.like_tran_diff3_id,
                                                                       tmp.like_tran_diff4_id,
                                                                       tmp.like_hier1,
                                                                       tmp.like_hier2,
                                                                       tmp.like_hier3,
                                                                       tmp.like_pack_no,
                                                                       tmp.like_weight,
                                                                       tmp.like_size_prof_ind
                                                                  FROM alloc_calc_destination_temp tmp,
                                                                       item_dtl                    im1
                                                             LEFT JOIN item_dtl im
                                                                   ON (im1.item_parent = im.item_parent
                                                                   AND im1.status = 'A')
                                                             WHERE tmp.alloc_no = %s
                                                               AND tmp.source_tran_level = tmp.source_item_level          
                                                               AND tmp.source_item = im.item
                                                                UNION
                                                                SELECT DISTINCT tmp.alloc_no,
                                                                       tmp.hier1,
                                                                       tmp.hier2,
                                                                       tmp.hier3,
                                                                       tmp.source_item,                   
                                                                       1 source_item_level,       			   
                                                                       1 source_tran_level, 
                                                                       'Y' source_pack_ind,																	
                                                                       tmp.source_diff1_id,
                                                                       tmp.source_diff2_id,
                                                                       tmp.source_diff3_id,
                                                                       tmp.source_diff4_id,
                                                                       COALESCE(im1.item, im.item)             tran_item,                
                                                                       COALESCE(im1.item_level, im.item_level) tran_item_level,  
                                                                       COALESCE(im1.tran_level, im.item_level) tran_tran_level,  
                                                                       im.pack_ind       tran_pack_ind,
                                                                       im.diff1         tran_diff1_id,
                                                                       im.diff2         tran_diff2_id,
                                                                       im.diff3         tran_diff3_id,
                                                                       im.diff4         tran_diff4_id,
                                                                       tmp.to_loc,
                                                                       tmp.sister_store,
                                                                       tmp.sister_store_weight,
                                                                       tmp.like_source_item,
                                                                       tmp.like_source_item_level,
                                                                       tmp.like_source_tran_level,
                                                                       tmp.like_source_pack_ind,
                                                                       tmp.like_source_diff1_id,
                                                                       tmp.like_source_diff2_id,
                                                                       tmp.like_source_diff3_id,
                                                                       tmp.like_source_diff4_id,
                                                                       tmp.like_tran_item,
                                                                       tmp.like_tran_item_level,
                                                                       tmp.like_tran_tran_level,
                                                                       tmp.like_tran_pack_ind,
                                                                       tmp.like_tran_diff1_id,
                                                                       tmp.like_tran_diff2_id,
                                                                       tmp.like_tran_diff3_id,
                                                                       tmp.like_tran_diff4_id,
                                                                       tmp.like_hier1,
                                                                       tmp.like_hier2,
                                                                       tmp.like_hier3,
                                                                       tmp.like_pack_no,
                                                                       tmp.like_weight,
                                                                       tmp.like_size_prof_ind
                                                                  FROM alloc_calc_destination_temp tmp,
                                                                       packitem_breakout           pb,
                                                                       item_dtl                    im1
                                                             LEFT JOIN item_dtl im
                                                                    ON (im1.item_parent = im.item_parent
                                                                    AND im1.status = 'A')
                                                                  WHERE tmp.alloc_no = %s
                                                                    AND tmp.source_tran_level = tmp.source_item_level          
                                                                    AND tmp.tran_item = pb.pack_no
                                                                    AND tmp.item_type ='NSFSP'
                                                                    AND pb.item = im.item) cd,
                                                               alloc_calc_need_dates  d
                                                         WHERE d.alloc_no = %s; "

  Q_ins_calc_style: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                           rule_many_to_one_id,
                                                           rule_level,
                                                           hier1,
                                                           hier2,
                                                           hier3,
                                                           source_item,
                                                           source_item_level,
                                                           source_tran_level,
                                                           source_pack_ind,
                                                           source_diff1_id,
                                                           source_diff2_id,
                                                           source_diff3_id,
                                                           source_diff4_id,
                                                           tran_item,
                                                           tran_item_level,
                                                           tran_tran_level,
                                                           tran_pack_ind,
                                                           tran_diff1_id,
                                                           tran_diff2_id,
                                                           tran_diff3_id,
                                                           tran_diff4_id,
                                                           to_loc,
                                                           sister_store,
                                                           sister_store_weight,
                                                           size_profile_qty,
                                                           total_profile_qty,
                                                           eow_date,
                                                           weight,
                                                           sales_hist_need,
                                                           forecast_need,
                                                           plan_need,
                                                           plan_reproject_need,
                                                           receipt_plan_need,
                                                           corp_rule_need,
                                                           like_source_item,
                                                           like_source_item_level,
                                                           like_source_tran_level,
                                                           like_source_pack_ind,
                                                           like_source_diff1_id,
                                                           like_source_diff2_id,
                                                           like_source_diff3_id,
                                                           like_source_diff4_id,
                                                           like_tran_item,
                                                           like_tran_item_level,
                                                           like_tran_tran_level,
                                                           like_tran_pack_ind,
                                                           like_tran_diff1_id,
                                                           like_tran_diff2_id,
                                                           like_tran_diff3_id,
                                                           like_tran_diff4_id,
                                                           like_hier1,
                                                           like_hier2,
                                                           like_hier3,
                                                           like_pack_no,
                                                           like_weight,
                                                           like_size_prof_ind,
                                                           create_id,
                                                           create_datetime,
                                                           last_update_id,
                                                           last_update_datetime)
                                                    SELECT DISTINCT cd.alloc_no,
                                                           -1,
                                                           %s,
                                                           cd.hier1,
                                                           cd.hier2,
                                                           cd.hier3,
                                                           cd.source_item,
                                                           cd.source_item_level,
                                                           cd.source_tran_level,
                                                           cd.source_pack_ind,
                                                           cd.source_diff1_id,
                                                           cd.source_diff2_id,
                                                           cd.source_diff3_id,
                                                           cd.source_diff4_id,
                                                           cd.tran_item,
                                                           cd.tran_item_level,
                                                           cd.tran_tran_level,
                                                           cd.tran_pack_ind,
                                                           cd.tran_diff1_id,
                                                           cd.tran_diff2_id,
                                                           cd.tran_diff3_id,
                                                           cd.tran_diff4_id,
                                                           cd.to_loc,
                                                           cd.sister_store,
                                                           cd.sister_store_weight,
                                                           NULL,                      
                                                           NULL,                    
                                                           d.eow_date,
                                                           d.weight,
                                                           -1,
                                                           -1,
                                                           -1,
                                                           -1,
                                                           -1,
                                                           -1,
                                                           cd.like_source_item,
                                                           cd.like_source_item_level,
                                                           cd.like_source_tran_level,
                                                           cd.like_source_pack_ind,
                                                           cd.like_source_diff1_id,
                                                           cd.like_source_diff2_id,
                                                           cd.like_source_diff3_id,
                                                           cd.like_source_diff4_id,
                                                           cd.like_tran_item,
                                                           cd.like_tran_item_level,
                                                           cd.like_tran_tran_level,
                                                           cd.like_tran_pack_ind,
                                                           cd.like_tran_diff1_id,
                                                           cd.like_tran_diff2_id,
                                                           cd.like_tran_diff3_id,
                                                           cd.like_tran_diff4_id,
                                                           cd.like_hier1,
                                                           cd.like_hier2,
                                                           cd.like_hier3,
                                                           cd.like_pack_no,
                                                           cd.like_weight,
                                                           cd.like_size_prof_ind,
                                                           USER()              create_id,
                                                           current_timestamp() create_datetime,
                                                           USER()              last_update_id,
                                                           current_timestamp() last_update_datetime
                                                      FROM (SELECT DISTINCT tmp.alloc_no,
                                                                   tmp.hier1,
                                                                   tmp.hier2,
                                                                   tmp.hier3,
                                                                   tmp.source_item,
                                                                   tmp.source_item_level,
                                                                   tmp.source_tran_level,
                                                                   tmp.source_pack_ind,
                                                                   tmp.source_diff1_id,
                                                                   tmp.source_diff2_id,
                                                                   tmp.source_diff3_id,
                                                                   tmp.source_diff4_id,
                                                                   im.item           tran_item,
                                                                   im.item_level     tran_item_level,
                                                                   im.tran_level     tran_tran_level,
                                                                   im.pack_ind       tran_pack_ind,
                                                                   NULL              tran_diff1_id,
                                                                   NULL              tran_diff2_id,
                                                                   NULL              tran_diff3_id,
                                                                   NULL              tran_diff4_id,
                                                                   tmp.to_loc,
                                                                   tmp.sister_store,
                                                                   tmp.sister_store_weight,
                                                                   tmp.like_source_item,
                                                                   tmp.like_source_item_level,
                                                                   tmp.like_source_tran_level,
                                                                   tmp.like_source_pack_ind,
                                                                   tmp.like_source_diff1_id,
                                                                   tmp.like_source_diff2_id,
                                                                   tmp.like_source_diff3_id,
                                                                   tmp.like_source_diff4_id,
                                                                   tmp.like_tran_item,
                                                                   tmp.like_tran_item_level,
                                                                   tmp.like_tran_tran_level,
                                                                   tmp.like_tran_pack_ind,
                                                                   tmp.like_tran_diff1_id,
                                                                   tmp.like_tran_diff2_id,
                                                                   tmp.like_tran_diff3_id,
                                                                   tmp.like_tran_diff4_id,
                                                                   tmp.like_hier1,
                                                                   tmp.like_hier2,
                                                                   tmp.like_hier3,
                                                                   tmp.like_pack_no,
                                                                   tmp.like_weight,
                                                                   tmp.like_size_prof_ind
                                                              FROM alloc_calc_destination_temp tmp,
                                                                   item_dtl                    im
                                                             WHERE tmp.alloc_no = %s
                                                               AND tmp.source_tran_level = tmp.source_item_level + 1   
                                                               AND tmp.source_item = im.item_parent
                                                               AND im.item_level = im.tran_level
                                                               AND im.status = 'A'
                                                            UNION ALL
                                                            SELECT DISTINCT tmp.alloc_no,
                                                                   tmp.hier1,
                                                                   tmp.hier2,
                                                                   tmp.hier3,
                                                                   im2.item_parent,
                                                                   im2.item_level - 1,
                                                                   im2.tran_level,
                                                                   im2.pack_ind,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   im2.item,
                                                                   im2.item_level,
                                                                   im2.tran_level,
                                                                   im2.pack_ind,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   tmp.to_loc,
                                                                   tmp.sister_store,
                                                                   tmp.sister_store_weight,
                                                                   tmp.like_source_item,
                                                                   tmp.like_source_item_level,
                                                                   tmp.like_source_tran_level,
                                                                   tmp.like_source_pack_ind,
                                                                   tmp.like_source_diff1_id,
                                                                   tmp.like_source_diff2_id,
                                                                   tmp.like_source_diff3_id,
                                                                   tmp.like_source_diff4_id,
                                                                   tmp.like_tran_item,
                                                                   tmp.like_tran_item_level,
                                                                   tmp.like_tran_tran_level,
                                                                   tmp.like_tran_pack_ind,
                                                                   tmp.like_tran_diff1_id,
                                                                   tmp.like_tran_diff2_id,
                                                                   tmp.like_tran_diff3_id,
                                                                   tmp.like_tran_diff4_id,
                                                                   tmp.like_hier1,
                                                                   tmp.like_hier2,
                                                                   tmp.like_hier3,
                                                                   tmp.like_pack_no,
                                                                   tmp.like_weight,
                                                                   tmp.like_size_prof_ind
                                                              FROM alloc_calc_destination_temp tmp,
                                                                   item_dtl                    im2 
                                                             WHERE tmp.alloc_no = %s
                                                               AND tmp.source_tran_level = tmp.source_item_level
                                                               AND im2.status = 'A'
                                                               AND EXISTS (SELECT 'x'
                                                                             FROM item_dtl im
                                                                            WHERE tmp.tran_item = im.item
                                                                              AND im2.item_parent = im.item_parent
                                                                              AND im.item_parent IS NOT NULL
                                                                                  LIMIT 1)) cd,
                                                            alloc_calc_need_dates  d                              
                                                      WHERE d.alloc_no = %s; "

  Q_ins_style_diff: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                       rule_many_to_one_id,
                                                       rule_level,
                                                       hier1,
                                                       hier2,
                                                       hier3,
                                                       source_item,
                                                       source_item_level,
                                                       source_tran_level,
                                                       source_pack_ind,
                                                       source_diff1_id,
                                                       source_diff2_id,
                                                       source_diff3_id,
                                                       source_diff4_id,
                                                       tran_item,
                                                       tran_item_level,
                                                       tran_tran_level,
                                                       tran_pack_ind,
                                                       tran_diff1_id,
                                                       tran_diff2_id,
                                                       tran_diff3_id,
                                                       tran_diff4_id,
                                                       to_loc,
                                                       sister_store,
                                                       sister_store_weight,
                                                       size_profile_qty,
                                                       total_profile_qty,
                                                       eow_date,
                                                       weight,
                                                       sales_hist_need,
                                                       forecast_need,
                                                       plan_need,
                                                       plan_reproject_need,
                                                       receipt_plan_need,
                                                       corp_rule_need,
                                                       like_source_item,
                                                       like_source_item_level,
                                                       like_source_tran_level,
                                                       like_source_pack_ind,
                                                       like_source_diff1_id,
                                                       like_source_diff2_id,
                                                       like_source_diff3_id,
                                                       like_source_diff4_id,
                                                       like_tran_item,
                                                       like_tran_item_level,
                                                       like_tran_tran_level,
                                                       like_tran_pack_ind,
                                                       like_tran_diff1_id,
                                                       like_tran_diff2_id,
                                                       like_tran_diff3_id,
                                                       like_tran_diff4_id,
                                                       like_hier1,
                                                       like_hier2,
                                                       like_hier3,
                                                       like_pack_no,
                                                       like_weight,
                                                       like_size_prof_ind,
                                                       create_id,
                                                       create_datetime,
                                                       last_update_id,
                                                       last_update_datetime) 
                                                SELECT DISTINCT cd.alloc_no,
                                                       -1,
                                                       %s,
                                                       cd.hier1,
                                                       cd.hier2,
                                                       cd.hier3,
                                                       cd.source_item,
                                                       cd.source_item_level,
                                                       cd.source_tran_level,
                                                       cd.source_pack_ind,
                                                       cd.source_diff1_id,
                                                       cd.source_diff2_id,
                                                       cd.source_diff3_id,
                                                       cd.source_diff4_id,
                                                       cd.tran_item,
                                                       cd.tran_item_level,
                                                       cd.tran_tran_level,
                                                       cd.tran_pack_ind,
                                                       cd.tran_diff1_id,
                                                       cd.tran_diff2_id,
                                                       cd.tran_diff3_id,
                                                       cd.tran_diff4_id,
                                                       cd.to_loc,
                                                       cd.sister_store,
                                                       cd.sister_store_weight,
                                                       NULL,                      
                                                       NULL,                    
                                                       d.eow_date,
                                                       d.weight,
                                                       -1,
                                                       -1,
                                                       -1,
                                                       -1,
                                                       -1,
                                                       -1,
                                                       cd.like_source_item,
                                                       cd.like_source_item_level,
                                                       cd.like_source_tran_level,
                                                       cd.like_source_pack_ind,
                                                       cd.like_source_diff1_id,
                                                       cd.like_source_diff2_id,
                                                       cd.like_source_diff3_id,
                                                       cd.like_source_diff4_id,
                                                       cd.like_tran_item,
                                                       cd.like_tran_item_level,
                                                       cd.like_tran_tran_level,
                                                       cd.like_tran_pack_ind,
                                                       cd.like_tran_diff1_id,
                                                       cd.like_tran_diff2_id,
                                                       cd.like_tran_diff3_id,
                                                       cd.like_tran_diff4_id,
                                                       cd.like_hier1,
                                                       cd.like_hier2,
                                                       cd.like_hier3,
                                                       cd.like_pack_no,
                                                       cd.like_weight,
                                                       cd.like_size_prof_ind,
                                                       USER()              create_id,
                                                       current_timestamp() create_datetime,
                                                       USER()              last_update_id,
                                                       current_timestamp() last_update_datetime
                                                  FROM (SELECT tmp.alloc_no,
                                                               tmp.hier1,
                                                               tmp.hier2,
                                                               tmp.hier3,
                                                               tmp.source_item,
                                                               tmp.source_item_level,
                                                               tmp.source_tran_level,
                                                               tmp.source_pack_ind,
                                                               tmp.source_diff1_id,
                                                               tmp.source_diff2_id,
                                                               tmp.source_diff3_id,
                                                               tmp.source_diff4_id,
                                                               im.item           tran_item,
                                                               im.item_level     tran_item_level,
                                                               im.tran_level     tran_tran_level,
                                                               im.pack_ind       tran_pack_ind,
                                                               im.diff1         tran_diff1_id,
                                                               im.diff2         tran_diff2_id,
                                                               im.diff3         tran_diff3_id,
                                                               im.diff4         tran_diff4_id,
                                                               tmp.to_loc,
                                                               tmp.sister_store,
                                                               tmp.sister_store_weight,
                                                               tmp.like_source_item,
                                                               tmp.like_source_item_level,
                                                               tmp.like_source_tran_level,
                                                               tmp.like_source_pack_ind,
                                                               tmp.like_source_diff1_id,
                                                               tmp.like_source_diff2_id,
                                                               tmp.like_source_diff3_id,
                                                               tmp.like_source_diff4_id,
                                                               tmp.like_tran_item,
                                                               tmp.like_tran_item_level,
                                                               tmp.like_tran_tran_level,
                                                               tmp.like_tran_pack_ind,
                                                               tmp.like_tran_diff1_id,
                                                               tmp.like_tran_diff2_id,
                                                               tmp.like_tran_diff3_id,
                                                               tmp.like_tran_diff4_id,
                                                               tmp.like_hier1,
                                                               tmp.like_hier2,
                                                               tmp.like_hier3,
                                                               tmp.like_pack_no,
                                                               tmp.like_weight,
                                                               tmp.like_size_prof_ind
                                                          FROM alloc_calc_destination_temp tmp,
                                                               item_dtl                    im
                                                         WHERE tmp.alloc_no = %s
                                                           AND tmp.source_item_level = tmp.source_tran_level - 1
                                                           AND tmp.source_item = im.item_parent
                                                           AND im.item_level = im.tran_level
                                                           AND im.status = 'A'
                                                           AND COALESCE(tmp.source_diff1_id,COALESCE(im.diff1,'-999')) = COALESCE(im.diff1,'-999')
                                                           AND COALESCE(tmp.source_diff2_id,COALESCE(im.diff2,'-999')) = COALESCE(im.diff2,'-999')
                                                           AND COALESCE(tmp.source_diff3_id,COALESCE(im.diff3,'-999')) = COALESCE(im.diff3,'-999')
                                                           AND COALESCE(tmp.source_diff4_id,COALESCE(im.diff4,'-999')) = COALESCE(im.diff4, '-999')
                                                       UNION ALL
                                                       SELECT DISTINCT tmp.alloc_no,
                                                              tmp.hier1,
                                                              tmp.hier2,
                                                              tmp.hier3,
                                                              im2.item_parent,
                                                              im2.item_level - 1,
                                                              im2.tran_level,
                                                              im2.pack_ind,
                                                              NULL,
                                                              NULL,
                                                              NULL,
                                                              NULL,
                                                              im2.item,
                                                              im2.item_level,
                                                              im2.tran_level,
                                                              im2.pack_ind,
                                                              NULL,
                                                              NULL,
                                                              NULL,
                                                              NULL,
                                                              tmp.to_loc,
                                                              tmp.sister_store,
                                                              tmp.sister_store_weight,
                                                              tmp.like_source_item,
                                                              tmp.like_source_item_level,
                                                              tmp.like_source_tran_level,
                                                              tmp.like_source_pack_ind,
                                                              tmp.like_source_diff1_id,
                                                              tmp.like_source_diff2_id,
                                                              tmp.like_source_diff3_id,
                                                              tmp.like_source_diff4_id,
                                                              tmp.like_tran_item,
                                                              tmp.like_tran_item_level,
                                                              tmp.like_tran_tran_level,
                                                              tmp.like_tran_pack_ind,
                                                              tmp.like_tran_diff1_id,
                                                              tmp.like_tran_diff2_id,
                                                              tmp.like_tran_diff3_id,
                                                              tmp.like_tran_diff4_id,
                                                              tmp.like_hier1,
                                                              tmp.like_hier2,
                                                              tmp.like_hier3,
                                                              tmp.like_pack_no,
                                                              tmp.like_weight,
                                                              tmp.like_size_prof_ind
                                                         FROM alloc_calc_destination_temp tmp,
                                                              item_dtl                    im, 
                                                              item_dtl                    im2 
                                                        WHERE tmp.alloc_no = %s
                                                          AND tmp.source_tran_level = tmp.source_item_level
                                                          AND tmp.tran_item = im.item
                                                          AND im.item_parent IS NOT NULL
                                                          AND im2.item_parent = im.item_parent
                                                          AND im2.status = 'A') cd,
                                                       alloc_calc_need_dates  d
                                                 WHERE d.alloc_no = %s; "

  Q_ins_style_sku: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                      rule_many_to_one_id,
                                                      rule_level,
                                                      hier1,
                                                      hier2,
                                                      hier3,
                                                      source_item,
                                                      source_item_level,
                                                      source_tran_level,
                                                      source_pack_ind,
                                                      source_diff1_id,
                                                      source_diff2_id,
                                                      source_diff3_id,
                                                      source_diff4_id,
                                                      tran_item,
                                                      tran_item_level,
                                                      tran_tran_level,
                                                      tran_pack_ind,
                                                      tran_diff1_id,
                                                      tran_diff2_id,
                                                      tran_diff3_id,
                                                      tran_diff4_id,
                                                      to_loc,
                                                      sister_store,
                                                      sister_store_weight,
                                                      size_profile_qty,
                                                      total_profile_qty,
                                                      eow_date,
                                                      weight,
                                                      sales_hist_need,
                                                      forecast_need,
                                                      plan_need,
                                                      plan_reproject_need,
                                                      receipt_plan_need,
                                                      corp_rule_need,
                                                      like_source_item,
                                                      like_source_item_level,
                                                      like_source_tran_level,
                                                      like_source_pack_ind,
                                                      like_source_diff1_id,
                                                      like_source_diff2_id,
                                                      like_source_diff3_id,
                                                      like_source_diff4_id,
                                                      like_tran_item,
                                                      like_tran_item_level,
                                                      like_tran_tran_level,
                                                      like_tran_pack_ind,
                                                      like_tran_diff1_id,
                                                      like_tran_diff2_id,
                                                      like_tran_diff3_id,
                                                      like_tran_diff4_id,
                                                      like_hier1,
                                                      like_hier2,
                                                      like_hier3,
                                                      like_pack_no,
                                                      like_weight,
                                                      like_size_prof_ind,
                                                      create_id,
                                                      create_datetime,
                                                      last_update_id,
                                                      last_update_datetime)
                                               SELECT DISTINCT tmp.alloc_no,
                                                      -1,
                                                      %s,
                                                      tmp.hier1,
                                                      tmp.hier2,
                                                      tmp.hier3,
                                                      tmp.source_item,
                                                      tmp.source_item_level,
                                                      tmp.source_tran_level,
                                                      tmp.source_pack_ind,
                                                      tmp.source_diff1_id,
                                                      tmp.source_diff2_id,
                                                      tmp.source_diff3_id,
                                                      tmp.source_diff4_id,
                                                      tmp.tran_item,
                                                      tmp.tran_item_level,
                                                      tmp.tran_tran_level,
                                                      tmp.tran_pack_ind,
                                                      tmp.tran_diff1_id,
                                                      tmp.tran_diff2_id,
                                                      tmp.tran_diff3_id,
                                                      tmp.tran_diff4_id,
                                                      tmp.to_loc,
                                                      tmp.sister_store,
                                                      tmp.sister_store_weight,
                                                      NULL,                      
                                                      NULL,                   
                                                      d.eow_date,
                                                      d.weight,
                                                      -1,
                                                      -1,
                                                      -1,
                                                      -1,
                                                      -1,
                                                      -1,
                                                      tmp.like_source_item,
                                                      tmp.like_source_item_level,
                                                      tmp.like_source_tran_level,
                                                      tmp.like_source_pack_ind,
                                                      tmp.like_source_diff1_id,
                                                      tmp.like_source_diff2_id,
                                                      tmp.like_source_diff3_id,
                                                      tmp.like_source_diff4_id,
                                                      tmp.like_tran_item,
                                                      tmp.like_tran_item_level,
                                                      tmp.like_tran_tran_level,
                                                      tmp.like_tran_pack_ind,
                                                      tmp.like_tran_diff1_id,
                                                      tmp.like_tran_diff2_id,
                                                      tmp.like_tran_diff3_id,
                                                      tmp.like_tran_diff4_id,
                                                      tmp.like_hier1,
                                                      tmp.like_hier2,
                                                      tmp.like_hier3,
                                                      tmp.like_pack_no,
                                                      tmp.like_weight,
                                                      tmp.like_size_prof_ind,
                                                      USER()              create_id,
                                                      current_timestamp() create_datetime,
                                                      USER()              last_update_id,
                                                      current_timestamp() last_update_datetime
                                                FROM alloc_calc_destination_temp  tmp,
                                                     alloc_calc_need_dates  d
                                               WHERE tmp.alloc_no = %s
                                                 AND tmp.alloc_no = d.alloc_no
                                                 AND tmp.source_item_level =  tmp.source_tran_level; " 

  Q_ins_forecast_sku: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                         rule_many_to_one_id,
                                                         rule_level,
                                                         hier1,
                                                         hier2,
                                                         hier3,
                                                         source_item,
                                                         source_item_level,
                                                         source_tran_level,
                                                         source_pack_ind,
                                                         source_diff1_id,
                                                         source_diff2_id,
                                                         source_diff3_id,
                                                         source_diff4_id,
                                                         tran_item,
                                                         tran_item_level,
                                                         tran_tran_level,
                                                         tran_pack_ind,
                                                         tran_diff1_id,
                                                         tran_diff2_id,
                                                         tran_diff3_id,
                                                         tran_diff4_id,
                                                         to_loc,
                                                         sister_store,
                                                         sister_store_weight,
                                                         size_profile_qty,
                                                         total_profile_qty,
                                                         eow_date,
                                                         weight,
                                                         sales_hist_need,
                                                         forecast_need,
                                                         replan_need,
                                                         plan_need,
                                                         plan_reproject_need,
                                                         receipt_plan_need,
                                                         corp_rule_need,
                                                         like_source_item,
                                                         like_source_item_level,
                                                         like_source_tran_level,
                                                         like_source_pack_ind,
                                                         like_source_diff1_id,
                                                         like_source_diff2_id,
                                                         like_source_diff3_id,
                                                         like_source_diff4_id,
                                                         like_tran_item,
                                                         like_tran_item_level,
                                                         like_tran_tran_level,
                                                         like_tran_pack_ind,
                                                         like_tran_diff1_id,
                                                         like_tran_diff2_id,
                                                         like_tran_diff3_id,
                                                         like_tran_diff4_id,
                                                         like_hier1,
                                                         like_hier2,
                                                         like_hier3,
                                                         like_pack_no,
                                                         like_weight,
                                                         like_size_prof_ind,
                                                         create_id,
                                                         create_datetime,
                                                         last_update_id,
                                                         last_update_datetime)
                                                  WITH
                                                      cd
                                                      AS (SELECT DISTINCT tmp.alloc_no,
                                                                 tmp.hier1,
                                                                 tmp.hier2,
                                                                 tmp.hier3,
                                                                 tmp.source_item,
                                                                 tmp.source_item_level,
                                                                 tmp.source_tran_level,
                                                                 tmp.source_pack_ind,
                                                                 tmp.source_diff1_id,
                                                                 tmp.source_diff2_id,
                                                                 tmp.source_diff3_id,
                                                                 tmp.source_diff4_id,
                                                                 tmp.tran_item,
                                                                 tmp.tran_item_level,
                                                                 tmp.tran_tran_level,
                                                                 tmp.tran_pack_ind,
                                                                 tmp.tran_diff1_id,
                                                                 tmp.tran_diff2_id,
                                                                 tmp.tran_diff3_id,
                                                                 tmp.tran_diff4_id,
                                                                 tmp.to_loc,
                                                                 tmp.sister_store,
                                                                 tmp.sister_store_weight,
                                                                 tmp.like_source_item,
                                                                 tmp.like_source_item_level,
                                                                 tmp.like_source_tran_level,
                                                                 tmp.like_source_pack_ind,
                                                                 tmp.like_source_diff1_id,
                                                                 tmp.like_source_diff2_id,
                                                                 tmp.like_source_diff3_id,
                                                                 tmp.like_source_diff4_id,
                                                                 tmp.like_tran_item,
                                                                 tmp.like_tran_item_level,
                                                                 tmp.like_tran_tran_level,
                                                                 tmp.like_tran_pack_ind,
                                                                 tmp.like_tran_diff1_id,
                                                                 tmp.like_tran_diff2_id,
                                                                 tmp.like_tran_diff3_id,
                                                                 tmp.like_tran_diff4_id,
                                                                 tmp.like_hier1,
                                                                 tmp.like_hier2,
                                                                 tmp.like_hier3,
                                                                 tmp.like_pack_no,
                                                                 tmp.like_weight,
                                                                 tmp.like_size_prof_ind
                                                            FROM alloc_calc_destination_temp tmp
                                                           WHERE tmp.alloc_no = %s)
                                                          SELECT cd.alloc_no,
                                                                 -1,
                                                                 %s,
                                                                 cd.hier1,
                                                                 cd.hier2,
                                                                 cd.hier3,
                                                                 cd.source_item,
                                                                 cd.source_item_level,
                                                                 cd.source_tran_level,
                                                                 cd.source_pack_ind,
                                                                 cd.source_diff1_id,
                                                                 cd.source_diff2_id,
                                                                 cd.source_diff3_id,
                                                                 cd.source_diff4_id,
                                                                 cd.tran_item,
                                                                 cd.tran_item_level,
                                                                 cd.tran_tran_level,
                                                                 cd.tran_pack_ind,
                                                                 cd.tran_diff1_id,
                                                                 cd.tran_diff2_id,
                                                                 cd.tran_diff3_id,
                                                                 cd.tran_diff4_id,
                                                                 cd.to_loc,
                                                                 cd.sister_store,
                                                                 cd.sister_store_weight,
                                                                 NULL,                               
                                                                 NULL,                               
                                                                 d.eow_date,
                                                                 d.weight,
                                                                 -1,
                                                                 -1,
                                                                 -1,
                                                                 -1,
                                                                 -1,
                                                                 -1,
                                                                 -1,
                                                                 cd.like_source_item,
                                                                 cd.like_source_item_level,
                                                                 cd.like_source_tran_level,
                                                                 cd.like_source_pack_ind,
                                                                 cd.like_source_diff1_id,
                                                                 cd.like_source_diff2_id,
                                                                 cd.like_source_diff3_id,
                                                                 cd.like_source_diff4_id,
                                                                 cd.like_tran_item,
                                                                 cd.like_tran_item_level,
                                                                 cd.like_tran_tran_level,
                                                                 cd.like_tran_pack_ind,
                                                                 cd.like_tran_diff1_id,
                                                                 cd.like_tran_diff2_id,
                                                                 cd.like_tran_diff3_id,
                                                                 cd.like_tran_diff4_id,
                                                                 cd.like_hier1,
                                                                 cd.like_hier2,
                                                                 cd.like_hier3,
                                                                 cd.like_pack_no,
                                                                 cd.like_weight,
                                                                 cd.like_size_prof_ind,
                                                                 USER()              create_id,
                                                                 current_timestamp() create_datetime,
                                                                 USER()              last_update_id,
                                                                 current_timestamp() last_update_datetime
                                                            FROM cd, 
                                                                 alloc_calc_need_dates d
                                                           WHERE d.alloc_no = %s
                                                             AND d.alloc_no = cd.alloc_no;"

  Q_ins_frst_sku_list: " INSERT INTO alloc_calc_need_temp(alloc_no,
                                                          rule_many_to_one_id,
                                                          rule_level,
                                                          hier1,
                                                          hier2,
                                                          hier3,
                                                          source_item,
                                                          source_item_level,
                                                          source_tran_level,
                                                          source_pack_ind,
                                                          source_diff1_id,
                                                          source_diff2_id,
                                                          source_diff3_id,
                                                          source_diff4_id,
                                                          tran_item,
                                                          tran_item_level,
                                                          tran_tran_level,
                                                          tran_pack_ind,
                                                          tran_diff1_id,
                                                          tran_diff2_id,
                                                          tran_diff3_id,
                                                          tran_diff4_id,
                                                          to_loc,
                                                          sister_store,
                                                          sister_store_weight,
                                                          size_profile_qty,
                                                          total_profile_qty,
                                                          eow_date,
                                                          weight,
                                                          sales_hist_need,
                                                          forecast_need,
                                                          replan_need,
                                                          plan_need,
                                                          plan_reproject_need,
                                                          receipt_plan_need,
                                                          corp_rule_need,
                                                          like_source_item,
                                                          like_source_item_level,
                                                          like_source_tran_level,
                                                          like_source_pack_ind,
                                                          like_source_diff1_id,
                                                          like_source_diff2_id,
                                                          like_source_diff3_id,
                                                          like_source_diff4_id,
                                                          like_tran_item,
                                                          like_tran_item_level,
                                                          like_tran_tran_level,
                                                          like_tran_pack_ind,
                                                          like_tran_diff1_id,
                                                          like_tran_diff2_id,
                                                          like_tran_diff3_id,
                                                          like_tran_diff4_id,
                                                          like_hier1,
                                                          like_hier2,
                                                          like_hier3,
                                                          like_pack_no,
                                                          like_weight,
                                                          like_size_prof_ind,
                                                          create_id,
                                                          create_datetime,
                                                          last_update_id,
                                                          last_update_datetime)
                                                      WITH
                                                          cd
                                                          AS   
                                                          (SELECT DISTINCT tmp.alloc_no,
                                                                  tmp.hier1,
                                                                  tmp.hier2,
                                                                  tmp.hier3,
                                                                  tmp.source_item,
                                                                  tmp.source_item_level,
                                                                  tmp.source_tran_level,
                                                                  tmp.source_pack_ind,
                                                                  tmp.source_diff1_id,
                                                                  tmp.source_diff2_id,
                                                                  tmp.source_diff3_id,
                                                                  tmp.source_diff4_id,
                                                                  tmp.tran_item,
                                                                  tmp.tran_item_level,
                                                                  tmp.tran_tran_level,
                                                                  tmp.tran_pack_ind,
                                                                  tmp.tran_diff1_id,
                                                                  tmp.tran_diff2_id,
                                                                  tmp.tran_diff3_id,
                                                                  tmp.tran_diff4_id,
                                                                  tmp.to_loc,
                                                                  tmp.sister_store,
                                                                  tmp.sister_store_weight,
                                                                  tmp.like_source_item,
                                                                  tmp.like_source_item_level,
                                                                  tmp.like_source_tran_level,
                                                                  tmp.like_source_pack_ind,
                                                                  tmp.like_source_diff1_id,
                                                                  tmp.like_source_diff2_id,
                                                                  tmp.like_source_diff3_id,
                                                                  tmp.like_source_diff4_id,
                                                                  tmp.like_tran_item,
                                                                  tmp.like_tran_item_level,
                                                                  tmp.like_tran_tran_level,
                                                                  tmp.like_tran_pack_ind,
                                                                  tmp.like_tran_diff1_id,
                                                                  tmp.like_tran_diff2_id,
                                                                  tmp.like_tran_diff3_id,
                                                                  tmp.like_tran_diff4_id,
                                                                  tmp.like_hier1,
                                                                  tmp.like_hier2,
                                                                  tmp.like_hier3,
                                                                  tmp.like_pack_no,
                                                                  tmp.like_weight,
                                                                  tmp.like_size_prof_ind
                                                             FROM alloc_calc_destination_temp tmp
                                                            WHERE tmp.alloc_no = %s)
                                                           SELECT cd.alloc_no,
                                                                  -1,
                                                                  %s,
                                                                  cd.hier1,
                                                                  cd.hier2,
                                                                  cd.hier3,
                                                                  cd.source_item,
                                                                  cd.source_item_level,
                                                                  cd.source_tran_level,
                                                                  cd.source_pack_ind,
                                                                  cd.source_diff1_id,
                                                                  cd.source_diff2_id,
                                                                  cd.source_diff3_id,
                                                                  cd.source_diff4_id,
                                                                  cd.tran_item,
                                                                  cd.tran_item_level,
                                                                  cd.tran_tran_level,
                                                                  cd.tran_pack_ind,
                                                                  cd.tran_diff1_id,
                                                                  cd.tran_diff2_id,
                                                                  cd.tran_diff3_id,
                                                                  cd.tran_diff4_id,
                                                                  cd.to_loc,
                                                                  cd.sister_store,
                                                                  cd.sister_store_weight,
                                                                  NULL,                               
                                                                  NULL,                               
                                                                  d.eow_date,
                                                                  d.weight,
                                                                  -1,
                                                                  -1,
                                                                  -1,
                                                                  -1,
                                                                  -1,
                                                                  -1,
                                                                  -1,
                                                                  im.item,
                                                                  cd.like_source_item_level,
                                                                  cd.like_source_tran_level,
                                                                  cd.like_source_pack_ind,
                                                                  cd.like_source_diff1_id,
                                                                  cd.like_source_diff2_id,
                                                                  cd.like_source_diff3_id,
                                                                  cd.like_source_diff4_id,
                                                                  im.item,
                                                                  cd.like_tran_item_level,
                                                                  cd.like_tran_tran_level,
                                                                  cd.like_tran_pack_ind,
                                                                  cd.like_tran_diff1_id,
                                                                  cd.like_tran_diff2_id,
                                                                  cd.like_tran_diff3_id,
                                                                  cd.like_tran_diff4_id,
                                                                  cd.like_hier1,
                                                                  cd.like_hier2,
                                                                  cd.like_hier3,
                                                                  cd.like_pack_no,
                                                                  cd.like_weight,
                                                                  cd.like_size_prof_ind,
                                                                  USER()                create_id,
                                                                  current_timestamp()   create_datetime,
                                                                  current_date()        last_update_id,
                                                                  current_timestamp()   last_update_datetime
                                                             FROM cd,
                                                                  alloc_calc_need_dates d,
                                                                  item_list_dtl sd,
                                                                  item_list_head sh,
                                                                  item_dtl im
                                                            WHERE d.alloc_no = %s 
                                                              AND d.alloc_no = cd.alloc_no
                                                              AND cd.like_source_item = sd.item_list_no
                                                              AND sd.item_list_no     = sh.item_list_no
                                                              AND (im.item = sd.item OR im.item_parent = sd.item)
                                                              AND im.sellable_ind = 'Y'; "

  Q_del_frst_skulist: " DELETE FROM alloc_calc_need_temp 
                              WHERE alloc_no = %s
                                AND like_source_item IN (SELECT item_list_no
                                                           FROM item_list_head); "

setup_need:
  Q_fetch_rule: "SELECT rule_type FROM alloc_rule WHERE alloc_no = %s;"
  
setup_sales_hist_need:
  Q_fetch_rule: "SELECT rule_level,
                        rule_type,
                        regular_sales_ind,
                        promo_sales_ind,
                        clearance_sales_ind
                   FROM alloc_rule 
                  WHERE alloc_no = %s;"

  Q_create_temp_tble: " CREATE TEMPORARY TABLE alloc_calc_need_temp1 AS (SELECT * FROM alloc_calc_need_temp WHERE alloc_no = %s); "

  Q_drop_temp_tble: " DROP TABLE alloc_calc_need_temp1; "

setup_need_sales_hist_dept:
  Q_upd_dept_sales_need: " WITH 
                               use_this
                               AS 
                                 (SELECT tmp.alloc_no,
                                         tmp.rule_many_to_one_id,
                                         tmp.to_loc,
                                         tmp.hier1,
                                         tmp.eow_date,
                                         SUM(COALESCE(dsh.sales_qty,0)
                                             * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) sales
                                    FROM (SELECT at.alloc_no,
                                                 at.to_loc,
                                                 at.rule_many_to_one_id,
                                                 at.hier1,
                                                 at.eow_date,
                                                 at.weight,
                                                 ar.sales_type
                                            FROM alloc_calc_need_temp1 at,
                                                 ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                   UNION ALL
                                                  (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                   UNION ALL
                                                  (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                            WHERE at.alloc_no = %s
                                              AND at.rule_level = %s
                                              AND at.sales_hist_need = -1
                                              AND at.sister_store IS NULL) tmp,
                                         hier1_sales_hist dsh
                                   WHERE dsh.eow_date   = tmp.eow_date
                                     AND dsh.store      = tmp.to_loc
                                     AND dsh.sales_type = tmp.sales_type
                                     AND dsh.hier1      = tmp.hier1
                                GROUP BY tmp.alloc_no,
                                         tmp.rule_many_to_one_id,
                                         tmp.to_loc,
                                         tmp.hier1,
                                         tmp.eow_date)
                           UPDATE alloc_calc_need_temp tgt,use_this
                              SET tgt.sales_hist_need = use_this.sales,
                                  tgt.last_update_id  = USER(),
                                  tgt.last_update_datetime = current_timestamp()     
                            WHERE tgt.alloc_no = use_this.alloc_no
                              AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                              AND tgt.to_loc = use_this.to_loc
                              AND tgt.hier1 = use_this.hier1
                              AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_dept_sales_need: " WITH 
                                    use_this
                                    AS 
                                      (SELECT tmp.alloc_no,
                                              tmp.rule_many_to_one_id,
                                              tmp.to_loc,
                                              tmp.hier1,
                                              tmp.eow_date,
                                              SUM(COALESCE(dsh.sales,0)
                                                  * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) sales
                                         FROM (SELECT at.alloc_no,
                                                      at.to_loc,
                                                      at.rule_many_to_one_id,
                                                      at.hier1,
                                                      at.eow_date,
                                                      at.weight,
                                                      ar.sales_type
                                                 FROM alloc_calc_need_temp1 at,
                                                      ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                        UNION ALL
                                                       (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                        UNION ALL
                                                       (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                 WHERE at.alloc_no = %s
                                                   AND at.rule_level = %s
                                                   AND at.sister_store IS NULL) tmp,
                                              ecom_hier1_sales_hist dsh
                                        WHERE dsh.eow_date   = tmp.eow_date
                                          AND dsh.store      = tmp.to_loc
                                          AND dsh.sales_type = tmp.sales_type
                                          AND dsh.hier1      = tmp.hier1
                                     GROUP BY tmp.alloc_no,
                                              tmp.rule_many_to_one_id,
                                              tmp.to_loc,
                                              tmp.hier1,
                                              tmp.eow_date)
                                UPDATE alloc_calc_need_temp tgt,use_this
                                   SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                       tgt.last_update_id  = USER(),
                                       tgt.last_update_datetime = current_timestamp()     
                                 WHERE tgt.alloc_no = use_this.alloc_no
                                   AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND tgt.to_loc = use_this.to_loc
                                   AND tgt.hier1 = use_this.hier1
                                   AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_dept_sales_need: " WITH 
                                  use_this
                                  AS 
                                    (SELECT tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.hier1,
                                            tmp.eow_date,
                                            SUM(COALESCE(dsh.sales_qty,0)
                                                * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) sales
                                       FROM (SELECT at.alloc_no,
                                                    at.to_loc,
                                                    at.sister_store,
                                                    at.sister_store_weight,
                                                    at.rule_many_to_one_id,
                                                    at.hier1,
                                                    at.eow_date,
                                                    at.weight,
                                                    ar.sales_type
                                               FROM alloc_calc_need_temp1 at,
                                                    ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                      UNION ALL
                                                     (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                      UNION ALL
                                                     (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                               WHERE at.alloc_no = %s
                                                 AND at.rule_level = %s
                                                 AND at.sales_hist_need = -1
                                                 AND at.sister_store IS NOT NULL) tmp,
                                            hier1_sales_hist dsh
                                      WHERE dsh.eow_date   = tmp.eow_date
                                        AND dsh.store      = tmp.sister_store
                                        AND dsh.sales_type = tmp.sales_type
                                        AND dsh.hier1      = tmp.hier1
                                   GROUP BY tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.hier1,
                                            tmp.eow_date)
                              UPDATE alloc_calc_need_temp tgt,use_this
                                 SET tgt.sales_hist_need = use_this.sales,
                                     tgt.last_update_id  = USER(),
                                     tgt.last_update_datetime = current_timestamp()     
                               WHERE tgt.alloc_no = use_this.alloc_no
                                 AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                 AND tgt.to_loc = use_this.to_loc
                                 AND tgt.hier1 = use_this.hier1
                                 AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_ecom_dept_sales_need: " WITH 
                                       use_this
                                       AS 
                                         (SELECT tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.eow_date,
                                                 SUM(COALESCE(dsh.sales,0)
                                                     * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                     * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) sales
                                            FROM (SELECT at.alloc_no,
                                                         at.to_loc,
                                                         at.sister_store,
                                                         at.sister_store_weight,
                                                         at.rule_many_to_one_id,
                                                         at.hier1,
                                                         at.eow_date,
                                                         at.weight,
                                                         ar.sales_type
                                                    FROM alloc_calc_need_temp1 at,
                                                         ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                    WHERE at.alloc_no = %s
                                                      AND at.rule_level = %s
                                                      AND at.sister_store IS NOT NULL) tmp,
                                                 ecom_hier1_sales_hist dsh
                                           WHERE dsh.eow_date   = tmp.eow_date
                                             AND dsh.store      = tmp.sister_store
                                             AND dsh.sales_type = tmp.sales_type
                                             AND dsh.hier1      = tmp.hier1
                                        GROUP BY tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.eow_date)
                                   UPDATE alloc_calc_need_temp tgt,use_this
                                      SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                          tgt.last_update_id  = USER(),
                                          tgt.last_update_datetime = current_timestamp()     
                                    WHERE tgt.alloc_no = use_this.alloc_no
                                      AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                      AND tgt.to_loc = use_this.to_loc
                                      AND tgt.hier1 = use_this.hier1
                                      AND tgt.eow_date = use_this.eow_date; "

setup_need_sales_hist_class:
  Q_upd_class_sales_need: " WITH 
                                use_this
                                AS 
                                  (SELECT tmp.alloc_no,
                                         tmp.rule_many_to_one_id,
                                         tmp.to_loc,
                                         tmp.hier1,
                                         tmp.hier2,
                                         tmp.eow_date,
                                         SUM(COALESCE(dsh.sales_qty,0)
                                             * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) sales
                                    FROM (SELECT at.alloc_no,
                                                 at.to_loc,
                                                 at.rule_many_to_one_id,
                                                 at.hier1,
                                                 at.hier2,
                                                 at.eow_date,
                                                 at.weight,
                                                 ar.sales_type
                                            FROM alloc_calc_need_temp1 at,
                                                 ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                   UNION ALL
                                                  (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                   UNION ALL
                                                  (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                            WHERE at.alloc_no = %s
                                              AND at.rule_level = %s
                                              AND at.sales_hist_need = -1
                                              AND at.sister_store IS NULL) tmp,
                                         hier2_sales_hist dsh
                                   WHERE dsh.eow_date   = tmp.eow_date
                                     AND dsh.store      = tmp.to_loc
                                     AND dsh.sales_type = tmp.sales_type
                                     AND dsh.hier1      = tmp.hier1
                                     AND dsh.hier2      = tmp.hier2
                                GROUP BY tmp.alloc_no,
                                         tmp.rule_many_to_one_id,
                                         tmp.to_loc,
                                         tmp.hier1,
                                         tmp.hier2,
                                         tmp.eow_date)
                           UPDATE alloc_calc_need_temp tgt,use_this
                              SET tgt.sales_hist_need = use_this.sales,
                                  tgt.last_update_id  = USER(),
                                  tgt.last_update_datetime = current_timestamp()     
                            WHERE tgt.alloc_no = use_this.alloc_no
                              AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                              AND tgt.to_loc = use_this.to_loc
                              AND tgt.hier1 = use_this.hier1
                              AND tgt.hier2 = use_this.hier2
                              AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_class_sales_need: " WITH 
                                     use_this
                                     AS 
                                       (SELECT tmp.alloc_no,
                                              tmp.rule_many_to_one_id,
                                              tmp.to_loc,
                                              tmp.hier1,
                                              tmp.hier2,
                                              tmp.eow_date,
                                              SUM(COALESCE(dsh.sales,0)
                                                  * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) sales
                                         FROM (SELECT at.alloc_no,
                                                      at.to_loc,
                                                      at.rule_many_to_one_id,
                                                      at.hier1,
                                                      at.hier2,
                                                      at.eow_date,
                                                      at.weight,
                                                      ar.sales_type
                                                 FROM alloc_calc_need_temp1 at,
                                                      ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                        UNION ALL
                                                       (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                        UNION ALL
                                                       (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                 WHERE at.alloc_no = %s
                                                   AND at.rule_level = %s
                                                   AND at.sister_store IS NULL) tmp,
                                              ecom_hier2_sales_hist dsh
                                        WHERE dsh.eow_date   = tmp.eow_date
                                          AND dsh.store      = tmp.to_loc
                                          AND dsh.sales_type = tmp.sales_type
                                          AND dsh.hier1      = tmp.hier1
                                          AND dsh.hier2      = tmp.hier2
                                     GROUP BY tmp.alloc_no,
                                              tmp.rule_many_to_one_id,
                                              tmp.to_loc,
                                              tmp.hier1,
                                              tmp.hier2,
                                              tmp.eow_date)
                                 UPDATE alloc_calc_need_temp tgt,use_this
                                    SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                        tgt.last_update_id  = USER(),
                                        tgt.last_update_datetime = current_timestamp()     
                                  WHERE tgt.alloc_no = use_this.alloc_no
                                    AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                    AND tgt.to_loc = use_this.to_loc
                                    AND tgt.hier1 = use_this.hier1
                                    AND tgt.hier2 = use_this.hier2
                                    AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_class_sales_need: " WITH 
                                   use_this
                                   AS 
                                     (SELECT tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.hier1,
                                            tmp.hier2,
                                            tmp.eow_date,
                                            SUM(COALESCE(dsh.sales_qty,0)
                                                * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) sales
                                       FROM (SELECT at.alloc_no,
                                                    at.to_loc,
                                                    at.sister_store,
                                                    at.sister_store_weight,
                                                    at.rule_many_to_one_id,
                                                    at.hier1,
                                                    at.hier2,
                                                    at.eow_date,
                                                    at.weight,
                                                    ar.sales_type
                                               FROM alloc_calc_need_temp1 at,
                                                    ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                      UNION ALL
                                                     (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                      UNION ALL
                                                     (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                               WHERE at.alloc_no = %s
                                                 AND at.rule_level = %s
                                                 AND at.sales_hist_need = -1
                                                 AND at.sister_store IS NOT NULL) tmp,
                                            hier2_sales_hist dsh
                                      WHERE dsh.eow_date   = tmp.eow_date
                                        AND dsh.store      = tmp.sister_store
                                        AND dsh.sales_type = tmp.sales_type
                                        AND dsh.hier1      = tmp.hier1
                                        AND dsh.hier2      = tmp.hier2
                                   GROUP BY tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.hier1,
                                            tmp.hier2,
                                            tmp.eow_date)
                               UPDATE alloc_calc_need_temp tgt,use_this
                                  SET tgt.sales_hist_need = use_this.sales,
                                      tgt.last_update_id  = USER(),
                                      tgt.last_update_datetime = current_timestamp()     
                                WHERE tgt.alloc_no = use_this.alloc_no
                                  AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                  AND tgt.to_loc = use_this.to_loc
                                  AND tgt.hier1 = use_this.hier1
                                  AND tgt.hier2 = use_this.hier2
                                  AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_ecom_class_sales_need: " WITH 
                                        use_this
                                        AS 
                                          (SELECT tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.eow_date,
                                                 SUM(COALESCE(dsh.sales,0)
                                                     * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                     * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) sales
                                            FROM (SELECT at.alloc_no,
                                                         at.to_loc,
                                                         at.sister_store,
                                                         at.sister_store_weight,
                                                         at.rule_many_to_one_id,
                                                         at.hier1,
                                                         at.hier2,
                                                         at.eow_date,
                                                         at.weight,
                                                         ar.sales_type
                                                    FROM alloc_calc_need_temp1 at,
                                                         ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                    WHERE at.alloc_no = %s
                                                      AND at.rule_level = %s
                                                      AND at.sister_store IS NOT NULL) tmp,
                                                 ecom_hier2_sales_hist dsh
                                           WHERE dsh.eow_date   = tmp.eow_date
                                             AND dsh.store      = tmp.sister_store
                                             AND dsh.sales_type = tmp.sales_type
                                             AND dsh.hier1      = tmp.hier1
                                             AND dsh.hier2      = tmp.hier2
                                        GROUP BY tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.eow_date)
                                    UPDATE alloc_calc_need_temp tgt,use_this
                                       SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                           tgt.last_update_id  = USER(),
                                           tgt.last_update_datetime = current_timestamp()     
                                     WHERE tgt.alloc_no = use_this.alloc_no
                                       AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND tgt.to_loc = use_this.to_loc
                                       AND tgt.hier1 = use_this.hier1
                                       AND tgt.hier2 = use_this.hier2
                                       AND tgt.eow_date = use_this.eow_date; "

setup_need_sales_hist_subclass:
  Q_upd_subclass_sales_need: " WITH 
                                   use_this
                                   AS 
                                     (SELECT tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.hier1,
                                            tmp.hier2,
                                            tmp.hier3,
                                            tmp.eow_date,
                                            SUM(COALESCE(dsh.sales_qty,0)
                                                * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) sales
                                       FROM (SELECT at.alloc_no,
                                                    at.to_loc,
                                                    at.rule_many_to_one_id,
                                                    at.hier1,
                                                    at.hier2,
                                                    at.hier3,
                                                    at.eow_date,
                                                    at.weight,
                                                    ar.sales_type
                                               FROM alloc_calc_need_temp1 at,
                                                    ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                      UNION ALL
                                                     (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                      UNION ALL
                                                     (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                               WHERE at.alloc_no = %s
                                                 AND at.rule_level = %s
                                                 AND at.sales_hist_need = -1
                                                 AND at.sister_store IS NULL) tmp,
                                            hier3_sales_hist dsh
                                      WHERE dsh.eow_date   = tmp.eow_date
                                        AND dsh.store      = tmp.to_loc
                                        AND dsh.sales_type = tmp.sales_type
                                        AND dsh.hier1      = tmp.hier1
                                        AND dsh.hier2      = tmp.hier2
                                        AND dsh.hier3      = tmp.hier3
                                   GROUP BY tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.hier1,
                                            tmp.hier2,
                                            tmp.hier3,
                                            tmp.eow_date)
                               UPDATE alloc_calc_need_temp tgt,use_this
                                  SET tgt.sales_hist_need = use_this.sales,
                                      tgt.last_update_id  = USER(),
                                      tgt.last_update_datetime = current_timestamp()     
                                WHERE tgt.alloc_no = use_this.alloc_no
                                  AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                  AND tgt.to_loc = use_this.to_loc
                                  AND tgt.hier1 = use_this.hier1
                                  AND tgt.hier2 = use_this.hier2
                                  AND tgt.hier3 = use_this.hier3
                                  AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_subclass_sales_need: " WITH 
                                        use_this
                                        AS 
                                          (SELECT tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.hier3,
                                                 tmp.eow_date,
                                                 SUM(COALESCE(dsh.sales,0)
                                                     * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) sales
                                            FROM (SELECT at.alloc_no,
                                                         at.to_loc,
                                                         at.rule_many_to_one_id,
                                                         at.hier1,
                                                         at.hier2,
                                                         at.hier3,
                                                         at.eow_date,
                                                         at.weight,
                                                         ar.sales_type
                                                    FROM alloc_calc_need_temp1 at,
                                                         ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                    WHERE at.alloc_no = %s
                                                      AND at.rule_level = %s
                                                      AND at.sister_store IS NULL) tmp,
                                                 ecom_hier3_sales_hist dsh
                                           WHERE dsh.eow_date   = tmp.eow_date
                                             AND dsh.store      = tmp.to_loc
                                             AND dsh.sales_type = tmp.sales_type
                                             AND dsh.hier1      = tmp.hier1
                                             AND dsh.hier2      = tmp.hier2
                                             AND dsh.hier3      = tmp.hier3
                                        GROUP BY tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.hier3,
                                                 tmp.eow_date)
                                    UPDATE alloc_calc_need_temp tgt,use_this
                                       SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                           tgt.last_update_id  = USER(),
                                           tgt.last_update_datetime = current_timestamp()     
                                     WHERE tgt.alloc_no = use_this.alloc_no
                                       AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND tgt.to_loc = use_this.to_loc
                                       AND tgt.hier1 = use_this.hier1
                                       AND tgt.hier2 = use_this.hier2
                                       AND tgt.hier3 = use_this.hier3
                                       AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_subclass_sales_need: " WITH 
                                        use_this
                                        AS 
                                          (SELECT tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.hier3,
                                                 tmp.eow_date,
                                                 SUM(COALESCE(dsh.sales_qty,0)
                                                     * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                        * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) sales
                                            FROM (SELECT at.alloc_no,
                                                         at.to_loc,
                                                         at.sister_store,
                                                         at.sister_store_weight,
                                                         at.rule_many_to_one_id,
                                                         at.hier1,
                                                         at.hier2,
                                                         at.hier3,
                                                         at.eow_date,
                                                         at.weight,
                                                         ar.sales_type
                                                    FROM alloc_calc_need_temp1 at,
                                                         ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                    WHERE at.alloc_no = %s
                                                      AND at.rule_level = %s
                                                      AND at.sales_hist_need = -1
                                                      AND at.sister_store IS NOT NULL) tmp,
                                                 hier3_sales_hist dsh
                                           WHERE dsh.eow_date   = tmp.eow_date
                                             AND dsh.store      = tmp.sister_store
                                             AND dsh.sales_type = tmp.sales_type
                                             AND dsh.hier1      = tmp.hier1
                                             AND dsh.hier2      = tmp.hier2
                                             AND dsh.hier3      = tmp.hier3
                                        GROUP BY tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.hier3,
                                                 tmp.eow_date)
                                    UPDATE alloc_calc_need_temp tgt,use_this
                                       SET tgt.sales_hist_need = tgt.sales_hist_need + use_this.sales,
                                           tgt.last_update_id  = USER(),
                                           tgt.last_update_datetime = current_timestamp()     
                                     WHERE tgt.alloc_no = use_this.alloc_no
                                       AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND tgt.to_loc = use_this.to_loc
                                       AND tgt.hier1 = use_this.hier1
                                       AND tgt.hier2 = use_this.hier2
                                       AND tgt.hier3 = use_this.hier3
                                       AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_ecom_subclass_sales_need: " WITH 
                                           use_this
                                           AS 
                                             (SELECT tmp.alloc_no,
                                                    tmp.rule_many_to_one_id,
                                                    tmp.to_loc,
                                                    tmp.hier1,
                                                    tmp.hier2,
                                                    tmp.hier3,
                                                    tmp.eow_date,
                                                    SUM(COALESCE(dsh.sales,0)
                                                        * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                           * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) sales
                                               FROM (SELECT at.alloc_no,
                                                            at.to_loc,
                                                            at.sister_store,
                                                            at.sister_store_weight,
                                                            at.rule_many_to_one_id,
                                                            at.hier1,
                                                            at.hier2,
                                                            at.hier3,
                                                            at.eow_date,
                                                            at.weight,
                                                            ar.sales_type
                                                       FROM alloc_calc_need_temp1 at,
                                                            ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                              UNION ALL
                                                             (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                              UNION ALL
                                                             (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                       WHERE at.alloc_no = %s
                                                         AND at.rule_level = %s
                                                         AND at.sister_store IS NOT NULL) tmp,
                                                    ecom_hier3_sales_hist dsh
                                              WHERE dsh.eow_date   = tmp.eow_date
                                                AND dsh.store      = tmp.sister_store
                                                AND dsh.sales_type = tmp.sales_type
                                                AND dsh.hier1      = tmp.hier1
                                                AND dsh.hier2      = tmp.hier2
                                                AND dsh.hier3      = tmp.hier3
                                           GROUP BY tmp.alloc_no,
                                                    tmp.rule_many_to_one_id,
                                                    tmp.to_loc,
                                                    tmp.hier1,
                                                    tmp.hier2,
                                                    tmp.hier3,
                                                    tmp.eow_date)
                                       UPDATE alloc_calc_need_temp tgt,use_this
                                          SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                              tgt.last_update_id  = USER(),
                                              tgt.last_update_datetime = current_timestamp()     
                                        WHERE tgt.alloc_no = use_this.alloc_no
                                          AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                          AND tgt.to_loc = use_this.to_loc
                                          AND tgt.hier1 = use_this.hier1
                                          AND tgt.hier2 = use_this.hier2
                                          AND tgt.hier3 = use_this.hier3
                                          AND tgt.eow_date = use_this.eow_date; "

setup_need_sales_hist_style:
  Q_upd_style_sales_need: " WITH 
                                use_this
                                AS 
                                 (SELECT DISTINCT tmp.alloc_no,
                                         tmp.to_loc,
                                         tmp.rule_many_to_one_id,
                                         tmp.source_item,
                                         tmp.tran_item,
                                         tmp.eow_date,
                                         SUM(COALESCE(dsh.sales_issues,0)
                                             * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) 
                                            OVER (PARTITION BY tmp.alloc_no,
                                            tmp.rule_many_to_one_id,
                                            tmp.to_loc,
                                            tmp.source_item,
                                            tmp.eow_date) sales
                                    FROM (SELECT at.alloc_no,
                                                 at.to_loc,
                                                 at.rule_many_to_one_id,
                                                 at.source_item,
                                                 at.tran_item,
                                                 at.eow_date,
                                                 at.weight,
                                                 ar.sales_type
                                            FROM alloc_calc_need_temp1 at,
                                                 ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                   UNION ALL
                                                  (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                   UNION ALL
                                                  (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                            WHERE at.alloc_no = %s
                                              AND at.rule_level = %s
                                              AND at.sales_hist_need = -1
                                              AND at.like_tran_item IS NULL
                                              AND at.sister_store IS NULL) tmp,
                                         item_loc_hist dsh
                                   WHERE dsh.eow_date   = tmp.eow_date
                                     AND dsh.location   = tmp.to_loc
                                     AND dsh.sales_type = tmp.sales_type
                                     AND dsh.item       = tmp.tran_item)
                             UPDATE alloc_calc_need_temp tgt,use_this
                                SET tgt.sales_hist_need = use_this.sales,
                                    tgt.last_update_id  = USER(),
                                    tgt.last_update_datetime = current_timestamp()     
                              WHERE tgt.alloc_no = use_this.alloc_no
                                AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                AND tgt.to_loc = use_this.to_loc
                                AND tgt.source_item = use_this.source_item
                                AND tgt.tran_item   = use_this.tran_item
                                AND tgt.eow_date = use_this.eow_date; "

  Q_upd_like_style_sales_need: " WITH 
                                     use_this
                                     AS 
                                       (SELECT DISTINCT tmp.alloc_no,
                                               tmp.to_loc,
                                               tmp.rule_many_to_one_id,
                                               tmp.source_item,
                                               tmp.tran_item,
                                               tmp.eow_date,
                                               SUM(COALESCE(dsh.sales_issues,0)
                                                   * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                   * (CASE WHEN tmp.like_weight = NULL THEN 1.0 ELSE tmp.like_weight END)) 
                                                  OVER (PARTITION BY tmp.alloc_no,
                                                  tmp.rule_many_to_one_id,
                                                  tmp.to_loc,
                                                  tmp.source_item,
                                                  tmp.eow_date) sales
                                          FROM (SELECT at.alloc_no,
                                                       at.to_loc,
                                                       at.rule_many_to_one_id,
                                                       at.source_item,
                                                       at.tran_item,
                                                       at.like_tran_item,
                                                       at.like_weight,
                                                       at.eow_date,
                                                       at.weight,
                                                       ar.sales_type
                                                  FROM alloc_calc_need_temp1 at,
                                                       ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                         UNION ALL
                                                        (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                         UNION ALL
                                                        (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                  WHERE at.alloc_no = %s
                                                    AND at.rule_level = %s
                                                    AND at.sales_hist_need = -1
                                                    AND at.like_tran_item IS NOT NULL
                                                    AND at.sister_store IS NULL) tmp,
                                               item_loc_hist dsh
                                         WHERE dsh.eow_date   = tmp.eow_date
                                           AND dsh.location   = tmp.to_loc
                                           AND dsh.sales_type = tmp.sales_type
                                           AND dsh.item       = tmp.like_tran_item)
                                 UPDATE alloc_calc_need_temp tgt,use_this
                                    SET tgt.sales_hist_need = use_this.sales,
                                        tgt.last_update_id  = USER(),
                                        tgt.last_update_datetime = current_timestamp()     
                                  WHERE tgt.alloc_no = use_this.alloc_no
                                    AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                    AND tgt.to_loc = use_this.to_loc
                                    AND tgt.source_item = use_this.source_item
                                    AND tgt.tran_item   = use_this.tran_item
                                    AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_style_sales_need: " WITH 
                                     use_this
                                     AS 
                                       (SELECT DISTINCT tmp.alloc_no,
                                               tmp.to_loc,
                                               tmp.rule_many_to_one_id,
                                               tmp.source_item,
                                               tmp.tran_item,
                                               tmp.eow_date,
                                               SUM(COALESCE(dsh.sales_issues,0)
                                                   * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) 
                                                  OVER (PARTITION BY tmp.alloc_no,
                                                  tmp.rule_many_to_one_id,
                                                  tmp.to_loc,
                                                  tmp.source_item,
                                                  tmp.eow_date) sales
                                          FROM (SELECT at.alloc_no,
                                                       at.to_loc,
                                                       at.rule_many_to_one_id,
                                                       at.source_item,
                                                       at.tran_item,
                                                       at.eow_date,
                                                       at.weight,
                                                       ar.sales_type
                                                  FROM alloc_calc_need_temp1 at,
                                                       ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                         UNION ALL
                                                        (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                         UNION ALL
                                                        (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                  WHERE at.alloc_no = %s
                                                    AND at.rule_level = %s
                                                    AND at.like_tran_item IS NULL
                                                    AND at.sister_store IS NULL) tmp,
                                               ecom_item_loc_hist dsh
                                         WHERE dsh.eow_date   = tmp.eow_date
                                           AND dsh.loc        = tmp.to_loc
                                           AND dsh.sales_type = tmp.sales_type
                                           AND dsh.item       = tmp.tran_item)
                                 UPDATE alloc_calc_need_temp tgt,use_this
                                    SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                        tgt.last_update_id  = USER(),
                                        tgt.last_update_datetime = current_timestamp()     
                                  WHERE tgt.alloc_no = use_this.alloc_no
                                    AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                    AND tgt.to_loc = use_this.to_loc
                                    AND tgt.source_item = use_this.source_item
                                    AND tgt.tran_item   = use_this.tran_item
                                    AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_like_style_sales_need: " WITH 
                                          use_this
                                          AS 
                                            (SELECT DISTINCT tmp.alloc_no,
                                                    tmp.to_loc,
                                                    tmp.rule_many_to_one_id,
                                                    tmp.source_item,
                                                    tmp.tran_item,
                                                    tmp.eow_date,
                                                    SUM(COALESCE(dsh.sales_issues,0)
                                                        * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                        * (CASE WHEN tmp.like_weight = NULL THEN 1.0 ELSE tmp.like_weight END)) 
                                                       OVER (PARTITION BY tmp.alloc_no,
                                                       tmp.rule_many_to_one_id,
                                                       tmp.to_loc,
                                                       tmp.source_item,
                                                       tmp.eow_date) sales
                                               FROM (SELECT at.alloc_no,
                                                            at.to_loc,
                                                            at.rule_many_to_one_id,
                                                            at.source_item,
                                                            at.tran_item,
                                                            at.like_tran_item,
                                                            at.like_weight,
                                                            at.eow_date,
                                                            at.weight,
                                                            ar.sales_type
                                                       FROM alloc_calc_need_temp1 at,
                                                            ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                              UNION ALL
                                                             (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                              UNION ALL
                                                             (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                       WHERE at.alloc_no = %s
                                                         AND at.rule_level = %s
                                                         AND at.like_tran_item IS NOT NULL
                                                         AND at.sister_store IS NULL) tmp,
                                                    ecom_item_loc_hist dsh
                                              WHERE dsh.eow_date   = tmp.eow_date
                                                AND dsh.loc        = tmp.to_loc
                                                AND dsh.sales_type = tmp.sales_type
                                                AND dsh.item       = tmp.like_tran_item)
                                      UPDATE alloc_calc_need_temp tgt,use_this
                                         SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                             tgt.last_update_id  = USER(),
                                             tgt.last_update_datetime = current_timestamp()     
                                       WHERE tgt.alloc_no = use_this.alloc_no
                                         AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                         AND tgt.to_loc = use_this.to_loc
                                         AND tgt.source_item = use_this.source_item
                                         AND tgt.tran_item   = use_this.tran_item
                                         AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_style_sales_need: " WITH 
                                   use_this
                                   AS 
                                     (SELECT DISTINCT tmp.alloc_no,
                                             tmp.to_loc,
                                             tmp.rule_many_to_one_id,
                                             tmp.source_item,
                                             tmp.tran_item,
                                             tmp.eow_date,
                                             SUM(COALESCE(dsh.sales_issues,0)
                                                 * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                 * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) 
                                                OVER (PARTITION BY tmp.alloc_no,
                                                tmp.rule_many_to_one_id,
                                                tmp.to_loc,
                                                tmp.source_item,
                                                tmp.eow_date) sales
                                        FROM (SELECT at.alloc_no,
                                                     at.to_loc,
                                                     at.rule_many_to_one_id,
                                                     at.sister_store,
                                                     at.sister_store_weight,
                                                     at.source_item,
                                                     at.tran_item,
                                                     at.eow_date,
                                                     at.weight,
                                                     ar.sales_type
                                                FROM alloc_calc_need_temp1 at,
                                                     ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                       UNION ALL
                                                      (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                       UNION ALL
                                                      (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                WHERE at.alloc_no = %s
                                                  AND at.rule_level = %s
                                                  AND at.sales_hist_need = -1
                                                  AND at.like_tran_item IS NULL
                                                  AND at.sister_store IS NOT NULL) tmp,
                                             item_loc_hist dsh
                                       WHERE dsh.eow_date   = tmp.eow_date
                                         AND dsh.location   = tmp.sister_store
                                         AND dsh.sales_type = tmp.sales_type
                                         AND dsh.item       = tmp.tran_item)
                               UPDATE alloc_calc_need_temp tgt,use_this
                                  SET tgt.sales_hist_need = use_this.sales,
                                      tgt.last_update_id  = USER(),
                                      tgt.last_update_datetime = current_timestamp()     
                                WHERE tgt.alloc_no = use_this.alloc_no
                                  AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                  AND tgt.to_loc = use_this.to_loc
                                  AND tgt.source_item = use_this.source_item
                                  AND tgt.tran_item   = use_this.tran_item
                                  AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_like_style_sales_need: " WITH 
                                        use_this
                                        AS 
                                          (SELECT DISTINCT tmp.alloc_no,
                                                  tmp.to_loc,
                                                  tmp.rule_many_to_one_id,
                                                  tmp.source_item,
                                                  tmp.tran_item,
                                                  tmp.eow_date,
                                                  SUM(COALESCE(dsh.sales_issues,0)
                                                      * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                      * (CASE WHEN tmp.like_weight = NULL THEN 1.0 ELSE tmp.like_weight END)
                                                      * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) 
                                                     OVER (PARTITION BY tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.source_item,
                                                     tmp.eow_date) sales
                                             FROM (SELECT at.alloc_no,
                                                          at.to_loc,
                                                          at.rule_many_to_one_id,
                                                          at.sister_store,
                                                          at.sister_store_weight,
                                                          at.source_item,
                                                          at.tran_item,
                                                          at.like_tran_item,
                                                          at.like_weight,
                                                          at.eow_date,
                                                          at.weight,
                                                          ar.sales_type
                                                     FROM alloc_calc_need_temp1 at,
                                                          ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                            UNION ALL
                                                           (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                            UNION ALL
                                                           (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                     WHERE at.alloc_no = %s
                                                       AND at.rule_level = %s
                                                       AND at.sales_hist_need = -1
                                                       AND at.like_tran_item IS NOT NULL
                                                       AND at.sister_store IS NOT NULL) tmp,
                                                  item_loc_hist dsh
                                            WHERE dsh.eow_date   = tmp.eow_date
                                              AND dsh.location   = tmp.sister_store
                                              AND dsh.sales_type = tmp.sales_type
                                              AND dsh.item       = tmp.like_tran_item)
                                    UPDATE alloc_calc_need_temp tgt,use_this
                                       SET tgt.sales_hist_need = use_this.sales,
                                           tgt.last_update_id  = USER(),
                                           tgt.last_update_datetime = current_timestamp()     
                                     WHERE tgt.alloc_no = use_this.alloc_no
                                       AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND tgt.to_loc = use_this.to_loc
                                       AND tgt.source_item = use_this.source_item
                                       AND tgt.tran_item   = use_this.tran_item
                                       AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_lp_style_sales_need: " WITH 
                                        use_this
                                        AS 
                                          (SELECT DISTINCT tmp.alloc_no,
                                                  tmp.to_loc,
                                                  tmp.rule_many_to_one_id,
                                                  tmp.source_item,
                                                  tmp.tran_item,
                                                  tmp.eow_date,
                                                  SUM(COALESCE(dsh.sales_issues,0)
                                                      * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                      * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) 
                                                     OVER (PARTITION BY tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.source_item,
                                                     tmp.eow_date) sales
                                             FROM (SELECT at.alloc_no,
                                                          at.to_loc,
                                                          at.rule_many_to_one_id,
                                                          at.sister_store,
                                                          at.sister_store_weight,
                                                          at.source_item,
                                                          at.tran_item,
                                                          at.eow_date,
                                                          at.weight,
                                                          ar.sales_type
                                                     FROM alloc_calc_need_temp1 at,
                                                          ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                            UNION ALL
                                                           (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                            UNION ALL
                                                           (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                     WHERE at.alloc_no = %s
                                                       AND at.rule_level = %s
                                                       AND at.like_tran_item IS NULL
                                                       AND at.sister_store IS NOT NULL) tmp,
                                                  ecom_item_loc_hist dsh
                                            WHERE dsh.eow_date   = tmp.eow_date
                                              AND dsh.loc        = tmp.sister_store
                                              AND dsh.sales_type = tmp.sales_type
                                              AND dsh.item       = tmp.tran_item)
                                    UPDATE alloc_calc_need_temp tgt,use_this
                                       SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                           tgt.last_update_id  = USER(),
                                           tgt.last_update_datetime = current_timestamp()     
                                     WHERE tgt.alloc_no = use_this.alloc_no
                                       AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND tgt.to_loc = use_this.to_loc
                                       AND tgt.source_item = use_this.source_item
                                       AND tgt.tran_item   = use_this.tran_item
                                       AND tgt.eow_date = use_this.eow_date; "

  Q_upd_ecom_lp_like_style_sales_need: " WITH 
                                             use_this
                                             AS 
                                               (SELECT DISTINCT tmp.alloc_no,
                                                       tmp.to_loc,
                                                       tmp.rule_many_to_one_id,
                                                       tmp.source_item,
                                                       tmp.tran_item,
                                                       tmp.eow_date,
                                                       SUM(COALESCE(dsh.sales_issues,0)
                                                           * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                           * (CASE WHEN tmp.like_weight = NULL THEN 1.0 ELSE tmp.like_weight END)
                                                           * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) 
                                                          OVER (PARTITION BY tmp.alloc_no,
                                                          tmp.rule_many_to_one_id,
                                                          tmp.to_loc,
                                                          tmp.source_item,
                                                          tmp.eow_date) sales
                                                  FROM (SELECT at.alloc_no,
                                                               at.to_loc,
                                                               at.rule_many_to_one_id,
                                                               at.sister_store,
                                                               at.sister_store_weight,
                                                               at.source_item,
                                                               at.tran_item,
                                                               at.like_tran_item,
                                                               at.like_weight,
                                                               at.eow_date,
                                                               at.weight,
                                                               ar.sales_type
                                                          FROM alloc_calc_need_temp1 at,
                                                               ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                                 UNION ALL
                                                                (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                                 UNION ALL
                                                                (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                          WHERE at.alloc_no = %s
                                                            AND at.rule_level = %s
                                                            AND at.like_tran_item IS NOT NULL
                                                            AND at.sister_store IS NOT NULL) tmp,
                                                       ecom_item_loc_hist dsh
                                                 WHERE dsh.eow_date   = tmp.eow_date
                                                   AND dsh.loc        = tmp.sister_store
                                                   AND dsh.sales_type = tmp.sales_type
                                                   AND dsh.item       = tmp.like_tran_item)
                                         UPDATE alloc_calc_need_temp tgt,use_this
                                            SET tgt.sales_hist_need = (CASE WHEN tgt.sales_hist_need = -1 THEN 0 ELSE tgt.sales_hist_need END) + use_this.sales,
                                                tgt.last_update_id  = USER(),
                                                tgt.last_update_datetime = current_timestamp()     
                                          WHERE tgt.alloc_no = use_this.alloc_no
                                            AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                            AND tgt.to_loc = use_this.to_loc
                                            AND tgt.source_item = use_this.source_item
                                            AND tgt.tran_item   = use_this.tran_item
                                            AND tgt.eow_date = use_this.eow_date; "

setup_need_sales_hist_stylediff:
  Q_upd_stylediff_sales_need: " WITH 
                                    use_this
                                    AS 
                                     (SELECT DISTINCT tmp.alloc_no,
                                             tmp.to_loc,
                                             tmp.rule_many_to_one_id,
                                             tmp.source_item,
                                             tmp.tran_item,
                                             tmp.eow_date,
                                             SUM(COALESCE(dsh.sales_issues,0)
                                                 * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)) 
                                                OVER (PARTITION BY tmp.alloc_no,
                                                                   tmp.rule_many_to_one_id,
                                                                   tmp.to_loc,
                                                                   tmp.source_item,
                                                                   tmp.source_diff1_id,
                                                                   tmp.source_diff2_id,
                                                                   tmp.source_diff3_id,
                                                                   tmp.source_diff4_id,
                                                                   tmp.eow_date) sales
                                        FROM (SELECT at.alloc_no,
                                                     at.to_loc,
                                                     at.rule_many_to_one_id,
                                                     at.source_item,
                                                     at.source_diff1_id,
                                                     at.source_diff2_id,
                                                     at.source_diff3_id,
                                                     at.source_diff4_id,
                                                     at.tran_item,
                                                     at.like_tran_item,
                                                     at.eow_date,
                                                     at.weight,
                                                     ar.sales_type
                                                FROM alloc_calc_need_temp1 at,
                                                     ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                       UNION ALL
                                                      (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                       UNION ALL
                                                      (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                WHERE at.alloc_no = %s
                                                  AND at.rule_level = %s
                                                  AND at.sales_hist_need = -1
                                                  AND at.sister_store IS NULL) tmp,
                                             item_loc_hist dsh
                                       WHERE dsh.eow_date   = tmp.eow_date
                                         AND dsh.location   = tmp.to_loc
                                         AND dsh.sales_type = tmp.sales_type
                                         AND dsh.item       = tmp.tran_item
                                         AND tmp.like_tran_item IS NULL)
                                UPDATE alloc_calc_need_temp tgt,use_this
                                   SET tgt.sales_hist_need = use_this.sales,
                                       tgt.last_update_id  = USER(),
                                       tgt.last_update_datetime = current_timestamp()     
                                 WHERE tgt.alloc_no = use_this.alloc_no
                                   AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND tgt.to_loc = use_this.to_loc
                                   AND tgt.source_item = use_this.source_item
                                   AND tgt.tran_item   = use_this.tran_item
                                   AND tgt.eow_date = use_this.eow_date; "

  Q_upd_like_stylediff_sales_need: " WITH 
                                         use_this
                                         AS 
                                           (SELECT DISTINCT tmp.alloc_no,
                                                   tmp.to_loc,
                                                   tmp.rule_many_to_one_id,
                                                   tmp.source_item,
                                                   tmp.tran_item,
                                                   tmp.eow_date,
                                                   SUM(COALESCE(dsh.sales_issues,0)
                                                       * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                       * (CASE WHEN tmp.like_weight = NULL THEN 1.0 ELSE tmp.like_weight END)) 
                                                      OVER (PARTITION BY tmp.alloc_no,
                                                                         tmp.rule_many_to_one_id,
                                                                         tmp.to_loc,
                                                                         tmp.source_item,
                                                                         tmp.source_diff1_id,
                                                                         tmp.source_diff2_id,
                                                                         tmp.source_diff3_id,
                                                                         tmp.source_diff4_id,
                                                                         tmp.eow_date) sales
                                              FROM (SELECT at.alloc_no,
                                                           at.to_loc,
                                                           at.rule_many_to_one_id,
                                                           at.source_item,
                                                           at.source_diff1_id,
                                                           at.source_diff2_id,
                                                           at.source_diff3_id,
                                                           at.source_diff4_id,
                                                           at.tran_item,
                                                           at.like_tran_item,
                                                           at.like_weight,
                                                           at.eow_date,
                                                           at.weight,
                                                           ar.sales_type
                                                      FROM alloc_calc_need_temp1 at,
                                                           ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                             UNION ALL
                                                            (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                             UNION ALL
                                                            (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                      WHERE at.alloc_no = %s
                                                        AND at.rule_level = %s
                                                        AND at.sales_hist_need = -1
                                                        AND at.sister_store IS NULL) tmp,
                                                   item_loc_hist dsh
                                             WHERE dsh.eow_date   = tmp.eow_date
                                               AND dsh.location   = tmp.to_loc
                                               AND dsh.sales_type = tmp.sales_type
                                               AND dsh.item       = tmp.tran_item
                                               AND tmp.like_tran_item IS NOT NULL)
                                     UPDATE alloc_calc_need_temp tgt,use_this
                                        SET tgt.sales_hist_need = use_this.sales,
                                            tgt.last_update_id  = USER(),
                                            tgt.last_update_datetime = current_timestamp()     
                                      WHERE tgt.alloc_no = use_this.alloc_no
                                        AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                        AND tgt.to_loc = use_this.to_loc
                                        AND tgt.source_item = use_this.source_item
                                        AND tgt.tran_item   = use_this.tran_item
                                        AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_stylediff_sales_need: " WITH 
                                       use_this
                                       AS 
                                         (SELECT DISTINCT tmp.alloc_no,
                                                 tmp.to_loc,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.source_item,
                                                 tmp.tran_item,
                                                 tmp.eow_date,
                                                 SUM(COALESCE(dsh.sales_issues,0)
                                                     * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                     * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) 
                                                    OVER (PARTITION BY tmp.alloc_no,
                                                                       tmp.rule_many_to_one_id,
                                                                       tmp.to_loc,
                                                                       tmp.source_item,
                                                                       tmp.source_diff1_id,
                                                                       tmp.source_diff2_id,
                                                                       tmp.source_diff3_id,
                                                                       tmp.source_diff4_id,
                                                                       tmp.eow_date) sales
                                            FROM (SELECT at.alloc_no,
                                                         at.to_loc,
                                                         at.rule_many_to_one_id,
                                                         at.sister_store,
                                                         at.sister_store_weight,
                                                         at.source_item,
                                                         at.source_diff1_id,
                                                         at.source_diff2_id,
                                                         at.source_diff3_id,
                                                         at.source_diff4_id,
                                                         at.tran_item,
                                                         at.eow_date,
                                                         at.weight,
                                                         ar.sales_type
                                                    FROM alloc_calc_need_temp1 at,
                                                         ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                           UNION ALL
                                                          (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                    WHERE at.alloc_no = %s
                                                      AND at.rule_level = %s
                                                      AND at.sales_hist_need = -1
                                                      AND at.like_tran_item IS NULL
                                                      AND at.sister_store IS NOT NULL) tmp,
                                                 item_loc_hist dsh
                                           WHERE dsh.eow_date   = tmp.eow_date
                                             AND dsh.location   = tmp.sister_store
                                             AND dsh.sales_type = tmp.sales_type
                                             AND dsh.item       = tmp.tran_item)
                                   UPDATE alloc_calc_need_temp tgt,use_this
                                      SET tgt.sales_hist_need = use_this.sales,
                                          tgt.last_update_id  = USER(),
                                          tgt.last_update_datetime = current_timestamp()     
                                    WHERE tgt.alloc_no = use_this.alloc_no
                                      AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                      AND tgt.to_loc = use_this.to_loc
                                      AND tgt.source_item = use_this.source_item
                                      AND tgt.tran_item   = use_this.tran_item
                                      AND tgt.eow_date = use_this.eow_date; "

  Q_upd_lp_like_stylediff_sales_need: " WITH 
                                            use_this
                                            AS 
                                              (SELECT DISTINCT tmp.alloc_no,
                                                      tmp.to_loc,
                                                      tmp.rule_many_to_one_id,
                                                      tmp.source_item,
                                                      tmp.tran_item,
                                                      tmp.eow_date,
                                                      SUM(COALESCE(dsh.sales_issues,0)
                                                          * (CASE WHEN tmp.weight = NULL THEN 1.0 ELSE tmp.weight END)
                                                          * (CASE WHEN tmp.like_weight = NULL THEN 1.0 ELSE tmp.like_weight END)
                                                          * (CASE WHEN tmp.sister_store_weight = NULL THEN 1.0 ELSE tmp.sister_store_weight END)) 
                                                         OVER (PARTITION BY tmp.alloc_no,
                                                                            tmp.rule_many_to_one_id,
                                                                            tmp.to_loc,
                                                                            tmp.source_item,
                                                                            tmp.source_diff1_id,
                                                                            tmp.source_diff2_id,
                                                                            tmp.source_diff3_id,
                                                                            tmp.source_diff4_id,
                                                                            tmp.eow_date) sales
                                                 FROM (SELECT at.alloc_no,
                                                              at.to_loc,
                                                              at.rule_many_to_one_id,
                                                              at.sister_store,
                                                              at.sister_store_weight,
                                                              at.source_item,
                                                              at.source_diff1_id,
                                                              at.source_diff2_id,
                                                              at.source_diff3_id,
                                                              at.source_diff4_id,
                                                              at.tran_item,
                                                              at.like_tran_item,
                                                              at.like_weight,
                                                              at.eow_date,
                                                              at.weight,
                                                              ar.sales_type
                                                         FROM alloc_calc_need_temp1 at,
                                                              ((SELECT CASE WHEN %s = 'Y' THEN 'R' ELSE NULL END sales_type)    
                                                                UNION ALL
                                                               (SELECT CASE WHEN %s = 'Y' THEN 'P' ELSE NULL END sales_type) 
                                                                UNION ALL
                                                               (SELECT CASE WHEN %s = 'Y' THEN 'C' ELSE NULL END sales_type)) ar
                                                         WHERE at.alloc_no = %s
                                                           AND at.rule_level = %s
                                                           AND at.sales_hist_need = -1
                                                           AND at.like_tran_item IS NOT NULL
                                                           AND at.sister_store IS NOT NULL) tmp,
                                                      item_loc_hist dsh
                                                WHERE dsh.eow_date   = tmp.eow_date
                                                  AND dsh.location   = tmp.sister_store
                                                  AND dsh.sales_type = tmp.sales_type
                                                  AND dsh.item       = tmp.like_tran_item)
                                        UPDATE alloc_calc_need_temp tgt,use_this
                                           SET tgt.sales_hist_need = use_this.sales,
                                               tgt.last_update_id  = USER(),
                                               tgt.last_update_datetime = current_timestamp()     
                                         WHERE tgt.alloc_no = use_this.alloc_no
                                           AND tgt.rule_many_to_one_id = use_this.rule_many_to_one_id
                                           AND tgt.to_loc = use_this.to_loc
                                           AND tgt.source_item = use_this.source_item
                                           AND tgt.tran_item   = use_this.tran_item
                                           AND tgt.eow_date = use_this.eow_date; "

setup_sku_sales_hist_need:
  Q_fetchall_rule: "SELECT rule_level,
                           rule_type,
                           regular_sales_ind,
                           promo_sales_ind,
                           clearance_sales_ind
                      FROM alloc_rule
                     WHERE alloc_no =%s;"
  
  Q_item_loc_hist_loop: "SELECT wt.alloc_no,
                                wt.rule_many_to_one_id,
                                wt.eow_date,
                                wt.weight
                           FROM alloc_calc_need_dates wt
                          WHERE wt.alloc_no = %s
                          ORDER BY wt.eow_date;"       #skipped high_value_in_date_format and partition for item_loc_hist
  
  Q_ecom_item_loc_hist_loop: "SELECT alloc_no,
                                     rule_many_to_one_id,
                                     eow_date,
                                     weight
                                FROM alloc_calc_need_dates 
                               WHERE alloc_no = %s
                               ORDER BY eow_date;"
  
  Q_update_sales: "WITH use_this AS (SELECT DISTINCT tmp.alloc_no,
                                         tmp.to_loc,
                                         tmp.rule_many_to_one_id,
                                         tmp.source_item,
                                         tmp.tran_item,
                                         tmp.eow_date,
                                         SUM(
                                               COALESCE(dsh.sales_issues, 0)
                                             * IF(%s=NULL, 1.0,%s)    /* rec_date.weight*/
                                             * IF(COALESCE(tmp.like_weight,-1)=-1, 1.0,tmp.like_weight)
                                             * IF(COALESCE(tmp.sister_store_weight,-1)=-1, 1.0,tmp.sister_store_weight)
                                             )
                                             OVER(
                                                 PARTITION BY tmp.alloc_no,
                                                               tmp.rule_many_to_one_id,
                                                               tmp.to_loc,
                                                               tmp.source_item,
                                                               tmp.tran_item,
                                                               tmp.eow_date) sales
                            FROM (SELECT at.alloc_no,
                                         at.to_loc,
                                         at.sister_store,
                                         COALESCE(at.sister_store, at.to_loc) map_to_loc,
                                         at.sister_store_weight,
                                         -1 rule_many_to_one_id,
                                         at.source_item,
                                         at.tran_item,
                                         COALESCE(at.like_tran_item,at.tran_item) map_tran_item,
                                         at.like_weight,
                                         NULL eow_date,
                                         NULL weight,
                                         ar.sales_type
                                    FROM alloc_calc_destination_temp  at, alloc_rule ar1,
                                         (SELECT IF(%s='Y', 'R',NULL) sales_type    /*regular_sales_ind*/
                                          UNION
                                          SELECT IF(%s='Y', 'P',NULL) sales_type    /*promo_sales_ind*/
                                          UNION
                                          SELECT IF(%s='Y', 'C',NULL) sales_type    /*clearance_sales_ind*/
                                          ) ar
                                   WHERE at.alloc_no = %s
                                     AND ar1.rule_level ='S'    /*SKU*/
                                     and at.alloc_no = ar1.alloc_no
                                   ) tmp,
                                   item_loc_hist dsh
                             WHERE dsh.item = tmp.map_tran_item
                               AND dsh.sales_type = tmp.sales_type
                               AND dsh.location = tmp.map_to_loc
                               AND dsh.eow_date = %s) /*rec_date.eow_date*/

                      UPDATE alloc_calc_need_temp target, use_this 
						 SET target.sales_hist_need = use_this.sales + target.sales_hist_need,
							 target.last_update_id = USER(),
                             target.last_update_datetime = CURDATE()
                     WHERE target.alloc_no = use_this.alloc_no
                       AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                       AND target.to_loc      = use_this.to_loc
                       AND target.source_item = use_this.source_item
                       AND target.tran_item   = use_this.tran_item;"

  Q_update_ecom_sales: "WITH use_this 
                          AS (SELECT DISTINCT tmp.alloc_no,
                                     tmp.to_loc,
                                     tmp.rule_many_to_one_id,
                                     tmp.source_item,
                                     tmp.tran_item,
                                     tmp.eow_date,
                                     SUM(
                                          COALESCE(dsh.sales_issues, 0)
                                             * IF(%s=NULL, 1.0,%s)    /*rec_date.weight*/
                                             * IF(COALESCE(tmp.like_weight,-1)=-1, 1.0,
                                                  tmp.like_weight)
                                             * IF(COALESCE(tmp.sister_store_weight,-1)=-1, 1.0,
                                                  tmp.sister_store_weight)
                                          )
                                         OVER(
                                             PARTITION BY tmp.alloc_no,
                                                          tmp.rule_many_to_one_id,
                                                          tmp.to_loc,
                                                          tmp.source_item,
                                                          tmp.tran_item,
                                                          tmp.eow_date) sales
                                FROM(SELECT at.alloc_no,
                                            at.to_loc,
                                            at.sister_store,
                                            COALESCE(at.sister_store, at.to_loc) map_to_loc,
                                            at.sister_store_weight,
                                            -1 rule_many_to_one_id,
                                            at.source_item,
                                            at.tran_item,
                                            COALESCE(at.like_tran_item,at.tran_item) map_tran_item,
                                            at.like_weight,
                                            NULL eow_date,
                                            NULL weight,
                                            ar.sales_type
                                       FROM alloc_calc_destination_temp  at,
                                            (SELECT IF(%s='Y', 'R',NULL) AS sales_type    /*REGULAR_SALES_IND*/
                                             UNION
                                             SELECT IF(%s='Y', 'P',NULL) AS sales_type    /*PROMO_SALES_IND*/
                                             UNION
                                             SELECT IF(%s='Y', 'C',NULL) AS sales_type    /*CLEARANCE_SALES_IND*/
                                            )ar
                                      WHERE at.alloc_no = %s
                                        AND %s ='S'  /*sku*/
                                    )tmp,
                                     ecom_item_loc_hist dsh
                               WHERE dsh.item = tmp.map_tran_item
                                 AND dsh.sales_type = tmp.sales_type
                                 AND dsh.loc = tmp.map_to_loc
                                 AND dsh.eow_date = %s)        /*rec_date.eow_date*/

                        UPDATE alloc_calc_need_temp target,use_this
                          SET target.sales_hist_need      = IF(target.sales_hist_need=-1,0,target.sales_hist_need) + use_this.sales,
                              target.last_update_id       = USER(),
                              target.last_update_datetime = CURDATE()
                        WHERE target.alloc_no            = use_this.alloc_no
                          AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                          AND target.to_loc              = use_this.to_loc
                          AND target.source_item         = use_this.source_item
                          AND target.tran_item           = use_this.tran_item;"

#Changes by shubham start#
setup_hier1_sales_fcst_need:
  Q_create_calc_need_temp_1: "CREATE TEMPORARY TABLE IF NOT EXISTS alloc_calc_need_temp_1 select * from alloc_calc_need_temp where alloc_no = %s"
  
  Q_drop_calc_need_temp_1: "DROP TEMPORARY TABLE alloc_calc_need_temp_1"
  
  Q_merge_calc_need_temp: "WITH use_this 
                                       AS(SELECT tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.eow_date,
                                                 SUM(COALESCE (dsh.fcst_sales, 0)
                                                     * IF (tmp.weight IS NULL, 1.0, tmp.weight)
                                                     ) sales
                                            FROM hier1_sales_forecast dsh, alloc_calc_need_temp_1 tmp
                                           WHERE     tmp.alloc_no = %s
                                                 AND tmp.rule_level = 'H1'
                                                 AND dsh.eow_date = tmp.eow_date
                                                 AND dsh.loc = tmp.to_loc
                                                 AND dsh.hier1 = tmp.hier1
                                                 AND tmp.forecast_need = -1
                                                 AND tmp.sister_store IS NULL
                                        GROUP BY tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.eow_date) 
                                UPDATE alloc_calc_need_temp target, use_this 
                                   SET target.forecast_need = use_this.sales,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.to_loc = use_this.to_loc
                                   AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND target.hier1 = use_this.hier1
                                   AND target.eow_date = use_this.eow_date;"

  Q_merge_ss_calc_need_temp: "WITH use_this 
                                           AS(SELECT tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.hier1,
                                                     tmp.eow_date,
                                                     SUM(COALESCE (dsh.fcst_sales, 0)
                                                         * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                         * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight)
                                                         ) sales
                                                FROM hier1_sales_forecast  dsh,
                                                     alloc_calc_need_temp_1 tmp
                                               WHERE     tmp.alloc_no = %s
                                                     AND %s = 'Y'
                                                     AND tmp.rule_level = 'H1'
                                                     AND dsh.eow_date = tmp.eow_date
                                                     AND dsh.loc = tmp.sister_store
                                                     AND dsh.hier1 = tmp.hier1
                                                     AND tmp.forecast_need = -1
                                                     AND tmp.sister_store IS NOT NULL
                                            GROUP BY tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.hier1,
                                                     tmp.eow_date) 
                                    UPDATE alloc_calc_need_temp target, use_this
                                       SET target.forecast_need = use_this.sales,
                                           target.last_update_id = USER(),
                                           target.last_update_datetime = CURDATE()
                                     WHERE target.alloc_no = use_this.alloc_no
                                       AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND target.to_loc = use_this.to_loc
                                       AND target.hier1 = use_this.hier1
                                       AND target.eow_date = use_this.eow_date;"

setup_hier2_sales_fcst_need:  
  Q_merge_calc_need_temp: "WITH use_this 
                                       AS(SELECT tmp.alloc_no,
                                             tmp.rule_many_to_one_id,
                                             tmp.to_loc,
                                             tmp.hier1,
                                             tmp.hier2,
                                             tmp.eow_date,
                                             SUM(
                                                   COALESCE (dsh.fcst_sales, 0)
                                                 * IF (tmp.weight IS NULL, 1.0, tmp.weight))    sales
                                        FROM hier2_sales_forecast dsh,
                                             alloc_calc_need_temp_1 tmp
                                       WHERE     tmp.alloc_no = %s
                                             AND tmp.rule_level = 'H2'
                                             AND dsh.eow_date = tmp.eow_date
                                             AND dsh.loc = tmp.to_loc
                                             AND dsh.hier1 = tmp.hier1
                                             AND dsh.hier2 = tmp.hier2
                                             AND tmp.forecast_need = -1
                                             AND tmp.sister_store IS NULL
                                    GROUP BY tmp.alloc_no,
                                             tmp.rule_many_to_one_id,
                                             tmp.to_loc,
                                             tmp.hier1,
                                             tmp.hier2,
                                             tmp.eow_date)
                            UPDATE 
                               SET target.forecast_need = use_this.sales,
                                   target.last_update_id = USER(),
                                   target.last_update_datetime = CURDATE()
                            WHERE  target.alloc_no = use_this.alloc_no
                               AND target.to_loc = use_this.to_loc
                               AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                               AND target.hier1 = use_this.hier1
                               AND target.hier2 = use_this.hier2
                               AND target.eow_date = use_this.eow_date;"

  Q_merge_ss_calc_need_temp: "WITH use_this 
                                           AS(SELECT tmp.alloc_no,
                                                     tmp.to_loc,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.hier1,
                                                     tmp.hier2,
                                                     tmp.eow_date,
                                                     SUM(
                                                           COALESCE (dsh.fcst_sales, 0)
                                                         * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                         * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight)
                                                         )    sales
                                                FROM hier2_sales_forecast dsh,
                                                     alloc_calc_need_temp_1 tmp
                                               WHERE     tmp.alloc_no = %s
                                                     AND %s = 'Y'
                                                     AND tmp.rule_level = 'H2'
                                                     AND dsh.eow_date = tmp.eow_date
                                                     AND dsh.loc = tmp.sister_store
                                                     AND dsh.hier1 = tmp.hier1
                                                     AND dsh.hier2 = tmp.hier2
                                                     AND tmp.forecast_need = -1
                                                     AND tmp.sister_store IS NOT NULL
                                            GROUP BY tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.hier1,
                                                     tmp.hier2,
                                                     tmp.eow_date) 
                                    UPDATE alloc_calc_need_temp target, use_this
                                       SET target.forecast_need = use_this.sales,
                                           target.last_update_id = USER(),
                                           target.last_update_datetime = CURDATE()
                                     WHERE target.alloc_no = use_this.alloc_no
                                       AND target.to_loc = use_this.to_loc
                                       AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND target.hier1 = use_this.hier1
                                       AND target.hier2 = use_this.hier2
                                       AND target.eow_date = use_this.eow_date;"

setup_hier3_sales_fcst_need:  
  Q_merge_calc_need_temp: "WITH use_this 
                                       AS(SELECT tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.hier3,
                                                 tmp.eow_date,
                                                 SUM(
                                                       COALESCE (dsh.fcst_sales, 0)
                                                     * IF (tmp.weight IS NULL, 1.0, tmp.weight)
                                                     )    sales
                                            FROM hier3_sales_forecast dsh,
                                                 alloc_calc_need_temp_1  tmp
                                           WHERE     tmp.alloc_no = %s
                                                 AND tmp.rule_level = 'H3'
                                                 AND dsh.eow_date = tmp.eow_date
                                                 AND dsh.loc = tmp.to_loc
                                                 AND dsh.hier1 = tmp.hier1
                                                 AND dsh.hier2 = tmp.hier2
                                                 AND dsh.hier3 = tmp.hier3
                                                 AND tmp.forecast_need = -1
                                                 AND tmp.sister_store IS NULL
                                        GROUP BY tmp.alloc_no,
                                                 tmp.rule_many_to_one_id,
                                                 tmp.to_loc,
                                                 tmp.hier1,
                                                 tmp.hier2,
                                                 tmp.hier3,
                                                 tmp.eow_date)
                                UPDATE alloc_calc_need_temp target, use_this
                                   SET target.forecast_need = use_this.sales,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND target.to_loc = use_this.to_loc
                                   AND target.hier1 = use_this.hier1
                                   AND target.hier2 = use_this.hier2
                                   AND target.hier3 = use_this.hier3
                                   AND target.eow_date = use_this.eow_date;"

  Q_merge_ss_calc_need_temp: "WITH use_this 
                                           AS(SELECT tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.hier1,
                                                     tmp.hier2,
                                                     tmp.hier3,
                                                     tmp.eow_date,
                                                     SUM(
                                                           COALESCE (dsh.fcst_sales, 0)
                                                         * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                         * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight)
                                                         ) sales
                                                FROM hier3_sales_forecast dsh,
                                                     alloc_calc_need_temp_1  tmp
                                               WHERE     tmp.alloc_no = %s
                                                     AND %s = 'Y'
                                                     AND tmp.rule_level = 'H3'
                                                     AND dsh.eow_date = tmp.eow_date
                                                     AND dsh.loc = tmp.sister_store
                                                     AND dsh.hier1 = tmp.hier1
                                                     AND dsh.hier2 = tmp.hier2
                                                     AND dsh.hier3 = tmp.hier3
                                                     AND tmp.forecast_need = -1
                                                     AND tmp.sister_store IS NOT NULL
                                            GROUP BY tmp.alloc_no,
                                                     tmp.rule_many_to_one_id,
                                                     tmp.to_loc,
                                                     tmp.hier1,
                                                     tmp.hier2,
                                                     tmp.hier3,
                                                     tmp.eow_date)
                                    UPDATE alloc_calc_need_temp target, use_this
                                      SET target.forecast_need = use_this.sales,
                                          target.last_update_id = USER(),
                                          target.last_update_datetime = CURDATE()
                                    WHERE target.alloc_no = use_this.alloc_no
                                      AND target.to_loc = use_this.to_loc
                                      AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                      AND target.hier1 = use_this.hier1
                                      AND target.hier2 = use_this.hier2
                                      AND target.hier3 = use_this.hier3
                                      AND target.eow_date = use_this.eow_date;"

setup_sku_sales_fcst_need:  
  Q_merge_like1_calc_need_temp: "WITH use_this 
                                           AS(SELECT DISTINCT
                                               tmp.alloc_no,
                                               tmp.rule_many_to_one_id,
                                               tmp.to_loc,
                                               tmp.source_item,
                                               tmp.tran_item,
                                               tmp.eow_date,
                                               SUM(
                                                     COALESCE (dsh.fcst_sales, 0)
                                                   * IF (tmp.weight IS NULL, 1.0, tmp.weight))
                                                   OVER (PARTITION BY tmp.alloc_no,
                                                                      tmp.rule_many_to_one_id,
                                                                      tmp.to_loc,
                                                                      tmp.source_item,
                                                                      tmp.tran_item,
                                                                      tmp.eow_date)    sales
                                          FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                         WHERE     tmp.alloc_no = %s
                                               AND tmp.rule_level = 'S'
                                               AND dsh.eow_date = tmp.eow_date
                                               AND dsh.loc = tmp.to_loc
                                               AND dsh.item = tmp.tran_item
                                               AND tmp.forecast_need = -1
                                               AND tmp.like_tran_item IS NULL
                                               AND tmp.sister_store IS NULL)
                                UPDATE alloc_calc_need_temp target, use_this
                                   SET target.forecast_need = use_this.sales,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND target.to_loc = use_this.to_loc
                                   AND target.source_item = use_this.source_item
                                   AND target.tran_item = use_this.tran_item
                                   AND target.eow_date = use_this.eow_date;"
  
  Q_merge_like2_calc_need_temp: "WITH use_this 
                                           AS(SELECT DISTINCT
                                               tmp.alloc_no,
                                               tmp.rule_many_to_one_id,
                                               tmp.to_loc,
                                               tmp.source_item,
                                               tmp.tran_item,
                                               tmp.eow_date,
                                               SUM(
                                                     COALESCE (dsh.fcst_sales, 0)
                                                   * IF (tmp.weight IS NULL, 1.0, tmp.weight)
                                                   * IF (tmp.like_weight IS NULL, 1.0,tmp.like_weight))
                                                   OVER (PARTITION BY tmp.alloc_no,
                                                                      tmp.rule_many_to_one_id,
                                                                      tmp.to_loc,
                                                                      tmp.source_item,
                                                                      tmp.tran_item,
                                                                      tmp.eow_date)    sales
                                          FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                         WHERE     tmp.alloc_no = %s
                                               AND tmp.rule_level = 'S'
                                               AND dsh.eow_date = tmp.eow_date
                                               AND dsh.loc = tmp.to_loc
                                               AND dsh.item = tmp.like_tran_item
                                               AND tmp.forecast_need = -1
                                               AND tmp.like_tran_item IS NOT NULL
                                               AND tmp.sister_store IS NULL)
                                UPDATE alloc_calc_need_temp target, use_this
                                   SET target.forecast_need = use_this.sales,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                WHERE target.alloc_no = use_this.alloc_no
                                  AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                  AND target.to_loc = use_this.to_loc
                                  AND target.source_item = use_this.source_item
                                  AND target.tran_item = use_this.tran_item
                                  AND target.eow_date = use_this.eow_date;"

  Q_merge_ss1_calc_need_temp: "WITH use_this 
                                           AS(SELECT DISTINCT
                                                   tmp.alloc_no,
                                                   tmp.rule_many_to_one_id,
                                                   tmp.to_loc,
                                                   tmp.source_item,
                                                   tmp.tran_item,
                                                   tmp.eow_date,
                                                   SUM(
                                                         COALESCE (dsh.fcst_sales, 0)
                                                       * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                       * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight))
                                                       OVER (
                                                           PARTITION BY tmp.alloc_no,
                                                                        tmp.rule_many_to_one_id,
                                                                        tmp.to_loc,
                                                                        tmp.source_item,
                                                                        tmp.tran_item,
                                                                        tmp.eow_date) sales
                                              FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                             WHERE     tmp.alloc_no = %s
                                                   AND %s = 'Y'
                                                   AND tmp.rule_level = 'S'
                                                   AND dsh.eow_date = tmp.eow_date
                                                   AND dsh.loc = tmp.sister_store
                                                   AND dsh.item = tmp.tran_item
                                                   AND tmp.forecast_need = -1
                                                   AND tmp.like_tran_item IS NULL
                                                   AND tmp.sister_store IS NOT NULL)
                                    UPDATE alloc_calc_need_temp target, use_this
                                       SET target.forecast_need = use_this.sales,
                                           target.last_update_id = USER(),
                                           target.last_update_datetime = CURDATE()
                                     WHERE target.alloc_no = use_this.alloc_no
                                       AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND target.to_loc = use_this.to_loc
                                       AND target.source_item = use_this.source_item
                                       AND target.tran_item = use_this.tran_item
                                       AND target.eow_date = use_this.eow_date;"
  
  Q_merge_ss2_calc_need_temp: "WITH use_this 
                                           AS(SELECT DISTINCT
                                                   tmp.alloc_no,
                                                   tmp.rule_many_to_one_id,
                                                   tmp.to_loc,
                                                   tmp.source_item,
                                                   tmp.tran_item,
                                                   tmp.eow_date,
                                                   SUM(
                                                         COALESCE (dsh.fcst_sales, 0)
                                                       * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                       * IF (tmp.like_weight IS NULL, 1.0,tmp.like_weight)
                                                       * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight))
                                                       OVER (
                                                           PARTITION BY tmp.alloc_no,
                                                                        tmp.rule_many_to_one_id,
                                                                        tmp.to_loc,
                                                                        tmp.source_item,
                                                                        tmp.tran_item,
                                                                        tmp.eow_date)    sales
                                              FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                             WHERE     tmp.alloc_no = %s
                                                   AND %s = 'Y'
                                                   AND tmp.rule_level = 'S'
                                                   AND dsh.eow_date = tmp.eow_date
                                                   AND dsh.loc = tmp.sister_store
                                                   AND dsh.item = tmp.like_tran_item
                                                   AND tmp.forecast_need = -1
                                                   AND tmp.like_tran_item IS NOT NULL
                                                   AND tmp.sister_store IS NOT NULL)
                                    UPDATE alloc_calc_need_temp target, use_this
                                       SET target.forecast_need = use_this.sales,
                                           target.last_update_id = USER(),
                                           target.last_update_datetime = CURDATE()
                                     WHERE target.alloc_no = use_this.alloc_no
                                       AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND target.to_loc = use_this.to_loc
                                       AND target.source_item = use_this.source_item
                                       AND target.tran_item = use_this.tran_item
                                       AND target.eow_date = use_this.eow_date;"

setup_style_sales_fcst_need:  
  Q_merge_like1_calc_need_temp: "WITH use_this 
                                              AS(SELECT DISTINCT tmp.alloc_no,
                                                        tmp.to_loc,
                                                        tmp.rule_many_to_one_id,
                                                        tmp.source_item,
                                                        tmp.tran_item,
                                                        tmp.eow_date,
                                                        SUM(
                                                              COALESCE (dsh.fcst_sales, 0)
                                                            * IF (tmp.weight IS NULL, 1.0, tmp.weight))
                                                            OVER (
                                                                PARTITION BY tmp.alloc_no,
                                                                             tmp.rule_many_to_one_id,
                                                                             tmp.to_loc,
                                                                             tmp.source_item,
                                                                             tmp.source_diff1_id,   
                                                                             tmp.eow_date) sales
                                          FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                         WHERE     tmp.alloc_no = %s
                                               AND tmp.rule_level = 'ST'
                                               AND dsh.eow_date = tmp.eow_date
                                               AND dsh.loc = tmp.to_loc
                                               AND dsh.item = tmp.tran_item
                                               AND tmp.forecast_need = -1
                                               AND tmp.like_tran_item IS NULL
                                               AND tmp.sister_store IS NULL)
                                UPDATE alloc_calc_need_temp target, use_this
                                   SET target.forecast_need = use_this.sales,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND target.to_loc = use_this.to_loc
                                   AND target.source_item = use_this.source_item
                                   AND target.tran_item = use_this.tran_item
                                   AND target.eow_date = use_this.eow_date;"
  
  Q_merge_like2_calc_need_temp: "WITH use_this 
                                              AS(SELECT DISTINCT tmp.alloc_no,
                                                        tmp.to_loc,
                                                        tmp.rule_many_to_one_id,
                                                        tmp.source_item,
                                                        tmp.tran_item,
                                                        tmp.eow_date,
                                                        SUM(
                                                              COALESCE (dsh.fcst_sales, 0)
                                                            * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                            * IF (tmp.like_weight IS NULL, 1.0,tmp.like_weight))
                                                            OVER (
                                                                PARTITION BY tmp.alloc_no,
                                                                             tmp.rule_many_to_one_id,
                                                                             tmp.to_loc,
                                                                             tmp.source_item,
                                                                             tmp.source_diff1_id,   
                                                                             tmp.eow_date)    sales
                                          FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                         WHERE     tmp.alloc_no = %s
                                               AND tmp.rule_level = 'ST'
                                               AND dsh.eow_date = tmp.eow_date
                                               AND dsh.loc = tmp.to_loc
                                               AND dsh.item = tmp.like_tran_item
                                               AND tmp.forecast_need = -1
                                               AND tmp.like_tran_item IS NOT NULL
                                               AND tmp.sister_store IS NULL)
                                UPDATE alloc_calc_need_temp target, use_this
                                   SET target.forecast_need = use_this.sales,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.alloc_no = use_this.alloc_no
                                   AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                   AND target.to_loc = use_this.to_loc
                                   AND target.source_item = use_this.source_item
                                   AND target.tran_item = use_this.tran_item
                                   AND target.eow_date = use_this.eow_date;"

  Q_merge_ss1_calc_need_temp: "WITH use_this 
                                         AS(SELECT DISTINCT               
                                                   tmp.alloc_no,
                                                   tmp.to_loc,
                                                   tmp.rule_many_to_one_id,
                                                   tmp.source_item,
                                                   tmp.tran_item,
                                                   tmp.eow_date,
                                                   SUM(
                                                         COALESCE (dsh.fcst_sales, 0)
                                                       * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                       * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight))
                                                       OVER (
                                                           PARTITION BY tmp.alloc_no,
                                                                        tmp.rule_many_to_one_id,
                                                                        tmp.to_loc,
                                                                        tmp.source_item,
                                                                        tmp.source_diff1_id,   
                                                                        tmp.eow_date)    sales
                                              FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                             WHERE     tmp.alloc_no = %s
                                                   AND %s = 'Y'
                                                   AND tmp.rule_level = 'ST'
                                                   AND dsh.eow_date = tmp.eow_date
                                                   AND dsh.loc = tmp.sister_store
                                                   AND dsh.item = tmp.tran_item
                                                   AND tmp.forecast_need = -1
                                                   AND tmp.like_tran_item IS NULL
                                                   AND tmp.sister_store IS NOT NULL)
                                    UPDATE alloc_calc_need_temp target, use_this
                                       SET target.forecast_need = use_this.sales,
                                           target.last_update_id = USER(),
                                           target.last_update_datetime = CURDATE()
                                     WHERE target.alloc_no = use_this.alloc_no
                                       AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                       AND target.to_loc = use_this.to_loc
                                       AND target.source_item = use_this.source_item
                                       AND target.tran_item = use_this.tran_item
                                       AND target.eow_date = use_this.eow_date;"
  
  Q_merge_ss2_calc_need_temp: "WITH use_this 
                                         AS(SELECT DISTINCT                   
                                                   tmp.alloc_no,
                                                   tmp.to_loc,
                                                   tmp.rule_many_to_one_id,
                                                   tmp.source_item,
                                                   tmp.tran_item,
                                                   tmp.eow_date,
                                                   SUM(
                                                         COALESCE (dsh.fcst_sales, 0)
                                                       * IF (tmp.weight IS NULL, 1.0,tmp.weight)
                                                       * IF (tmp.like_weight IS NULL, 1.0,tmp.like_weight)
                                                       * IF (tmp.sister_store_weight IS NULL, 1.0,tmp.sister_store_weight))
                                                       OVER (
                                                           PARTITION BY tmp.alloc_no,
                                                                        tmp.rule_many_to_one_id,
                                                                        tmp.to_loc,
                                                                        tmp.source_item,
                                                                        tmp.source_diff1_id,   
                                                                        tmp.eow_date)    sales
                                              FROM item_fcst dsh, alloc_calc_need_temp_1 tmp
                                             WHERE     tmp.alloc_no = %s
                                                   AND %s = 'Y'
                                                   AND tmp.rule_level = 'ST'
                                                   AND dsh.eow_date = tmp.eow_date
                                                   AND dsh.loc = tmp.sister_store
                                                   AND dsh.item = tmp.like_tran_item
                                                   AND tmp.forecast_need = -1
                                                   AND tmp.like_tran_item IS NOT NULL
                                                   AND tmp.sister_store IS NOT NULL)
                                    UPDATE alloc_calc_need_temp target, use_this
                                       SET target.forecast_need = use_this.sales,
                                           target.last_update_id = USER(),
                                           target.last_update_datetime = CURDATE()
                                    WHERE target.alloc_no = use_this.alloc_no
                                      AND target.rule_many_to_one_id = use_this.rule_many_to_one_id
                                      AND target.to_loc = use_this.to_loc
                                      AND target.source_item = use_this.source_item
                                      AND target.tran_item = use_this.tran_item
                                      AND target.eow_date = use_this.eow_date;"
finalize_sale_setup:
  Q_fetch_rule: "SELECT rule_level FROM alloc_rule WHERE alloc_no =%s;"
#Changes by shubham Start# 
  Q_merge_calc_dest_hier1: "WITH 
                              use_this
                                    AS (  SELECT i.alloc_no,
                                                 i.hier1,
                                                 i.to_loc,
                                                 SUM(i.need_value)     need_value
                                            FROM (  SELECT n.alloc_no,
                                                           n.hier1,
                                                           n.to_loc,
                                                           n.eow_date,
                                                             MAX(IF(n.sales_hist_need=-1, 0,n.sales_hist_need))
                                                           + MAX(IF(n.forecast_need=-1, 0,n.forecast_need))
                                                           + MAX(IF(n.plan_need=-1, 0,n.plan_need))
                                                           + MAX(IF(n.receipt_plan_need=-1, 0,n.receipt_plan_need))
                                                           + MAX(IF(n.corp_rule_need=-1, 0,n.corp_rule_need))
                                                           + MAX(IF(n.plan_reproject_need=-1, 0,n.plan_reproject_need)) need_value
                                                      FROM alloc_calc_need_temp n
                                                     WHERE n.alloc_no = %s 
                                                  GROUP BY n.alloc_no,
                                                           n.hier1,
                                                           n.to_loc,
                                                           n.eow_date) i
                                        GROUP BY i.alloc_no, i.hier1, i.to_loc)
                                UPDATE alloc_calc_destination_temp target, use_this
                                   SET target.need_value = use_this.need_value,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.hier1 = use_this.hier1
                                   AND target.to_loc = use_this.to_loc
                                   AND target.alloc_no = use_this.alloc_no;"
  
  Q_merge_calc_dest_hier2: "WITH 
                              use_this
                                    AS (  SELECT i.alloc_no,
                                                 i.hier1,
                                                 i.hier2,
                                                 i.to_loc,
                                                 SUM(i.need_value)     need_value
                                            FROM (  SELECT n.alloc_no,
                                                           n.hier1,
                                                           n.hier2,
                                                           n.to_loc,
                                                           n.eow_date,
                                                             MAX(IF(n.sales_hist_need=-1, 0,n.sales_hist_need))
                                                           + MAX(IF(n.forecast_need=-1, 0,n.forecast_need))
                                                           + MAX(IF(n.plan_need=-1, 0,n.plan_need))
                                                           + MAX(IF(n.receipt_plan_need=-1, 0,n.receipt_plan_need))
                                                           + MAX(IF(n.corp_rule_need=-1, 0, n.corp_rule_need))
                                                           + MAX(IF(n.plan_reproject_need=-1, 0,n.plan_reproject_need)) need_value
                                                      FROM alloc_calc_need_temp n
                                                     WHERE n.alloc_no = %s
                                                  GROUP BY n.alloc_no,
                                                           n.hier1,
                                                           n.hier2,
                                                           n.to_loc,
                                                           n.eow_date) i
                                        GROUP BY i.alloc_no,
                                                 i.hier1,
                                                 i.hier2,
                                                 i.to_loc)
                                UPDATE alloc_calc_destination_temp target, use_this
                                   SET target.need_value = use_this.need_value,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.hier1 = use_this.hier1
                                   AND target.hier2 = use_this.hier2
                                   AND target.to_loc = use_this.to_loc
                                   AND target.alloc_no = use_this.alloc_no;"
  
  Q_merge_calc_dest_hier3: "WITH 
                              use_this
                                    AS (  SELECT i.alloc_no,
                                                 i.hier1,
                                                 i.hier2,
                                                 i.hier3,
                                                 i.to_loc,
                                                 SUM(i.need_value)     need_value
                                            FROM (  SELECT n.alloc_no,
                                                           n.hier1,
                                                           n.hier2,
                                                           n.hier3,
                                                           n.to_loc,
                                                           n.eow_date,
                                                             MAX(IF(n.sales_hist_need=-1, 0,n.sales_hist_need))
                                                           + MAX(IF(n.forecast_need=-1, 0,n.forecast_need))
                                                           + MAX(IF(n.plan_need=-1, 0,n.plan_need))
                                                           + MAX(IF(n.receipt_plan_need=-1, 0,n.receipt_plan_need))
                                                           + MAX(IF(n.corp_rule_need=-1, 0,n.corp_rule_need))
                                                           + MAX(IF(n.plan_reproject_need=-1, 0,n.plan_reproject_need)) need_value
                                                      FROM alloc_calc_need_temp n
                                                     WHERE n.alloc_no = %s
                                                  GROUP BY n.alloc_no,
                                                           n.hier1,
                                                           n.hier2,
                                                           n.hier3,
                                                           n.to_loc,
                                                           n.eow_date) i
                                        GROUP BY i.alloc_no,
                                                 i.hier1,
                                                 i.hier2,
                                                 i.hier3,
                                                 i.to_loc)
                                UPDATE alloc_calc_destination_temp target, use_this
                                   SET target.need_value = use_this.need_value,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.hier1 = use_this.hier1
                                   AND target.hier2 = use_this.hier2
                                   AND target.hier3 = use_this.hier3
                                   AND target.to_loc = use_this.to_loc
                                   AND target.alloc_no = use_this.alloc_no;"
  
  Q_merge_calc_dest_style: "WITH 
                              use_this
                                    AS (  SELECT i.alloc_no,
                                                 i.source_item,
                                                 i.source_diff1_id,
                                                 i.source_diff2_id,
                                                 i.source_diff3_id,
                                                 i.source_diff4_id,
                                                 i.to_loc,
                                                 SUM(need_value)     need_value
                                            FROM (  SELECT n.alloc_no,
                                                           n.source_item,
                                                           n.source_diff1_id,
                                                           n.source_diff2_id,
                                                           n.source_diff3_id,
                                                           n.source_diff4_id,
                                                           n.to_loc,
                                                           n.eow_date,
                                                             MAX(IF(n.sales_hist_need=-1, 0,n.sales_hist_need))
                                                           + MAX(IF(n.forecast_need=-1, 0,n.forecast_need))
                                                           + MAX(IF(n.plan_need=-1, 0,n.plan_need))
                                                           + MAX(IF(n.receipt_plan_need=-1, 0,n.receipt_plan_need))
                                                           + MAX(IF(n.corp_rule_need=-1, 0,n.corp_rule_need))
                                                           + MAX(IF(n.plan_reproject_need=-1, 0,n.plan_reproject_need)) need_value
                                                      FROM alloc_calc_need_temp n
                                                     WHERE n.alloc_no = %s
                                                  GROUP BY n.alloc_no,
                                                           n.source_item,
                                                           n.source_diff1_id,
                                                           n.source_diff2_id,
                                                           n.source_diff3_id,
                                                           n.source_diff4_id,
                                                           n.to_loc,
                                                           n.eow_date) i
                                        GROUP BY i.alloc_no,
                                                 i.source_item,
                                                 i.source_diff1_id,
                                                 i.source_diff2_id,
                                                 i.source_diff3_id,
                                                 i.source_diff4_id,
                                                 i.to_loc) 
                                UPDATE alloc_calc_destination_temp target, use_this
                                   SET target.need_value = use_this.need_value,
                                       target.last_update_id = USER(),
                                       target.last_update_datetime = CURDATE()
                                 WHERE target.source_item = use_this.source_item
                                   AND COALESCE(target.source_diff1_id, '-1') = COALESCE(use_this.source_diff1_id, '-1')
                                   AND COALESCE(target.source_diff2_id, '-1') = COALESCE(use_this.source_diff2_id, '-1')
                                   AND COALESCE(target.source_diff3_id, '-1') = COALESCE(use_this.source_diff3_id, '-1')
                                   AND COALESCE(target.source_diff4_id, '-1') = COALESCE(use_this.source_diff4_id, '-1')
                                   AND target.to_loc = use_this.to_loc
                                   AND target.alloc_no = use_this.alloc_no;"
  
  Q_merge_calc_dest_sku: "WITH 
                          use_this
                                AS (  SELECT i.alloc_no,
                                             i.tran_item,
                                             i.to_loc,
                                             ROUND(SUM(i.need_value),0)    need_value 
                                        FROM (  SELECT n.alloc_no,
                                                       n.tran_item,
                                                       n.to_loc,
                                                       n.eow_date,
                                                         MAX(IF(n.sales_hist_need=-1, 0,n.sales_hist_need))
                                                       + MAX(IF(n.forecast_need=-1, 0,n.forecast_need))
                                                       + MAX(IF(n.plan_need=-1, 0,n.plan_need))
                                                       + MAX(IF(n.receipt_plan_need=-1, 0,n.receipt_plan_need))
                                                       + MAX(IF(n.corp_rule_need=-1, 0,n.corp_rule_need))
                                                       + MAX(IF(n.plan_reproject_need=-1, 0,n.plan_reproject_need)) need_value
                                                  FROM alloc_calc_need_temp n
                                                 WHERE n.alloc_no = %s
                                              GROUP BY n.alloc_no,
                                                       n.tran_item,
                                                       n.to_loc,
                                                       n.eow_date) i
                                    GROUP BY i.alloc_no, i.tran_item, i.to_loc)
                            UPDATE alloc_calc_destination_temp target, use_this
                               SET target.need_value = use_this.need_value,
                                   target.last_update_id = USER(),
                                   target.last_update_datetime = CURDATE()
                             WHERE target.tran_item = use_this.tran_item
                               AND target.to_loc = use_this.to_loc
                               AND target.alloc_no = use_this.alloc_no;"
  
  Q_merge_calc_dest: "WITH 
                      use_this
                            AS (  SELECT i.alloc_no,
                                         i.to_loc,
                                         SUM(i.need_value)     need_value
                                    FROM (  SELECT n.alloc_no,
                                                   n.to_loc,
                                                   n.eow_date,
                                                   IF (n.rule_level='S', n.tran_item,'-1') tran,
                                                   n.rule_many_to_one_id,
                                                     MAX(IF(n.sales_hist_need=-1, 0, n.sales_hist_need))
                                                   + MAX(IF(n.forecast_need=-1, 0,n.forecast_need))
                                                   + MAX(IF(n.plan_need=-1, 0,n.plan_need))
                                                   + MAX(IF(n.receipt_plan_need=-1, 0,n.receipt_plan_need))
                                                   + MAX(IF(n.corp_rule_need=-1, 0,n.corp_rule_need))
                                                   + MAX(IF(n.plan_reproject_need=-1, 0,n.plan_reproject_need)) need_value
                                              FROM alloc_calc_need_temp n
                                             WHERE n.alloc_no = %s
                                          GROUP BY n.alloc_no,
                                                   n.to_loc,
                                                   n.eow_date,
                                                   IF (n.rule_level='S', n.tran_item,'-1'),
                                                   n.rule_many_to_one_id) i
                                GROUP BY i.alloc_no, i.to_loc)
                        UPDATE alloc_calc_destination_temp target, use_this
                           SET target.need_value = use_this.need_value,
                               target.last_update_id = USER(),
                               target.last_update_datetime = CURDATE()
                         WHERE target.to_loc = use_this.to_loc
                           AND target.alloc_no = %s;"
                             
  # Q_merge_calc_dest_sku: "WITH use_this
                            # AS (SELECT i.alloc_no,
                                       # i.tran_item,
                                       # i.to_loc,
                                       # COALESCE(ROUND(SUM(i.need_value),0),0) need_value 
                                # FROM (SELECT n.alloc_no,
                                             # n.tran_item,
                                             # n.to_loc,
                                             # n.eow_date,
                                               # MAX(
                                                   # IF(n.sales_hist_need=-1, 0,
                                                           # n.sales_hist_need))
                                             # + MAX(
                                                   # IF(n.forecast_need=-1, 0,
                                                           # n.forecast_need))
                                             # + MAX(
                                                   # IF(n.plan_need=-1, 0,
                                                           # n.plan_need))
                                             # + MAX(
                                                   # IF(n.receipt_plan_need=-1, 0,
                                                           # n.receipt_plan_need))
                                             # + MAX(
                                                   # IF(n.corp_rule_need=-1, 0,
                                                           # n.corp_rule_need))
                                             # + MAX(
                                                   # IF(n.plan_reproject_need=-1, 0,
                                                           # n.plan_reproject_need))need_value
                                        # FROM alloc_calc_need_temp n
                                       # WHERE n.alloc_no = %s
                                       # GROUP BY n.alloc_no,
                                                # n.tran_item,
                                                # n.to_loc,
                                                # n.eow_date
                                       # ) i
                                 # GROUP BY i.alloc_no, i.tran_item, i.to_loc)
                          # UPDATE alloc_calc_destination_temp target, use_this
                             # SET target.need_value = COALESCE(use_this.need_value,0),
                                 # target.last_update_id = USER(),
                                 # target.last_update_datetime = CURDATE()
                           # WHERE target.tran_item = use_this.tran_item
                             # AND target.to_loc = use_this.to_loc
                             # AND target.alloc_no = use_this.alloc_no;"

#Changes by shubham end#
calculation_setup:
  Q_chk_alloc: "SELECT COALESCE(MAX(alloc_level),'$') alloc_level
                  FROM alloc_head
                 WHERE alloc_no = %s;"

  Q_fetch_rule: "SELECT rule_level 
                   FROM alloc_rule 
                  WHERE alloc_no =%s;"

#############################################################
# Created By - Phaneendra Allada                             #                
# File Name - aso_alc_calc_setup_sql.yaml                                #           #
#############################################################
ins_sku_for_pack_aacdt:
    Q_ins_calc_destination_temp: "INSERT INTO alloc_calc_destination_temp (alloc_no,
                                                                              item_type,
                                                                              source_item,
                                                                              source_item_level,
                                                                              source_tran_level,
                                                                              source_pack_ind,
                                                                              source_diff1_id,
                                                                              source_diff2_id,
                                                                              source_diff3_id,
                                                                              source_diff4_id,
                                                                              tran_item,
                                                                              tran_item_level,
                                                                              tran_tran_level,
                                                                              tran_pack_ind,
                                                                              tran_diff1_id,
                                                                              tran_diff2_id,
                                                                              tran_diff3_id,
                                                                              tran_diff4_id,
                                                                              hier1,
                                                                              hier2,
                                                                              hier3,
                                                                              to_loc,
                                                                              to_loc_type,
                                                                              to_loc_name,
                                                                              sister_store,
                                                                              sister_store_weight,
                                                                              assign_default_wh,
                                                                              clear_ind,
                                                                              item_loc_status,
                                                                              size_profile_qty,
                                                                              total_profile_qty,
                                                                              stock_on_hand,
                                                                              on_order,
                                                                              on_alloc,
                                                                              in_transit_qty,                                                   
                                                                              create_id,
                                                                              create_datetime,
                                                                              last_update_id,
                                                                              last_update_datetime)
                                           SELECT DISTINCT alloc_no,
                                                  NULL item_type,
                                                  pb.item source_item,
                                                  im.item_level source_item_level,
                                                  im.tran_level source_tran_level,
                                                  im.pack_ind source_pack_ind,
                                                  CASE WHEN im.aggr_diff_id = im.diff1 THEN im.aggr_diff_id ELSE NULL END source_diff1_id,
                                                  CASE WHEN im.aggr_diff_id = im.diff2 THEN im.aggr_diff_id ELSE NULL END source_diff2_id,
                                                  CASE WHEN im.aggr_diff_id = im.diff3 THEN im.aggr_diff_id ELSE NULL END source_diff3_id,
                                                  CASE WHEN im.aggr_diff_id = im.diff4 THEN im.aggr_diff_id ELSE NULL END source_diff4_id,
                                                  pb.item tran_item,
                                                  im.item_level tran_item_level,
                                                  im.tran_level tran_tran_level,
                                                  im.pack_ind tran_pack_ind,
                                                  im.diff1 tran_diff1_id,
                                                  im.diff2 tran_diff2_id,
                                                  im.diff3 tran_diff3_id,
                                                  im.diff4 tran_diff4_id,
                                                  im.hier1,
                                                  im.hier2,
                                                  im.hier3,
                                                  aacdt.to_loc,
                                                  aacdt.to_loc_type,
                                                  aacdt.to_loc_name,
                                                  aacdt.sister_store,
                                                  aacdt.sister_store_weight,
                                                  aacdt.assign_default_wh,
                                                  il.clearance_ind,
                                                  il.status item_loc_status,
                                                  aacdt.size_profile_qty,
                                                  aacdt.total_profile_qty,
                                                  0 stock_on_hand,
                                                  0 on_order,
                                                  0 on_alloc,
                                                  0 in_transit_qty,
                                                  aacdt.create_id,
                                                  aacdt.create_datetime,
                                                  aacdt.last_update_id,
                                                  aacdt.last_update_datetime 
                                             FROM alloc_calc_destination_temp aacdt, 
                                                  packitem_breakout pb, 
                                                  item_dtl im,
                                                  item_location il 
                                            WHERE aacdt.tran_item = pb.pack_no
                                              AND aacdt.alloc_no  = %s
                                              AND aacdt.item_type ='NSFSP'
                                              AND im.item         = pb.item
                                              AND il.item         = im.item
                                              AND il.location     = aacdt.to_loc
                                              AND NOT EXISTS (SELECT 1
                                                                FROM alloc_calc_destination_temp aacdti
                                                               WHERE aacdti.alloc_no  = aacdt.alloc_no
                                                                 AND aacdti.tran_item = pb.item
                                                                 AND aacdti.to_loc    = aacdt.to_loc);"
pop_pack_item_loc:
    Q_del_pack_item_loc_need: "DELETE FROM pack_item_loc_need  
                                           WHERE alloc_no = %s;"

    Q_del_alloc_comp_inv: "DELETE FROM alloc_comp_inv  
                                           WHERE alloc_no = %s;"
                                            
    Q_ins_pack_item_loc_need: "INSERT INTO pack_item_loc_need(alloc_no,
                                                              item,
                                                              to_loc,
                                                              gross_need,
                                                              soh,
                                                              assign_default_wh)
                                       SELECT alloc_no,
                                              source_item item,
                                              to_loc,
                                              need_value gross_need,
                                                   GREATEST(
                                                            COALESCE (dt.stock_on_hand, 0)
                                                          + COALESCE (dt.on_order, 0)
                                                          + COALESCE (dt.on_alloc, 0)
                                                          - COALESCE (dt.alloc_out, 0)
                                                          + COALESCE (dt.in_transit_qty, 0),
                                                         0) stock_on_hand,
                                               assign_default_wh
                                         FROM alloc_calc_destination_temp dt                                                         
                                        WHERE alloc_no = %s
                                          AND item_type IS NULL
                                          AND EXISTS  (SELECT 1
                                                         FROM packitem_breakout pb,
                                                              alloc_calc_destination_temp dti
                                                         WHERE dti.alloc_no = dt.alloc_no
                                                          AND dti.tran_item = pb.pack_no
                                                          AND dt.source_item = pb.item
                                                          AND dti.item_type = 'NSFSP');"

    Q_ins_alloc_comp_inv: "INSERT INTO alloc_comp_inv (alloc_no,
                                                       tran_item,
                                                       to_loc,
                                                       assign_default_wh,
                                                       gross_need,
                                                       stock_on_hand,
                                                       on_order,
                                                       on_alloc,
                                                       in_transit_qty)
                                  SELECT DISTINCT alloc_no,
                                                  tran_item,
                                                  to_loc,
                                                  assign_default_wh,
                                                  0 need_value,
                                                  IFNULL(stock_on_hand-alloc_out,0) stock_on_hand,
                                                  on_order,
                                                  on_alloc,
                                                  in_transit_qty
                                             FROM alloc_calc_destination_temp
                                            WHERE alloc_no = %s;" 
                            
    Q_del_alloc_calc_destination_temp: "DELETE FROM alloc_calc_destination_temp dt
                                        WHERE dt.alloc_no = %s
                                          AND item_type IS NULL
                                          AND NOT EXISTS (SELECT 1
                                                          FROM alloc_calc_allitemloc ail
                                                         WHERE dt.alloc_no  = ail.alloc_no
                                                           AND dt.tran_item = ail.tran_item
                                                           AND dt.to_loc    = ail.to_loc);"